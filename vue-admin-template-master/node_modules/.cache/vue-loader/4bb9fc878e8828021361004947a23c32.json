{"remainingRequest":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Scene.vue","mtime":1651999233292},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"Scene.vue","sourceRoot":"src/views/scene","sourcesContent":["<template>\r\n   <div class=\"app-container-play\">\r\n\r\n     <el-button @click=\"Import\" type=\"primary\" style=\"margin-left: 16px;\">\r\n        导入\r\n    </el-button>\r\n    <AudioPlayer/>\r\n     <!-- <div class=\"file-select-btn\" @click=\"$refs.fileId.click()\">\r\n      选择音乐\r\n      <input ref=\"fileId\" type=\"file\" class=\"file-input\" @change=\"getAudio\" />\r\n     </div> -->\r\n     <div id=\"webgl\" style=\"position:relative\"></div>\r\n     \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three/build/three.module.js'\r\nimport Stats from '../../store/Stats/stats.min.js'\r\nimport { OrbitControls } from \"../../lib/OrbitControls.js\";\r\nimport index, { GUI } from \"../../lib/dat.gui.module.js\";\r\n//辉光\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\r\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass.js';\r\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\r\n\r\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\r\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\r\nimport { range } from \"../../components/mode/range\";\r\nimport { node } from \"../../components/mode/node\";\r\nimport AudioPlayer from \"../scene/Player/Player.vue\"\r\nimport { randomRange } from \"../../components/mode/randomRange\";\r\nimport { Triangle } from \"../../components/mode/Triangle\";\r\nimport { Loader } from '../../lib/three.module.js';\r\nlet renderer,camera,scene,geometry,material,mesh,stats,controls;\r\n//  let container=document.getElementById('webgl');\r\nlet gui = {\r\n  R: 20,\r\n  G: 90,\r\n  B: 225,\r\n  TrianglesBgColor: 0x03a9f4,\r\n  TrianglesLineColor: 0x03a9f4,\r\n  lineColor: 0x00ffff,\r\n  rotate: false\r\n};\r\nlet audio, analyser; // 音频\r\nlet BarNodes; // 线\r\nlet composer;//合成器\r\nlet Triangles = [],\r\n  TriangleGroup;\r\nlet LineGroups=[];\r\nlet BarGroups=[];\r\nlet GeometryGroups=[];\r\nlet map=[];\r\nlet ColorMap=[];\r\nexport default {\r\n    name: 'Scene',\r\n    components:{\r\n      AudioPlayer\r\n    },\r\n    data() {\r\n      return {\r\n        clock:new THREE.Clock(),\r\n        scale:1,\r\n        Analyser:null,\r\n        isPlaying:false,\r\n        isLoaded:false,\r\n      }\r\n    },\r\n    watch:{\r\n      isLoaded:{\r\n        handler(){\r\n          if(this.isLoaded==true){\r\n             this.initLight();\r\n              this.AnalysisLine();\r\n              this.initBars();\r\n              this.initEffectComposer();\r\n              //that.initStats();\r\n            // initDatGUI();\r\n            this.animate();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      Import(){\r\n        this.isLoaded=false;\r\n        //每次导入改变值然后重新渲染\r\n        let that=this;\r\n        let input=document.createElement('input');\r\n        input.type=\"file\";\r\n        input.addEventListener(\"change\",function(){\r\n          let file=input.files[0];\r\n          if(file.type.indexOf(\"json\")>=0){\r\n            let url = null ;\r\n            if (window.createObjectURL!=undefined) { // basic\r\n                url = window.createObjectURL(file) ;\r\n            } else if (window.URL!=undefined) { // mozilla(firefox)\r\n                url = window.URL.createObjectURL(file) ;\r\n            } else if (window.webkitURL!=undefined) { // webkit or chrome\r\n                url = window.webkitURL.createObjectURL(file) ;\r\n            }\r\n            //根据url进行加载回调，可以防止\r\n        //     let reader=new FileReader();\r\n        //     //reader.readAsText(file);\r\n        //     reader.readAsDataURL(file);\r\n        // reader.onloadend = function(e) {\r\n        //   _that.audioLoad(e.target.result);\r\n        // };\r\n            \r\n\r\n             let loader=new THREE.ObjectLoader();\r\n             loader.load(url,\r\n              function(obj){\r\n                //加载完成后进行\r\n                scene=obj;\r\n                that.isLoaded=true;\r\n             \r\n              },\r\n              // onProgress callback\r\n\t            function ( xhr ) {\r\n\t\t          console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\r\n\t            },\r\n\r\n\t          // onError callback\r\n\t            function ( err ) {\r\n\t\t              console.error( 'An error happened'+err );\r\n              });\r\n\r\n            // let reader=new FileReader();\r\n            // reader.readAsText(file);\r\n            // reader.onloadend=function(){\r\n            //   let loader=new THREE.ObjectLoader();\r\n            //   loader.parse(JSON.parse(this.result),\r\n            //     function(obj){\r\n            //       scene=obj;\r\n            //     }\r\n            //   );\r\n              //scene=newscene;\r\n          }\r\n        });\r\n        input.click();\r\n      },\r\n      // 选择音频\r\n    // getAudio() {\r\n    //   let _that = this;\r\n    //   let objFile = this.$refs.fileId;\r\n    //   if (objFile.value === \"\") {\r\n    //     return false;\r\n    //   }\r\n    //   if (window.FileReader) {\r\n    //     let reader = new FileReader();\r\n    //     reader.readAsDataURL(objFile.files[0]);\r\n    //     reader.onloadend = function(e) {\r\n    //       _that.audioLoad(e.target.result);\r\n    //     };\r\n    //   }\r\n    // },\r\n    //  音频加载播放\r\n    // audioLoad(url) {\r\n    //   // let _that = this;\r\n\r\n    //   let audioLoader = new THREE.AudioLoader(); // 音频加载器\r\n    //   audioLoader.load(url, function(AudioBuffer) {\r\n    //     if (audio.isPlaying) {\r\n    //       audio.stop();\r\n    //       audio.setBuffer();\r\n    //     }\r\n    //     audio.setBuffer(AudioBuffer); // 音频缓冲区对象关联到音频对象audio\r\n    //     audio.setLoop(true); //是否循环\r\n    //     audio.setVolume(1); //音量\r\n    //     audio.play(); //播放\r\n    //     // 音频分析器和音频绑定，可以实时采集音频时域数据进行快速傅里叶变换\r\n    //     analyser = new THREE.AudioAnalyser(audio, 256 * 2);\r\n    //   });\r\n    // },\r\n    GetState(){\r\n      this.$bus.$on('PlayState',(isPlaying)=>{\r\n          this.isPlaying=isPlaying;\r\n      })\r\n    },\r\n    GetAudioData(){\r\n      let that=this;\r\n        this.$bus.$on('BindingAnalyser',(analyser)=>{\r\n          that.Analyser=analyser;\r\n        \r\n        })\r\n    },\r\n    initAudio(){\r\n      let listener=new THREE.AudioListener();\r\n      audio=new THREE.Audio(listener);\r\n    },\r\n      AnalysisLine(){\r\n       \r\n        \r\n        //获取变化线段\r\n        scene.traverse(function(obj){\r\n          if(obj.name.indexOf(\"音频线\")!=-1){\r\n            LineGroups.push(obj);\r\n            map.push({\r\n              uuid:obj.uuid,\r\n              x:obj.scale.x,\r\n              y:obj.scale.y,\r\n              z:obj.scale.z\r\n            });\r\n\r\n          }else if(obj.name.indexOf(\"音频谱\")!=-1){\r\n            BarGroups.push(obj);\r\n            map.push({\r\n              uuid:obj.uuid,\r\n              x:obj.scale.x,\r\n              y:obj.scale.y,\r\n              z:obj.scale.z\r\n            });\r\n           // console.log(obj.children[0].children[0]);\r\n            ColorMap.push({\r\n              uuid:obj.uuid,\r\n              r:obj.children[0].children[0].material.color.r,\r\n              g:obj.children[0].children[0].material.color.g,\r\n              b:obj.children[0].children[0].material.color.b,\r\n            });\r\n            console.log(obj.children[0].children[0].material.color);\r\n            console.log(ColorMap);\r\n\r\n          }else if(obj.type.indexOf('Mesh')!=-1&&obj.parent==scene){\r\n            //几何体\r\n            GeometryGroups.push(obj);\r\n            map.push({\r\n              uuid:obj.uuid,\r\n              x:obj.scale.x,\r\n              y:obj.scale.y,\r\n              z:obj.scale.z\r\n\r\n            });\r\n            console.log(GeometryGroups);\r\n\r\n          }\r\n        });\r\n      },\r\n       updateCircle(linesGroup,x,y,z) {\r\n      if (BarNodes) {\r\n        \r\n        linesGroup.scale.set(this.scale*x,this.scale*y,this.scale*z);\r\n        \r\n        const geometryA = linesGroup.children[0].geometry;\r\n        //outline\r\n        const AttributeA = geometryA.getAttribute(\"position\");\r\n        const geometryB = linesGroup.children[1].geometry;\r\n        //inline\r\n        const AttributeB = geometryB.getAttribute(\"position\");\r\n\r\n        const positions = BarNodes.map(value => {\r\n          return [value.positionA(), value.positionB()];\r\n        });\r\n        positions.forEach((position, index) => {\r\n          AttributeA.set([position[0].x, position[0].y], index * 3);\r\n          AttributeB.set([position[1].x, position[1].y], index * 3);\r\n          //前两线是outline和inline\r\n          const geometry = linesGroup.children[index+2].geometry;\r\n          const Attribute = geometry.getAttribute(\"position\");\r\n          Attribute.set(\r\n            [position[0].x, position[0].y, 0, position[1].x, position[1].y, 0],\r\n            0\r\n          );\r\n          Attribute.needsUpdate = true;\r\n        });\r\n        AttributeA.set(\r\n          [AttributeA.array[0], AttributeA.array[1]],\r\n          positions.length * 3\r\n        );\r\n        AttributeB.set(\r\n          [AttributeB.array[0], AttributeB.array[1]],\r\n          positions.length * 3\r\n        );\r\n        AttributeA.needsUpdate = true;\r\n        AttributeB.needsUpdate = true;\r\n      }\r\n    },\r\n\r\n        init(){\r\n            this.initRenderer();\r\n            this.initScene();\r\n            this.initCamera();\r\n            this.initControls();\r\n            \r\n            this.initAudio();\r\n            //this.initEffectComposer();\r\n            this.initStats();\r\n            // initDatGUI();\r\n            //this.animate();\r\n            \r\n        },\r\n        initControls() {\r\n          controls = new OrbitControls(camera, renderer.domElement);\r\n         // 如果使用animate方法时，将此函数删除\r\n         //controls.addEventListener( 'change', render );\r\n          // 使动画循环使用时阻尼或自转 意思是否有惯性\r\n          controls.enableDamping = true;\r\n          //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n         //controls.dampingFactor = 0.25;\r\n          //是否可以缩放\r\n          controls.enableZoom = false;\r\n          //是否自动旋转\r\n          controls.autoRotate = gui.rotate;\r\n          //设置相机距离原点的最远距离\r\n          controls.minDistance = 1;\r\n          //设置相机距离原点的最远距离\r\n          controls.maxDistance = 200;\r\n          //是否开启右键拖拽\r\n          controls.enablePan = false;\r\n        },\r\n        initLight() {\r\n          scene.add(new THREE.AmbientLight(0x444444));\r\n          let light = new THREE.PointLight(0xffffff);\r\n          light.position.set(80, 100, 50);\r\n          //告诉平行光需要开启阴影投射\r\n          light.castShadow = true;\r\n          scene.add(light);\r\n        },\r\n        initStats(){\r\n             stats = new Stats();\r\n             stats.domElement.style.position = 'absolute'; //绝对坐标  \r\n             stats.domElement.style.left = '0px';// (0,0)px,左上角  \r\n             stats.domElement.style.top = '0px';  \r\n            document.getElementById('webgl').appendChild(stats.domElement);\r\n\r\n        },\r\n        // updatePosition(){\r\n        //     mesh.position.set(controls.positionX,controls.positionY,controls.positionZ);\r\n        // },\r\n        //初始化渲染器\r\n        initRenderer(){\r\n            \r\n            \r\n            renderer=new THREE.WebGLRenderer({ antialias: true });//实例化渲染器\r\n            renderer.setSize(window.innerWidth*0.85,window.innerHeight*0.85);//设置宽高\r\n            document.getElementById('webgl').appendChild(renderer.domElement);//添加到dom\r\n        },\r\n        //初始化场景\r\n        initScene(){\r\n            \r\n            scene=new THREE.Scene();//实例化场景\r\n        //     scene.background = new THREE.CubeTextureLoader().load([\r\n        //   require('@/assets/skybox/right.jpg'),\r\n        //   require('@/assets/skybox/left.jpg'),\r\n        //   require('@/assets/skybox/top.jpg'),\r\n        //   require('@/assets/skybox/bottom.jpg'),\r\n        //   require('@/assets/skybox/front.jpg'),\r\n        //   require('@/assets/skybox/back.jpg')\r\n        // ]);\r\n\r\n        },\r\n        //初始化相机\r\n        initCamera(){\r\n            camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,200)\r\n            //实例化相机】\r\n            camera.position.set(0,0,150);\r\n        },\r\n        //创建模型\r\n\r\n\r\n        //运行动画\r\n        animate(){\r\n            requestAnimationFrame(this.animate);//循环调用函数\r\n\r\n            // mesh.rotation.x+=0.01;\r\n            // // //每帧网格模型沿x轴旋转0.01弧度\r\n            // mesh.rotation.y+=0.02;\r\n            // //每帧网格模型沿y轴旋转0.02弧度\r\n            // //stats.update();//更新性能检测框\r\n\r\n            stats.update();\r\n            controls.update();\r\n            if(this.Analyser&&this.isPlaying){\r\n              let bufferLength=this.Analyser.frequencyBinCount;\r\n              let arr=new Uint8Array(bufferLength);\r\n              this.Analyser.getByteFrequencyData(arr);\r\n              //let arr=analyser.getFrequencyData();\r\n              const Delta=this.clock.getDelta();\r\n              BarNodes.forEach((node,index,array)=>{\r\n                node.strength(arr[index % array.length]*0.1);\r\n                node.transition(Delta);\r\n               \r\n              });\r\n              //事实上arr值最大255？？？？？？\r\n              let that=this;\r\n               this.scale=1+arr[Math.ceil(arr.length*0.05)]/500;\r\n               if(LineGroups.length>0){\r\n                  LineGroups.forEach(function(obj){\r\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\r\n                   \r\n                    that.updateCircle(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\r\n                });\r\n               }\r\n               if(BarGroups.length>0){\r\n                 BarGroups.forEach(function(obj){\r\n                  \r\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\r\n                    const BarColor=ColorMap.filter((item)=>item.uuid==obj.uuid);\r\n                    // console.log(BarColor[0].r);\r\n                    // console.log(BarColor[0].g);\r\n                    // console.log(BarColor[0].b);\r\n                    that.updateBars(arr,obj,scaledata[0].x,scaledata[0].y,scaledata[0].z,\r\n                                   BarColor[0].r,BarColor[0].g,BarColor[0].b);\r\n                 });\r\n               };\r\n               if(GeometryGroups.length>0){\r\n                 GeometryGroups.forEach(function (obj){\r\n                   const scaledata=map.filter((item)=>item.uuid==obj.uuid);\r\n                   that.updateGeometry(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\r\n\r\n                 });\r\n               }\r\n               \r\n\r\n            }\r\n            composer.render();//使用后期处理通道渲染\r\n        },\r\n        updateGeometry(Geometry,x,y,z){\r\n            Geometry.scale.set(this.scale*x,this.scale*y,this.scale*z);\r\n        },\r\n        updateBars(arr,barGroup,x,y,z,r,g,b){\r\n           if(barGroup){\r\n              barGroup.rotation.z += 0.002;\r\n              barGroup.scale.set(this.scale*x, this.scale*y, this.scale*z);\r\n              barGroup.children.forEach((elem,index)=>{\r\n                //记录的原rgb值是0-1的浮点值，需要根据频率数值转换\r\n                if(r>0){\r\n                   elem.children[0].material.color.r= arr[index] *r/ 255;\r\n\r\n                }\r\n               if(g>0){\r\n                  elem.children[0].material.color.g=arr[index]*g/255;\r\n               }\r\n                \r\n                if(b>0){\r\n                  elem.children[0].material.color.b=arr[index]*b/255;\r\n                }\r\n               \r\n                if(arr[index]===0){\r\n                  elem.scale.set(1,1,1);\r\n                }else{\r\n                   let m = arr[index] / 20;\r\n                   let targetRange = Math.max(\r\n                  arr[index] / 20 - arr[index - 1] / 20,0);\r\n              if (m < targetRange) {\r\n                m = targetRange;\r\n              }\r\n\r\n              elem.scale.set(1, m, 1);\r\n                }\r\n\r\n              });\r\n           }\r\n        },\r\n        initBars(){\r\n          BarNodes=range(0, 256).map(index => {\r\n            return new node(\r\n              20,\r\n              ((index / 256) * 360 + 45) % 360,\r\n              new THREE.Vector2(0, 0)\r\n            );\r\n          });\r\n        },\r\n        //后期处理\r\n        initEffectComposer(){\r\n            composer=new EffectComposer(renderer);\r\n            var renderPass=new RenderPass(scene,camera);\r\n            composer.addPass(renderPass);\r\n            //RenderPass通常位于过程链的开始，以便将渲染好的场景作为输入来提供给下一个后期处理步骤。\r\n            //CopyShader是为了能将结果输出，普通的通道一般都是不能输出的，要靠CopyShader进行输出\r\n             const copyShader = new ShaderPass(CopyShader);\r\n            copyShader.renderToScreen = true;\r\n            //这个参数的目的是马上将当前的内容输出\r\n            this.initBloomPass();\r\n            composer.addPass(copyShader);\r\n        },\r\n        initBloomPass(){\r\n          let params = {\r\n            exposure: 0.5,\r\n            bloomStrength: 1,\r\n             bloomThreshold: 0,\r\n            bloomRadius: 0.8\r\n          };\r\n          let bloomPass=new UnrealBloomPass(\r\n            new THREE.Vector2(window.innerWidth*0.85,window.innerHeight*0.85),\r\n              1.5,\r\n              0.2,\r\n              0\r\n          );\r\n          bloomPass.threshold = params.bloomThreshold;\r\n          bloomPass.strength = params.bloomStrength;\r\n          bloomPass.radius = params.bloomRadius;\r\n          composer.addPass(bloomPass);\r\n\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n        this.init();\r\n        this.GetAudioData();\r\n        this.GetState();\r\n        \r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}