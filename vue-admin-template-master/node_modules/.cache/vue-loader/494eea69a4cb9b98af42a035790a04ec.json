{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue","mtime":1652875338763},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Player.vue","sourceRoot":"src/views/scene/Player","sourcesContent":["<template>\n  <div class=\"AudioViewPlayer\" >\n      <div class=\"Control\">\n\n        <div class=\"Buttons\">\n          <audio></audio>\n          <span class=\"Play-Pause\" @click=\"play_pause\">\n            <svg-icon v-if=\"isPlaying\" icon-class=\"pause\" className=\"player\"></svg-icon>\n            <svg-icon v-else icon-class=\"play\" className=\"player\"></svg-icon>\n          </span>\n\n\n          <span class=\"File\" @click=\"loadfile\">\n            <svg-icon  icon-class=\"file\"  className=\"file\"></svg-icon>\n          </span>\n          <div class=\"Text\" style=\"width: 85%;text-align: center\">\n            <i v-if=\"fileName==''\">暂无文件加载</i>\n            <i v-else>{{ fileName }}</i>\n            <el-slider  v-model=\"playedPercentage\" :show-tooltip=\"false\" style=\"width:100%\" @change=\"changeprocess\"></el-slider>\n          </div>\n\n\n\n        </div>\n\n\n\n\n\n        <!--          <button @click=\"play\" class=\"Play\">播放</button>-->\n        <!--          <button @click=\"pause\" class=\"Pause\">暂停</button>-->\n        <!--          <input id=\"MP3File\" @change=\"LoaderFile\" type=\"file\" class=\"Select\"/>-->\n        <!--&lt;!&ndash;          <el-progress :percentage=\"playedPercentage\" :show-text=false></el-progress>&ndash;&gt;-->\n        <!--          <el-slider v-model=\"playedPercentage\" :show-tooltip=\"false\"></el-slider>-->\n      </div>\n\n\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n    name:'AudioPlayer',\n    data() {\n        return {\n            musicBuffer:null,\n            //缓冲数据\n            isLoading:false,\n            //判断是否加载音乐\n            isPlaying:false,\n            //是否正在播放音乐\n            fileName:'',\n            //音乐名\n            playedTime:0,\n            //播放时间\n            audioCtx:null,\n            //音频上下文\n            audioBufferSourceNode:null,\n            //音频节点\n            fileReader:null,\n            //文件读取\n            analyser:null,\n            //分析器\n            fileDuration:0,\n            //音乐时长\n            timer:0,\n\n          //playedPercentage: 0\n            //playedPercentage:0\n          //playedPercentage:0\n\n        }\n    },\n    computed:{\n        playedPercentage:{\n            get(){\n                if(this.fileDuration>0){\n                    return this.playedTime*100/this.fileDuration;\n\n                }else{\n                    return 0;\n                }\n            },\n            set(percentage){\n\n                this.playedTime=percentage*this.fileDuration/100;\n\n            }\n        }\n    },\n   watch:{\n        isPlaying:{\n            handler(){\n                this.$bus.$emit('PlayState',this.isPlaying);\n            },\n            deep:true,\n            immediate:true\n        }\n    },\n    mounted() {\n        this.initContext();\n\n\n    },\n    methods: {\n      changeprocess(){\n        if(!this.isLoading){\n          this.$message.error(\"未加载媒体\");\n          this.playedTime=0;\n        }else{\n          if(this.isPlaying){\n            //正在播放时改变\n            this.play_pause();\n            this.play_pause();\n          }\n          else{\n            //暂停时改变\n            this.play_pause();\n          }\n        }\n      },\n\n      loadfile(){\n        let that=this;\n        let file;\n        let input=document.createElement('input');\n        input.type=\"file\";\n        input.addEventListener(\"change\",function(){\n             file=input.files[0];\n          that.fileName=file.name;\n          that.filereader=new FileReader();\n          that.filereader.readAsArrayBuffer(file);\n          that.filereader.onload=(event)=>{\n            that.audioCtx.decodeAudioData(event.target.result,(buffer)=>{\n              that.musicBuffer=buffer;\n              //先存音频数据\n              that.isLoading=true;\n              that.fileDuration=buffer.duration;\n\n              that.AnalyserData();\n            })\n            //音频数据\n          }\n        });\n        input.click();\n      },\n      play_pause(){\n        const player=document.querySelector('.Play-Pause');\n        //console.log(player);\n        if(!this.isLoading){\n          this.$message.error(\"未加载媒体\");\n\n        }else{\n          if(!this.isPlaying){\n            //只有每次播放时才建立，因为start只能一次\n            this.audioBufferSourceNode=this.audioCtx.createBufferSource();\n            //一开始进行初始化\n            this.audioBufferSourceNode.buffer=this.musicBuffer;\n            //播放时才去加载数据\n            this.audioBufferSourceNode.connect(this.audioCtx.destination);\n            //连接\n            this.audioBufferSourceNode.connect(this.analyser);\n            //连接分析器\n            this.audioBufferSourceNode.start(0,this.playedTime);\n            //播放\n            player.classList.add('active');\n\n            this.isPlaying=true;\n            this.timer=setInterval(()=>{\n              if(this.playedTime<this.fileDuration){\n                this.playedTime+=0.1;\n              }\n              else{\n                this.playedTime=0;\n                this.audioBufferSourceNode.stop();\n                this.audioBufferSourceNode.disconnect();\n                this.isPlaying=false;\n                player.classList.remove('active');\n                clearInterval(this.timer);\n\n              }\n            },100);\n            //实时更新进度条，每100毫秒即0.1秒更新一次，\n          }\n          else{\n            this.audioBufferSourceNode.stop();\n            this.audioBufferSourceNode.disconnect();\n            this.isPlaying=false;\n            player.classList.remove('active');\n            clearInterval(this.timer);\n          }\n\n        }\n\n      },\n        initContext(){\n            const AudioContext = window.AudioContext || window.webkitAudioContext;\n            this.audioCtx=new AudioContext();\n            //创建上下文\n\n            //创建缓冲节点\n           this.analyser=this.audioCtx.createAnalyser();\n        },\n      // play(){\n      //       if(!this.isLoading){\n      //           alert('未加载媒体');\n      //       }else{\n      //           if(!this.isPlaying){\n      //              //只有每次播放时才建立，因为start只能一次\n      //             this.audioBufferSourceNode=this.audioCtx.createBufferSource();\n      //               //一开始进行初始化\n      //           this.audioBufferSourceNode.buffer=this.musicBuffer;\n      //           //播放时才去加载数据\n      //           this.audioBufferSourceNode.connect(this.audioCtx.destination);\n      //           //连接\n      //           this.audioBufferSourceNode.connect(this.analyser);\n      //           //连接分析器\n      //           this.audioBufferSourceNode.start(this.playedTime,this.playedTime);\n      //           //播放\n      //\n      //\n      //           this.isPlaying=true;\n      //           this.timer=setInterval(()=>{\n      //               if(this.playedTime<this.fileDuration){\n      //                   this.playedTime+=0.1;\n      //               }\n      //               else{\n      //                   this.playedTime=0;\n      //                   //this.isPlaying=false;\n      //                   clearInterval(this.timer);\n      //\n      //               }\n      //           },100);\n      //           //实时更新进度条，每100毫秒即0.1秒更新一次，\n      //           }\n      //\n      //       }\n      //\n      //\n      //   },\n      //   pause(){\n      //       if(!this.isLoading){\n      //           alert('未加载媒体');\n      //       }\n      //       else{\n      //           if(this.isPlaying){\n      //           this.audioBufferSourceNode.stop();\n      //           this.audioBufferSourceNode.disconnect();\n      //            this.isPlaying=false;\n      //             this.player.classList.remove(' active');\n      //           clearInterval(this.timer);\n      //           }\n      //\n      //\n      //       }\n      //\n      //   },\n      //   LoaderFile(e){\n      //       let file=e.target.files[0];\n      //       this.fileName=file.name;\n      //       this.filereader=new FileReader();\n      //       this.filereader.readAsArrayBuffer(file);\n      //       this.filereader.onload=(event)=>{\n      //       this.audioCtx.decodeAudioData(event.target.result,(buffer)=>{\n      //           this.musicBuffer=buffer;\n      //           //先存音频数据\n      //           this.isLoading=true;\n      //           this.fileDuration=buffer.duration;\n      //\n      //           this.AnalyserData();\n      //       })\n      //       //音频数据\n      //       }\n      //   },\n        AnalyserData(){\n            this.analyser.fftSize=512;\n            //512是最合适的值\n            // let bufferLength=analyser.frequencyBinCount;\n            // let dataArray=new Uint8Array(bufferLength);\n            // this.analyser.getByteFrequencyData(dataArray);\n            this.$bus.$emit('BindingAnalyser',this.analyser);\n        }\n\n    },\n}\n</script>\n\n<style lang='scss' >\n.Control{\n\n  position: relative;\n  width: 100%;\n  height: 85px;\n  background: #fbfbfb;\n  border: 2px solid #fff;\n  padding: 20px 30px;\n  box-shadow: -10px -10px 15px #fff,\n              10px 10px 15px rgba(0, 0, 0, 0.1),\n              inset -5px -5px 15px #fff,\n              inset 5px 5px 15px rgba(0,0,0,0.1);\n  .Buttons{\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width:100%;\n    .Play-Pause{\n      .player{\n        font-size: 3em;\n      }\n    }\n    .File{\n      .file{\n        font-size: 1.5em;\n      }\n    }\n\n  }\n  .Buttons span{\n    position: relative;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    background: #ffffff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //color: #777777;\n    cursor: pointer;\n    box-shadow: inset 0 -5px 5px rgba(0,0,0,0.1),\n                0 5px 10px rgba(0,0,0,0.1),\n                0 10px 15px rgba(0,0,0,0.1);\n  }\n  .Buttons span.active{\n    box-shadow: inset 0 -7px 5px rgba(0,0,0,0.025),\n                inset 0 5px 10px rgba(0,0,0,0.15);\n  }\n  .Buttons span:active{\n    color: #995f99;\n    box-shadow: inset 0 -7px 5px rgba(0,0,0,0.025),\n    inset 0 5px 10px rgba(0,0,0,0.15);\n  }\n\n\n\n\n}\n</style>\n"]}]}