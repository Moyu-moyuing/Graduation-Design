{"remainingRequest":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue","mtime":1651922161812},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOidBdWRpb1BsYXllcicsDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIG11c2ljQnVmZmVyOm51bGwsDQogICAgICAgICAgICAvL+e8k+WGsuaVsOaNrg0KICAgICAgICAgICAgaXNMb2FkaW5nOmZhbHNlLA0KICAgICAgICAgICAgLy/liKTmlq3mmK/lkKbliqDovb3pn7PkuZANCiAgICAgICAgICAgIGlzUGxheWluZzpmYWxzZSwNCiAgICAgICAgICAgIC8v5piv5ZCm5q2j5Zyo5pKt5pS+6Z+z5LmQDQogICAgICAgICAgICBmaWxlTmFtZTonJywNCiAgICAgICAgICAgIC8v6Z+z5LmQ5ZCNDQogICAgICAgICAgICBwbGF5ZWRUaW1lOjAsDQogICAgICAgICAgICAvL+aSreaUvuaXtumXtA0KICAgICAgICAgICAgYXVkaW9DdHg6bnVsbCwNCiAgICAgICAgICAgIC8v6Z+z6aKR5LiK5LiL5paHDQogICAgICAgICAgICBhdWRpb0J1ZmZlclNvdXJjZU5vZGU6bnVsbCwNCiAgICAgICAgICAgIC8v6Z+z6aKR6IqC54K5DQogICAgICAgICAgICBmaWxlUmVhZGVyOm51bGwsDQogICAgICAgICAgICAvL+aWh+S7tuivu+WPlg0KICAgICAgICAgICAgYW5hbHlzZXI6bnVsbCwNCiAgICAgICAgICAgIC8v5YiG5p6Q5ZmoDQogICAgICAgICAgICBmaWxlRHVyYXRpb246MCwNCiAgICAgICAgICAgIC8v6Z+z5LmQ5pe26ZW/DQogICAgICAgICAgICB0aW1lcjowDQoNCiAgICAgICAgfQ0KICAgIH0sDQogICB3YXRjaDp7DQogICAgICAgIGlzUGxheWluZzp7DQogICAgICAgICAgICBoYW5kbGVyKCl7DQogICAgICAgICAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdQbGF5U3RhdGUnLHRoaXMuaXNQbGF5aW5nKTsNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBkZWVwOnRydWUsDQogICAgICAgICAgICBpbW1lZGlhdGU6dHJ1ZQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICB0aGlzLmluaXRDb250ZXh0KCk7DQoNCg0KICAgIH0sDQogICAgbWV0aG9kczogew0KICAgICAgICBpbml0Q29udGV4dCgpew0KICAgICAgICAgICAgY29uc3QgQXVkaW9Db250ZXh0ID0gd2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0Ow0KICAgICAgICAgICAgdGhpcy5hdWRpb0N0eD1uZXcgQXVkaW9Db250ZXh0KCk7DQogICAgICAgICAgICAvL+WIm+W7uuS4iuS4i+aWhw0KICAgICAgICAgICANCiAgICAgICAgICAgIC8v5Yib5bu657yT5Yay6IqC54K5DQogICAgICAgICAgIHRoaXMuYW5hbHlzZXI9dGhpcy5hdWRpb0N0eC5jcmVhdGVBbmFseXNlcigpOw0KICAgICAgICB9LA0KICAgICAgICBwbGF5KCl7DQogICAgICAgICAgICBpZighdGhpcy5pc0xvYWRpbmcpew0KICAgICAgICAgICAgICAgIGFsZXJ0KCfmnKrliqDovb3lqpLkvZMnKTsNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIGlmKCF0aGlzLmlzUGxheWluZyl7DQogICAgICAgICAgICAgICAgICAgLy/lj6rmnInmr4/mrKHmkq3mlL7ml7bmiY3lu7rnq4vvvIzlm6DkuLpzdGFydOWPquiDveS4gOasoQ0KICAgICAgICAgICAgICAgICAgdGhpcy5hdWRpb0J1ZmZlclNvdXJjZU5vZGU9dGhpcy5hdWRpb0N0eC5jcmVhdGVCdWZmZXJTb3VyY2UoKTsNCiAgICAgICAgICAgICAgICAgICAgLy/kuIDlvIDlp4vov5vooYzliJ3lp4vljJYNCiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5idWZmZXI9dGhpcy5tdXNpY0J1ZmZlcjsNCiAgICAgICAgICAgICAgICAvL+aSreaUvuaXtuaJjeWOu+WKoOi9veaVsOaNrg0KICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9CdWZmZXJTb3VyY2VOb2RlLmNvbm5lY3QodGhpcy5hdWRpb0N0eC5kZXN0aW5hdGlvbik7DQogICAgICAgICAgICAgICAgLy/ov57mjqUNCiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5jb25uZWN0KHRoaXMuYW5hbHlzZXIpOw0KICAgICAgICAgICAgICAgIC8v6L+e5o6l5YiG5p6Q5ZmoDQogICAgICAgICAgICAgICAgdGhpcy5hdWRpb0J1ZmZlclNvdXJjZU5vZGUuc3RhcnQodGhpcy5wbGF5ZWRUaW1lLHRoaXMucGxheWVkVGltZSk7DQogICAgICAgICAgICAgICAgLy/mkq3mlL4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgdGhpcy5pc1BsYXlpbmc9dHJ1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnRpbWVyPXNldEludGVydmFsKCgpPT57DQogICAgICAgICAgICAgICAgICAgIGlmKHRoaXMucGxheWVkVGltZTx0aGlzLmZpbGVEdXJhdGlvbil7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllZFRpbWUrPTAuMTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBlbHNlew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZWRUaW1lPTA7DQogICAgICAgICAgICAgICAgICAgICAgICAvL3RoaXMuaXNQbGF5aW5nPWZhbHNlOw0KICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsNCg0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwxMDApOw0KICAgICAgICAgICAgICAgIC8v5a6e5pe25pu05paw6L+b5bqm5p2h77yM5q+PMTAw5q+r56eS5Y2zMC4x56eS5pu05paw5LiA5qyh77yMIA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgDQogICAgICAgIH0sDQogICAgICAgIHBhdXNlKCl7DQogICAgICAgICAgICBpZighdGhpcy5pc0xvYWRpbmcpew0KICAgICAgICAgICAgICAgIGFsZXJ0KCfmnKrliqDovb3lqpLkvZMnKTsgDQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlew0KICAgICAgICAgICAgICAgIGlmKHRoaXMuaXNQbGF5aW5nKXsNCiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5zdG9wKCk7DQogICAgICAgICAgICAgICAgdGhpcy5hdWRpb0J1ZmZlclNvdXJjZU5vZGUuZGlzY29ubmVjdCgpOw0KICAgICAgICAgICAgICAgICB0aGlzLmlzUGxheWluZz1mYWxzZTsNCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgDQogICAgICAgIH0sDQogICAgICAgIExvYWRlckZpbGUoZSl7DQogICAgICAgICAgICBsZXQgZmlsZT1lLnRhcmdldC5maWxlc1swXTsNCiAgICAgICAgICAgIHRoaXMuZmlsZU5hbWU9ZmlsZS5uYW1lOw0KICAgICAgICAgICAgdGhpcy5maWxlcmVhZGVyPW5ldyBGaWxlUmVhZGVyKCk7DQogICAgICAgICAgICB0aGlzLmZpbGVyZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7DQogICAgICAgICAgICB0aGlzLmZpbGVyZWFkZXIub25sb2FkPShldmVudCk9PnsNCiAgICAgICAgICAgIHRoaXMuYXVkaW9DdHguZGVjb2RlQXVkaW9EYXRhKGV2ZW50LnRhcmdldC5yZXN1bHQsKGJ1ZmZlcik9PnsNCiAgICAgICAgICAgICAgICB0aGlzLm11c2ljQnVmZmVyPWJ1ZmZlcjsNCiAgICAgICAgICAgICAgICAvL+WFiOWtmOmfs+mikeaVsOaNrg0KICAgICAgICAgICAgICAgIHRoaXMuaXNMb2FkaW5nPXRydWU7DQogICAgICAgICAgICAgICAgdGhpcy5maWxlRHVyYXRpb249YnVmZmVyLmR1cmF0aW9uOw0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHRoaXMuQW5hbHlzZXJEYXRhKCk7DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLy/pn7PpopHmlbDmja4NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgQW5hbHlzZXJEYXRhKCl7DQogICAgICAgICAgICB0aGlzLmFuYWx5c2VyLmZmdFNpemU9NTEyOw0KICAgICAgICAgICAgLy81MTLmmK/mnIDlkIjpgILnmoTlgLwNCiAgICAgICAgICAgIC8vIGxldCBidWZmZXJMZW5ndGg9YW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQ7DQogICAgICAgICAgICAvLyBsZXQgZGF0YUFycmF5PW5ldyBVaW50OEFycmF5KGJ1ZmZlckxlbmd0aCk7DQogICAgICAgICAgICAvLyB0aGlzLmFuYWx5c2VyLmdldEJ5dGVGcmVxdWVuY3lEYXRhKGRhdGFBcnJheSk7DQogICAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ0JpbmRpbmdBbmFseXNlcicsdGhpcy5hbmFseXNlcik7DQogICAgICAgIH0NCg0KICAgIH0sDQp9DQo="},{"version":3,"sources":["Player.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Player.vue","sourceRoot":"src/views/scene/Player","sourcesContent":["<template>\r\n  <div class=\"AudioViewPlayer\">\r\n      <div class=\"Control\">\r\n          <button @click=\"play\" class=\"Play\">播放</button>\r\n          <button @click=\"pause\" class=\"Pause\">暂停</button>\r\n          <input id=\"MP3File\" @change=\"LoaderFile\" type=\"file\" class=\"Select\"/>\r\n          <el-progress :percentage=\"playedTime\" :show-text=false></el-progress>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name:'AudioPlayer',\r\n    data() {\r\n        return {\r\n            musicBuffer:null,\r\n            //缓冲数据\r\n            isLoading:false,\r\n            //判断是否加载音乐\r\n            isPlaying:false,\r\n            //是否正在播放音乐\r\n            fileName:'',\r\n            //音乐名\r\n            playedTime:0,\r\n            //播放时间\r\n            audioCtx:null,\r\n            //音频上下文\r\n            audioBufferSourceNode:null,\r\n            //音频节点\r\n            fileReader:null,\r\n            //文件读取\r\n            analyser:null,\r\n            //分析器\r\n            fileDuration:0,\r\n            //音乐时长\r\n            timer:0\r\n\r\n        }\r\n    },\r\n   watch:{\r\n        isPlaying:{\r\n            handler(){\r\n                this.$bus.$emit('PlayState',this.isPlaying);\r\n            },\r\n            deep:true,\r\n            immediate:true\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initContext();\r\n\r\n\r\n    },\r\n    methods: {\r\n        initContext(){\r\n            const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n            this.audioCtx=new AudioContext();\r\n            //创建上下文\r\n           \r\n            //创建缓冲节点\r\n           this.analyser=this.audioCtx.createAnalyser();\r\n        },\r\n        play(){\r\n            if(!this.isLoading){\r\n                alert('未加载媒体');\r\n            }else{\r\n                if(!this.isPlaying){\r\n                   //只有每次播放时才建立，因为start只能一次\r\n                  this.audioBufferSourceNode=this.audioCtx.createBufferSource();\r\n                    //一开始进行初始化\r\n                this.audioBufferSourceNode.buffer=this.musicBuffer;\r\n                //播放时才去加载数据\r\n                this.audioBufferSourceNode.connect(this.audioCtx.destination);\r\n                //连接\r\n                this.audioBufferSourceNode.connect(this.analyser);\r\n                //连接分析器\r\n                this.audioBufferSourceNode.start(this.playedTime,this.playedTime);\r\n                //播放\r\n                \r\n              \r\n                this.isPlaying=true;\r\n                this.timer=setInterval(()=>{\r\n                    if(this.playedTime<this.fileDuration){\r\n                        this.playedTime+=0.1;\r\n                    }\r\n                    else{\r\n                        this.playedTime=0;\r\n                        //this.isPlaying=false;\r\n                        clearInterval(this.timer);\r\n\r\n                    }\r\n                },100);\r\n                //实时更新进度条，每100毫秒即0.1秒更新一次， \r\n                }\r\n                \r\n            }\r\n\r\n            \r\n        },\r\n        pause(){\r\n            if(!this.isLoading){\r\n                alert('未加载媒体'); \r\n            }\r\n            else{\r\n                if(this.isPlaying){\r\n                this.audioBufferSourceNode.stop();\r\n                this.audioBufferSourceNode.disconnect();\r\n                 this.isPlaying=false;\r\n                clearInterval(this.timer);\r\n                }\r\n                \r\n                \r\n            }\r\n           \r\n        },\r\n        LoaderFile(e){\r\n            let file=e.target.files[0];\r\n            this.fileName=file.name;\r\n            this.filereader=new FileReader();\r\n            this.filereader.readAsArrayBuffer(file);\r\n            this.filereader.onload=(event)=>{\r\n            this.audioCtx.decodeAudioData(event.target.result,(buffer)=>{\r\n                this.musicBuffer=buffer;\r\n                //先存音频数据\r\n                this.isLoading=true;\r\n                this.fileDuration=buffer.duration;\r\n                \r\n                this.AnalyserData();\r\n            })\r\n            //音频数据\r\n            }\r\n        },\r\n        AnalyserData(){\r\n            this.analyser.fftSize=512;\r\n            //512是最合适的值\r\n            // let bufferLength=analyser.frequencyBinCount;\r\n            // let dataArray=new Uint8Array(bufferLength);\r\n            // this.analyser.getByteFrequencyData(dataArray);\r\n            this.$bus.$emit('BindingAnalyser',this.analyser);\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n\r\n</style>"]}]}