{"remainingRequest":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\vue-admin-template-master\\src\\views\\Editor\\Attribute\\structure\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\vue-admin-template-master\\src\\views\\Editor\\Attribute\\structure\\index.vue","mtime":1651483625125},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAvKiDpnIDopoHmt7vliqDlh6DkuKrmlrnms5XlkozpnIDmsYLvvJoKIDHjgIHmlLnlj5jpopzoibIg4oiaCiAy44CB5pS55Y+Y5qyn5ouJ6KeS5Y+Y5YyWIOKImgogM+OAgeaUueWPmOWQjeensO+8jOWcuuaZr+agkeS5n+aUueWPmCDiiJoKIDTjgIHmoLnmja7mqKHlnovkuI3lkIzmmL7npLrnmoTnvJbovpHkuZ/kuI3lkIwgMAogNeOAgeiuvue9ruaWueazlSDiiJoKIDbjgIHmkqTplIDkuI7lj43mkqTplIAKIDfjgIHkv53lrZjkuI7lr7zlhaUKIDjjgIHpn7PpopHlj6/op4bljJblt7Llhpnlpb3nmoTmqKHlnosKIDnjgIHmoLnmja7mlofku7bpgInmi6nlj6/op4bljJYKIDEw44CB6Ziy5q2i5Yi35pawCiAxMeOAgeW4ruWKqSDiiJoKIDEy44CB57uE5a+56LGh5o6n5Yi2CiAxM+OAgWhlbHBlcueahHRyZWXliLfmlrDpl67popgKIDE044CB6aaW6aG1CiAxNeOAgeaWh+S7tuWMuu+8iOaYr+WQpumcgOimgeaVsOaNruW6k++8n++8iQogMTbjgIHljoblj7LorrDlvZXvvJ8KICAqLwppbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZS9idWlsZC90aHJlZS5tb2R1bGUuanMnCmltcG9ydCBHZXRVVUlEIGZyb20gJy4uLy4uLy4uLy4uL2xpYi9HZXR1dWlkJzsKaW1wb3J0IHsgR3JvdXAsIE9iamVjdDNELCBWZWN0b3IzIH0gZnJvbSAnLi4vLi4vLi4vLi4vbGliL3RocmVlLm1vZHVsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICAgIAogICAgbmFtZTonc3RydWN0dXJlJywKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5SZWZyZXNoU2NlbmVUcmVlKCk7Ly/liLfmlrDnlJ/mlYgKICAgICAgICB0aGlzLkdldE9iamVjdCgpOwogICAgICAgIHRoaXMuR2V0U2NlbmVPYmplY3QoKTsKICAgICAgICAgICAgICAKICAgIH0sCiAgICBjb21wdXRlZDp7CiAgICAgICAgUm90YXRpb25YOnsKICAgICAgICAgICAgZ2V0KCl7CiAgICAgICAgICAgICAgICByZXR1cm4gVEhSRUUuTWF0aC5yYWRUb0RlZyh0aGlzLk9iamVjdDNELnJvdGF0aW9uLngpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXQoWCl7CiAgICAgICAgICAgICAgICB0aGlzLk9iamVjdDNELnJvdGF0ZVgoVEhSRUUuTWF0aC5kZWdUb1JhZChYKSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFJvdGF0aW9uWTp7CiAgICAgICAgICAgIGdldCgpewogICAgICAgICAgICAgICAgcmV0dXJuIFRIUkVFLk1hdGgucmFkVG9EZWcodGhpcy5PYmplY3QzRC5yb3RhdGlvbi55KTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIHNldChZKXsKICAgICAgICAgICAgICAgIHRoaXMuT2JqZWN0M0Qucm90YXRlWShUSFJFRS5NYXRoLmRlZ1RvUmFkKFkpKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgUm90YXRpb25aOnsKICAgICAgICAgICAgZ2V0KCl7CiAgICAgICAgICAgICAgICByZXR1cm4gVEhSRUUuTWF0aC5yYWRUb0RlZyh0aGlzLk9iamVjdDNELnJvdGF0aW9uLnopOwogICAgICAgICAgICB9LAogICAgICAgICAgICAgc2V0KFopewogICAgICAgICAgICAgICAgdGhpcy5PYmplY3QzRC5yb3RhdGVaKFRIUkVFLk1hdGguZGVnVG9SYWQoWikpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjb2xvcjp7CiAgICAgICAgICAgIGdldCgpewogICAgICAgICAgICAgICAgaWYodGhpcy5PYmplY3QzRC5oYXNPd25Qcm9wZXJ0eSgnaXNUcmFucycpKXsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5PYmplY3QzRC5jb2xvcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5PYmplY3QzRC50eXBlLmluZGV4T2YoJ0dyb3VwJykhPS0xKXsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcjJyt0aGlzLk9iamVjdDNELmNoaWxkcmVuWzBdLm1hdGVyaWFsLmNvbG9yLmdldEhleFN0cmluZygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5PYmplY3QzRC5tYXRlcmlhbCl7CiAgICAgICAgICAgICAgICAvL+WmguaenOadkOi0qOWtmOWcqAogICAgICAgICAgICAgICAgcmV0dXJuICcjJyt0aGlzLk9iamVjdDNELm1hdGVyaWFsLmNvbG9yLmdldEhleFN0cmluZygpOwogICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgLy/mnInkupvlr7nosaHnm7TmjqXlj6/ku6Xojrflj5Zjb2xvcuaIluiAheaYr+S7juaOp+WItumdouadv+S8oOWFpeeahOWvueixoQogICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyMnK3RoaXMuT2JqZWN0M0QuY29sb3IuZ2V0SGV4U3RyaW5nKCk7CiAgICAgICAgICAgICAgICB9IAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNldChuZXdjb2xvcil7CiAgICAgICAgICAgICAgICBpZih0aGlzLk9iamVjdDNELnR5cGUuaW5kZXhPZigiR3JvdXAiKSE9LTEpewogICAgICAgICAgICAgICAgICAgICB0aGlzLk9iamVjdDNELnRyYXZlcnNlKGZ1bmN0aW9uKGNoaWxkKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkLmlzTGluZSkKICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoewogICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IG5ld2NvbG9yCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBpZihjaGlsZC5pc01lc2gpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IG5ld2NvbG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgICAgICBpZih0aGlzLk9iamVjdDNELm1hdGVyaWFsKXsKICAgICAgICAgICAgICAgICB0aGlzLk9iamVjdDNELm1hdGVyaWFsLmNvbG9yLnNldChuZXdjb2xvcik7CiAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMuT2JqZWN0M0QudHlwZS5pbmRleE9mKCJMaWdodCIpIT0tMSl7CiAgICAgICAgICAgICAgICAvL+ivtOaYjuaYr+WFiQogICAgICAgICAgICAgICAgdGhpcy5PYmplY3QzRC5jb2xvci5zZXQobmV3Y29sb3IpOwogICAgICAgICAgICB9IAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgLy/nm5HlkKzlvZPliY1jdXJyZW505Y+Y5YyWIAogICAgICAgIGN1cnJlbnQodXVpZCl7CiAgICAgICAgICAgIGlmKHV1aWQpewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5FbFRyZWUuc2V0Q3VycmVudEtleSh1dWlkKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5FbFRyZWUuc2V0Q3VycmVudEtleShudWxsKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8vIGdldFNjZW5lKCl7CiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHRoaXMuJHBhcmVudC4kcGFyZW50LiRwYXJlbnQuZ2V0U2NlbmUoKSk7CiAgICAgICAgLy8gfQogICAgICAgIC8vIE9iamVjdFRyYW5zbGF0ZShTY2VuZU9iamVjdCl7CiAgICAgICAgICAgIAogICAgICAgIC8vICAgICAgbGV0IE9iamVjdDNEPXsKICAgICAgICAvLyAgICAgICAgIG5hbWU6U2NlbmVPYmplY3QubmFtZSwKICAgICAgICAvLyAgICAgICAgIHV1aWQ6U2NlbmVPYmplY3QudXVpZCwKICAgICAgICAvLyAgICAgICAgIHR5cGU6U2NlbmVPYmplY3QudHlwZSwKICAgICAgICAvLyAgICAgICAgIHBvc2l0aW9uOlNjZW5lT2JqZWN0LnBvc2l0aW9uLAogICAgICAgIC8vICAgICAgICAgLy/mrKfmi4nop5IKICAgICAgICAvLyAgICAgICAgIHJvdGF0aW9uOm5ldyBUSFJFRS5WZWN0b3IzKFRIUkVFLk1hdGgucmFkVG9EZWcoU2NlbmVPYmplY3Qucm90YXRpb24ueCksVEhSRUUuTWF0aC5yYWRUb0RlZyhTY2VuZU9iamVjdC5yb3RhdGlvbi55KSxUSFJFRS5NYXRoLnJhZFRvRGVnKFNjZW5lT2JqZWN0LnJvdGF0aW9uLnopKSwKICAgICAgICAvLyAgICAgICAgIHNjYWxlOlNjZW5lT2JqZWN0LnNjYWxlLAogICAgICAgIC8vICAgICAgICAgdmlzaWJsZTpTY2VuZU9iamVjdC52aXNpYmxlLAogICAgICAgIC8vICAgICAgICAgY29sb3I6JyMwMDAwMDAnLAogICAgICAgIC8vICAgICAgICAgaXNUcmFuczp0cnVlLy/liKTmlq3pgInlj5blr7nosaHmlrnms5XkvKDlhaXnmoTlr7nosaHmmK/lkKbmmK/ljp/nlJ90aHJlZeWvueixoQoKICAgICAgICAvLyAgICAgfTsKICAgICAgICAvLyAgICAgaWYoU2NlbmVPYmplY3QubWF0ZXJpYWwpewogICAgICAgIC8vICAgICAgICAgLy/lpoLmnpzmnZDotKjlrZjlnKgKICAgICAgICAvLyAgICAgICAgIE9iamVjdDNELmNvbG9yPScjJytTY2VuZU9iamVjdC5tYXRlcmlhbC5jb2xvci5nZXRIZXhTdHJpbmcoKTsKICAgICAgICAgICAgICAgCiAgICAgICAgLy8gICAgIH1lbHNlewogICAgICAgIC8vICAgICAgICAgLy/mnInkupvlr7nosaHnm7TmjqXlj6/ku6Xojrflj5Zjb2xvcuaIluiAheaYr+S7juaOp+WItumdouadv+S8oOWFpeeahOWvueixoQogICAgICAgIC8vICAgICAgICAgT2JqZWN0M0QuY29sb3I9JyMnK1NjZW5lT2JqZWN0LmNvbG9yLmdldEhleFN0cmluZygpOwogICAgICAgIC8vICAgICB9CiAgICAgICAgLy8gICAgIHJldHVybiBPYmplY3QzRDsKICAgICAgICAgICAgCiAgICAgICAgICAKICAgICAgICAvLyB9LAogICAgICAgIC8vIHNlbGVjdE9iakNoYW5nZShjb2xvcil7CiAgICAgICAgLy8gICAgIGlmKHRoaXMuT2JqZWN0M0QubWF0ZXJpYWwpewogICAgICAgIC8vICAgICAgICAgIHRoaXMuT2JqZWN0M0QubWF0ZXJpYWwuY29sb3Iuc2V0KGNvbG9yKTsKICAgICAgICAvLyAgICAgfWVsc2UgaWYodGhpcy5PYmplY3QzRC5saWdodCl7CiAgICAgICAgLy8gICAgICAgICB0aGlzLk9iamVjdDNELmNvbG9yLnNldChjb2xvcik7CiAgICAgICAgLy8gICAgIH0KICAgICAgICAgICAKICAgICAgICAvLyB9LAogICAgICAgIGluaXRPYmplY3QoKXsKICAgICAgICAgICAgIGxldCBPYmplY3QzRD17CiAgICAgICAgICAgICAgICBuYW1lOicnLAogICAgICAgICAgICAgICAgdXVpZDonJywKICAgICAgICAgICAgICAgIHR5cGU6JycsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjpuZXcgVEhSRUUuVmVjdG9yMygpLAogICAgICAgICAgICAgICAgLy/mrKfmi4nop5IKICAgICAgICAgICAgICAgIHJvdGF0aW9uOm5ldyBUSFJFRS5FdWxlcigpLAogICAgICAgICAgICAgICAgc2NhbGU6bmV3IFRIUkVFLlZlY3RvcjMoKSwKICAgICAgICAgICAgICAgIHZpc2libGU6dHJ1ZSwKICAgICAgICAgICAgICAgIGNvbG9yOicjMTExMTExJywKICAgICAgICAgICAgICAgIGlzVHJhbnM6dHJ1ZQogICAgICAgICAgICB9OwogICAgICAgICAgICByZXR1cm4gT2JqZWN0M0Q7CiAgICAgICAgfSwKICAgICAgICBPYmplY3RUbzNEKCl7CgogICAgICAgIH0sCiAgICAgICAgR2V0T2JqZWN0KCl7CiAgICAgICAgICAgIHRoaXMuJGJ1cy4kb24oJ2dldEV2ZW50Jywob2JqZWN0KT0+eyAKICAgICAgICAgICAgICAgIC8v6YCJ5Lit54mp5L2T6Kem5Y+R54K55Ye75LqL5Lu2CiAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlTm9kZUNsaWNrKG9iamVjdCk7CiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgR2V0U2NlbmVPYmplY3QoKXsKICAgICAgICAgICAgdGhpcy4kYnVzLiRvbigncmVzcG9uc2VPYmonLChvYmplY3QpPT57CiAgICAgICAgICAgICAgICBpZihvYmplY3QudHlwZS5pbmRleE9mKCJNZXNoIikhPS0xfHxvYmplY3QudHlwZS5pbmRleE9mKCJHcm91cCIpIT0tMSl7CiAgICAgICAgICAgICAgICAgICAgLy/or7TmmI7mmK/mnZDotKjniankvZMKICAgICAgICAgICAgICAgICAgICB0aGlzLk9iamVjdDNEPW9iamVjdDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYob2JqZWN0LnR5cGUuaW5kZXhPZigiTGlnaHQiKSE9LTEpewogICAgICAgICAgICAgICAgICAgIC8v6K+05piO5piv5YWJCiAgICAgICAgICAgICAgICAgICAgdGhpcy5PYmplY3QzRD1vYmplY3Q7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5PYmplY3QzRCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmKG9iamVjdC50eXBlLmluZGV4T2YoIkhlbHBlciIpIT0tMSl7CiAgICAgICAgICAgICAgICAgICAgLy/or7TmmI7mmK/ovoXliqnlt6XlhbcKICAgICAgICAgICAgICAgICAgICB0aGlzLk9iamVjdDNEPXRoaXMuaW5pdE9iamVjdCgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcmVmcmVzaE5vZGVCeXV1aWQobGlzdCl7CiAgICAgICAgICAgIC8v6YGN5Y6G5Zy65pmv5qCR57uT5p6E5pu05pS55ZCN56ewCiAgICAgICAgICAgIGxpc3QubWFwKGM9PnsKICAgICAgICAgICAgICAgIGlmKGMudXVpZCYmYy51dWlkPT10aGlzLk9iamVjdDNELnV1aWQpewogICAgICAgICAgICAgICAgICAgIGMubmFtZT10aGlzLk9iamVjdDNELm5hbWU7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICBlbHNlewoKICAgICAgICAgICAgICAgIGlmKGMuY2hpbGRyZW4mJmMuY2hpbGRyZW4ubGVuZ3RoPjApewogICAgICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaE5vZGVCeXV1aWQoYy5jaGlsZHJlbik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBSZWZyZXNoTm9kZU5hbWUoKXsKICAgICAgICAgICAgdGhpcy5yZWZyZXNoTm9kZUJ5dXVpZCh0aGlzLnNjZW5lU3RydWN0dXJlKTsKICAgICAgICB9LAogICAgICAgIFJlZnJlc2hTY2VuZVRyZWUoKXsKICAgICAgICAgICAgLy/mr4/mrKHlnLrmma/nu5PmnoTmlLnlj5jliLfmlrDlnLrmma/moJEKICAgICAgICAgICAgICAgIHRoaXMuJGJ1cy4kb24oJ3NjZW5lQ2hhbmdlZCcsKHNjZW5lbGlzdCk9PnsKICAgICAgICAgICAgICAgbGV0IHNjZW5lVHJlZT1bXTsKICAgICAgICAgICAgICAgbGV0IGxpZ2h0VHJlZT1bXTsKICAgICAgICAgICAgICAgbGV0IGhlbHBlclRyZWU9W107CiAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlU2NlbmVTdHJ1Y3R1cmUoc2NlbmVsaXN0LHNjZW5lVHJlZSxsaWdodFRyZWUsaGVscGVyVHJlZSk7CiAgICAgICAgICAgICAgICB0aGlzLnNjZW5lU3RydWN0dXJlWzBdLmNoaWxkcmVuPXNjZW5lVHJlZTsKICAgICAgICAgICAgICAgIHRoaXMuc2NlbmVTdHJ1Y3R1cmVbMl0uY2hpbGRyZW49bGlnaHRUcmVlOwogICAgICAgICAgICAgICAgdGhpcy5zY2VuZVN0cnVjdHVyZVszXS5jaGlsZHJlbj1oZWxwZXJUcmVlOwogICAgICAgICAgICAgICAKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBjcmVhdGVTY2VuZVN0cnVjdHVyZShzY2VuZWxpc3Qsc2NlbmVUcmVlLGxpZ2h0VHJlZSxoZWxwZXJUcmVlKXsKICAgICAgICAgICAgc2NlbmVsaXN0Lm1hcChjPT57CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGxldCBkYXRhPXsKICAgICAgICAgICAgICAgICAgICBuYW1lOmMubmFtZSwKICAgICAgICAgICAgICAgICAgICB0eXBlOmMudHlwZSwKICAgICAgICAgICAgICAgICAgICB1dWlkOmMudXVpZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGlmKGMuY2hpbGRyZW4mJmMuY2hpbGRyZW4ubGVuZ3RoPjApewogICAgICAgICAgICAgICAgICAgIGRhdGEuY2hpbGRyZW49W107CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVTY2VuZVN0cnVjdHVyZShjLmNoaWxkcmVuLGRhdGEuY2hpbGRyZW4sZGF0YS5jaGlsZHJlbixkYXRhLmNoaWxkcmVuKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmKGMudHlwZS5pbmRleE9mKCJNZXNoIikhPS0xfHxjLnR5cGUuaW5kZXhPZigiR3JvdXAiKSE9LTEpewogICAgICAgICAgICAgICAgICAgIC8v6K+05piO5piv5p2Q6LSo54mp5L2TCiAgICAgICAgICAgICAgICAgICAgaWYoYy5wYXJlbnQudHlwZSE9IkxpbmVHcm91cCImJmMucGFyZW50LnR5cGUhPSJCYXJHcm91cCIpewogICAgICAgICAgICAgICAgICAgICAgICBzY2VuZVRyZWUucHVzaChkYXRhKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIGlmKGMudHlwZS5pbmRleE9mKCJMaWdodCIpIT0tMSl7CiAgICAgICAgICAgICAgICAgICAgLy/or7TmmI7mmK/lhYkKICAgICAgICAgICAgICAgICAgICBsaWdodFRyZWUucHVzaChkYXRhKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYoYy50eXBlLmluZGV4T2YoIkhlbHBlciIpIT0tMSl7CiAgICAgICAgICAgICAgICAgICAgLy/or7TmmI7mmK/ovoXliqnlt6XlhbcKICAgICAgICAgICAgICAgICAgICBoZWxwZXJUcmVlLnB1c2goZGF0YSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgLy8gZmluZE9iamVjdCgpewogICAgICAgIC8vICAgICB0aGlzLiRidXMuJG9uKCdlbWl0T2JqZWN0Jywob2JqZWN0KT0+ewogICAgICAgIC8vICAgICAgICAgaWYob2JqZWN0PT1udWxsKXsKICAgICAgICAvLyAgICAgICAgICAgICB0aGlzLk9iamVjdDNEPXRoaXMuaW5pdE9iamVjdCgpOwogICAgICAgIC8vICAgICAgICAgfQogICAgICAgIC8vICAgICAgICAgICAgIGVsc2V7CiAgICAgICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuT2JqZWN0M0Q9b2JqZWN0OwogICAgICAgIC8vICAgICAgICAgICAgICAgICB9CiAgICAgICAgLy8gICAgICAgICB9KTsKICAgICAgICAvLyB9LAogICAgICAgICBoYW5kbGVOb2RlQ2xpY2sodGFyZ2V0KSB7ICAKICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICBpZih0YXJnZXQhPW51bGwmJnRhcmdldC50eXBlLmluZGV4T2YoJ0NhbWVyYScpPT0tMSYmdGFyZ2V0Lmhhc093blByb3BlcnR5KCd1dWlkJykpewogICAgICAgICAgICAgICAgIC8v5a+56LGh5LiN5Li656m677ya54K55Ye75Zy65pmv56m655m95Zyw5pa5CiAgICAgICAgICAgICAgICAgLy/nm7jmnLrkuI3og73ov5vooYzmk43kvZwKICAgICAgICAgICAgICAgICAvL+agkeWfuuacrOe7k+aehOagh+etvueCueWHu+S4jeinpuWPkQogICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudD10YXJnZXQudXVpZDsKICAgICAgICAgICAgICAgICBpZighdGFyZ2V0Lmhhc093blByb3BlcnR5KCdpc1RyYW5zJykmJnRhcmdldC5oYXNPd25Qcm9wZXJ0eSgndmlzaWJsZScpKXsKICAgICAgICAgICAgICAgICAgICAgLy/or7TmmI7mmK/lnLrmma/kuK3mi7/liLDnmoTlr7nosaEKICAgICAgICAgICAgICAgICAgICAgdGhpcy5PYmplY3QzRD10YXJnZXQ7CiAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICAgICAgIC8v6K+05piO5piv5LuO54K55Ye75Zy65pmv5qCR6L+b6KGM55qE6YCJ5oup54mp5L2T77yM6ZyA6KaB5YiwZWRpdG9y5Lit5ou/5b2T5YmN5a+56LGhCiAgICAgICAgICAgICAgICAgICAgIC8v6Kem5Y+R5LiA57O75YiX5p+l6K+i5bm25L+u5pS5b2JqZWN05LqL5Lu2CiAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGJ1cy4kZW1pdCgncmVxdWVzdE9iaicsdGFyZ2V0KTsKICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGFyZ2V0KQogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICB9IAogICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50PScnOwogICAgICAgICAgICAgICAgdGhpcy5PYmplY3QzRD10aGlzLmluaXRPYmplY3QoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ2NoZWNrRXZlbnQnLHRhcmdldCk7IAogICAgICAgIC8vIGlmICh0YXJnZXQudXVpZCAmJiB0YXJnZXQudXVpZCAhPT0gdGhpcy5jdXJyZW50LnV1aWQpIHsKICAgICAgICAvLyAgICAgdGhpcy5jdXJyZW50ID0gdGFyZ2V0OwogICAgICAgIC8vICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmN1cnJlbnQudXVpZCk7CiAgICAgICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKHRhcmdldC51dWlkKQogICAgICAgICAgICAKICAgICAgICAvLyB9CiAgICAgICAgLy8gaWYodGFyZ2V0LnV1aWQpewogICAgICAgIC8vICAgICB0aGlzLiRyZWZzLkVsVHJlZS5zZXRDdXJyZW50S2V5KHRhcmdldC51dWlkKQogICAgICAgIC8vIH0KICAgICAgICAKICAgIH0KICAgIH0sCiAgIGRhdGEoKSB7CiAgICAgICByZXR1cm4gewogICAgICAgICAgICBjdXJyZW50OicnLAogICAgICAgICAgICBjaGVja2VkOnRydWUsCiAgICAgICAgICAgIE9iamVjdDNEOnsKICAgICAgICAgICAgICAgIG5hbWU6JycsCiAgICAgICAgICAgICAgICB1dWlkOicnLAogICAgICAgICAgICAgICAgdHlwZTonJywKICAgICAgICAgICAgICAgIHBvc2l0aW9uOm5ldyBUSFJFRS5WZWN0b3IzKCksCiAgICAgICAgICAgICAgICAvL+asp+aLieinkgogICAgICAgICAgICAgICAgcm90YXRpb246bmV3IFRIUkVFLkV1bGVyKCksCiAgICAgICAgICAgICAgICBzY2FsZTpuZXcgVEhSRUUuVmVjdG9yMygpLAogICAgICAgICAgICAgICAgdmlzaWJsZTp0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6JyMxMTExMTEnLAogICAgICAgICAgICAgICAgaXNUcmFuczp0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZmF1bHRQcm9wczp7CgogICAgICAgICAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgICAgICAgICAgICBsYWJlbDogJ25hbWUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNjZW5lU3RydWN0dXJlOiBbCiAgICAgICAgICAgICAgICB7IG5hbWU6ICflnLrmma8nLCB0eXBlOiAnYmFzZScsIGNoaWxkcmVuOiBbXSB9LAogICAgICAgICAgICAgICAgeyBuYW1lOiAn5pGE5YOP5py6JywgdHlwZTogJ2NhbWVyYUdyb3VwJywgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICfpgI/op4bnm7jmnLonLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOidwZXJzcGVjdGl2ZUNhbWVyYScsCiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOltdCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSB9LAogICAgICAgICAgICAgICAgeyBuYW1lOiAn5YWJ5rqQJywgdHlwZTogJ2xpZ2h0R3JvdXAnLCBjaGlsZHJlbjogW10gfSwKICAgICAgICAgICAgICAgIHtuYW1lOiAn6L6F5Yqp5bel5YW3Jyx0eXBlOiAnaGVscGVyJyxjaGlsZHJlbjpbXX0KICAgICAgICAgICAgXSwKICAgICAgIH0KICAgfSwKICAKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/Editor/Attribute/structure","sourcesContent":["<template>\r\n    <div class=\"structure\">\r\n        <el-scrollbar class=\"Scrollbar\">\r\n        <el-tree ref=\"ElTree\" :data=\"sceneStructure\" default-expand-all :highlight-current=\"true\" node-key=\"uuid\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"\r\n        :current-node-key=\"current\">\r\n            <template #default=\"{ data }\">\r\n                <span class=\"el-tree-node__label\" :id=\"data.uuid\">{{ data.name }}</span>\r\n            </template>\r\n        </el-tree> \r\n        <div class=\"object\" >\r\n            <div class=\"Panel\" >\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\">类型</span>\r\n                    <span class=\"Text\">{{Object3D.type}}</span>\r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\">识别码</span>\r\n                    <input class=\"UUIDInput\" autocomplete=\"off\" disabled=\"\" v-model=\"Object3D.uuid\">\r\n                    <!-- <button class=\"Button\" style=\"margin-left: 7px;\">更新</button> -->\r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\">名称</span>\r\n                    <input class=\"NameInput\" autocomplete=\"off\" v-model=\"Object3D.name\" @change=\"RefreshNodeName\">\r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\" >位置</span>\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.x\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.y\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.z\">\r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\" >旋转</span>\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationX\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationY\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationZ\">\r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\" >缩放</span>\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.x\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.y\">\r\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.z\"> \r\n                </div>\r\n                <div class=\"Row\">\r\n                    <span class=\"Text\" >可见性</span>\r\n                    <el-checkbox v-model=\"Object3D.visible\"></el-checkbox>\r\n                </div>\r\n                 <div class=\"Row\">\r\n                    <span class=\"Text\" >颜色</span>\r\n                    <div class=\"block\">\r\n                       <el-color-picker v-model=\"color\" ></el-color-picker> \r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n            </div>\r\n        </div>   \r\n        </el-scrollbar> \r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\n /* 需要添加几个方法和需求：\r\n 1、改变颜色 √\r\n 2、改变欧拉角变化 √\r\n 3、改变名称，场景树也改变 √\r\n 4、根据模型不同显示的编辑也不同 0\r\n 5、设置方法 √\r\n 6、撤销与反撤销\r\n 7、保存与导入\r\n 8、音频可视化已写好的模型\r\n 9、根据文件选择可视化\r\n 10、防止刷新\r\n 11、帮助 √\r\n 12、组对象控制\r\n 13、helper的tree刷新问题\r\n 14、首页\r\n 15、文件区（是否需要数据库？）\r\n 16、历史记录？\r\n  */\r\nimport * as THREE from 'three/build/three.module.js'\r\nimport GetUUID from '../../../../lib/Getuuid';\r\nimport { Group, Object3D, Vector3 } from '../../../../lib/three.module';\r\nexport default {\r\n    \r\n    name:'structure',\r\n    mounted() {\r\n        this.RefreshSceneTree();//刷新生效\r\n        this.GetObject();\r\n        this.GetSceneObject();\r\n              \r\n    },\r\n    computed:{\r\n        RotationX:{\r\n            get(){\r\n                return THREE.Math.radToDeg(this.Object3D.rotation.x);\r\n            },\r\n            set(X){\r\n                this.Object3D.rotateX(THREE.Math.degToRad(X));\r\n            }\r\n        },\r\n        RotationY:{\r\n            get(){\r\n                return THREE.Math.radToDeg(this.Object3D.rotation.y);\r\n            },\r\n             set(Y){\r\n                this.Object3D.rotateY(THREE.Math.degToRad(Y));\r\n            }\r\n        },\r\n        RotationZ:{\r\n            get(){\r\n                return THREE.Math.radToDeg(this.Object3D.rotation.z);\r\n            },\r\n             set(Z){\r\n                this.Object3D.rotateZ(THREE.Math.degToRad(Z));\r\n            }\r\n        },\r\n        color:{\r\n            get(){\r\n                if(this.Object3D.hasOwnProperty('isTrans')){\r\n                    return this.Object3D.color;\r\n                }\r\n                else{\r\n                    if(this.Object3D.type.indexOf('Group')!=-1){\r\n                        return '#'+this.Object3D.children[0].material.color.getHexString();\r\n                    }\r\n                    else{\r\n                         if(this.Object3D.material){\r\n                //如果材质存在\r\n                return '#'+this.Object3D.material.color.getHexString();\r\n               \r\n                }else{\r\n                //有些对象直接可以获取color或者是从控制面板传入的对象\r\n                     return '#'+this.Object3D.color.getHexString();\r\n                } \r\n                    }\r\n                   \r\n                }\r\n                \r\n            },\r\n            set(newcolor){\r\n                if(this.Object3D.type.indexOf(\"Group\")!=-1){\r\n                     this.Object3D.traverse(function(child) {\r\n                    if (child.isLine)\r\n                        child.material = new THREE.LineBasicMaterial({\r\n                         color: newcolor\r\n                        });\r\n                        if(child.isMesh){\r\n                            child.material = new THREE.MeshPhongMaterial({\r\n                            color: newcolor\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    if(this.Object3D.material){\r\n                 this.Object3D.material.color.set(newcolor);\r\n            }else if(this.Object3D.type.indexOf(\"Light\")!=-1){\r\n                //说明是光\r\n                this.Object3D.color.set(newcolor);\r\n            } \r\n                }\r\n               \r\n            }\r\n        }\r\n    },\r\n    watch:{\r\n        //监听当前current变化 \r\n        current(uuid){\r\n            if(uuid){\r\n                this.$refs.ElTree.setCurrentKey(uuid);\r\n            }\r\n            else{\r\n                this.$refs.ElTree.setCurrentKey(null);\r\n            }\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        // getScene(){\r\n        //     console.log(this.$parent.$parent.$parent.getScene());\r\n        // }\r\n        // ObjectTranslate(SceneObject){\r\n            \r\n        //      let Object3D={\r\n        //         name:SceneObject.name,\r\n        //         uuid:SceneObject.uuid,\r\n        //         type:SceneObject.type,\r\n        //         position:SceneObject.position,\r\n        //         //欧拉角\r\n        //         rotation:new THREE.Vector3(THREE.Math.radToDeg(SceneObject.rotation.x),THREE.Math.radToDeg(SceneObject.rotation.y),THREE.Math.radToDeg(SceneObject.rotation.z)),\r\n        //         scale:SceneObject.scale,\r\n        //         visible:SceneObject.visible,\r\n        //         color:'#000000',\r\n        //         isTrans:true//判断选取对象方法传入的对象是否是原生three对象\r\n\r\n        //     };\r\n        //     if(SceneObject.material){\r\n        //         //如果材质存在\r\n        //         Object3D.color='#'+SceneObject.material.color.getHexString();\r\n               \r\n        //     }else{\r\n        //         //有些对象直接可以获取color或者是从控制面板传入的对象\r\n        //         Object3D.color='#'+SceneObject.color.getHexString();\r\n        //     }\r\n        //     return Object3D;\r\n            \r\n          \r\n        // },\r\n        // selectObjChange(color){\r\n        //     if(this.Object3D.material){\r\n        //          this.Object3D.material.color.set(color);\r\n        //     }else if(this.Object3D.light){\r\n        //         this.Object3D.color.set(color);\r\n        //     }\r\n           \r\n        // },\r\n        initObject(){\r\n             let Object3D={\r\n                name:'',\r\n                uuid:'',\r\n                type:'',\r\n                position:new THREE.Vector3(),\r\n                //欧拉角\r\n                rotation:new THREE.Euler(),\r\n                scale:new THREE.Vector3(),\r\n                visible:true,\r\n                color:'#111111',\r\n                isTrans:true\r\n            };\r\n            return Object3D;\r\n        },\r\n        ObjectTo3D(){\r\n\r\n        },\r\n        GetObject(){\r\n            this.$bus.$on('getEvent',(object)=>{ \r\n                //选中物体触发点击事件\r\n               this.handleNodeClick(object);\r\n              \r\n              \r\n            });\r\n        },\r\n        GetSceneObject(){\r\n            this.$bus.$on('responseObj',(object)=>{\r\n                if(object.type.indexOf(\"Mesh\")!=-1||object.type.indexOf(\"Group\")!=-1){\r\n                    //说明是材质物体\r\n                    this.Object3D=object;\r\n                }\r\n                else if(object.type.indexOf(\"Light\")!=-1){\r\n                    //说明是光\r\n                    this.Object3D=object;\r\n                    console.log(this.Object3D);\r\n                }\r\n                else if(object.type.indexOf(\"Helper\")!=-1){\r\n                    //说明是辅助工具\r\n                    this.Object3D=this.initObject();\r\n                }\r\n\r\n                \r\n                \r\n            });\r\n        },\r\n        refreshNodeByuuid(list){\r\n            //遍历场景树结构更改名称\r\n            list.map(c=>{\r\n                if(c.uuid&&c.uuid==this.Object3D.uuid){\r\n                    c.name=this.Object3D.name;\r\n                    return;\r\n                }\r\n               else{\r\n\r\n                if(c.children&&c.children.length>0){\r\n                    this.refreshNodeByuuid(c.children);\r\n                }\r\n             }\r\n            })\r\n        },\r\n        RefreshNodeName(){\r\n            this.refreshNodeByuuid(this.sceneStructure);\r\n        },\r\n        RefreshSceneTree(){\r\n            //每次场景结构改变刷新场景树\r\n                this.$bus.$on('sceneChanged',(scenelist)=>{\r\n               let sceneTree=[];\r\n               let lightTree=[];\r\n               let helperTree=[];\r\n               this.createSceneStructure(scenelist,sceneTree,lightTree,helperTree);\r\n                this.sceneStructure[0].children=sceneTree;\r\n                this.sceneStructure[2].children=lightTree;\r\n                this.sceneStructure[3].children=helperTree;\r\n               \r\n            });\r\n        },\r\n        createSceneStructure(scenelist,sceneTree,lightTree,helperTree){\r\n            scenelist.map(c=>{\r\n                \r\n                let data={\r\n                    name:c.name,\r\n                    type:c.type,\r\n                    uuid:c.uuid\r\n                };\r\n                if(c.children&&c.children.length>0){\r\n                    data.children=[];\r\n                    this.createSceneStructure(c.children,data.children,data.children,data.children);\r\n                }\r\n                if(c.type.indexOf(\"Mesh\")!=-1||c.type.indexOf(\"Group\")!=-1){\r\n                    //说明是材质物体\r\n                    if(c.parent.type!=\"LineGroup\"&&c.parent.type!=\"BarGroup\"){\r\n                        sceneTree.push(data);\r\n                    }\r\n                    \r\n                }\r\n                else if(c.type.indexOf(\"Light\")!=-1){\r\n                    //说明是光\r\n                    lightTree.push(data);\r\n                }\r\n                else if(c.type.indexOf(\"Helper\")!=-1){\r\n                    //说明是辅助工具\r\n                    helperTree.push(data);\r\n                }\r\n\r\n            })\r\n        },\r\n        // findObject(){\r\n        //     this.$bus.$on('emitObject',(object)=>{\r\n        //         if(object==null){\r\n        //             this.Object3D=this.initObject();\r\n        //         }\r\n        //             else{\r\n        //                 this.Object3D=object;\r\n        //                 }\r\n        //         });\r\n        // },\r\n         handleNodeClick(target) {  \r\n                     \r\n             if(target!=null&&target.type.indexOf('Camera')==-1&&target.hasOwnProperty('uuid')){\r\n                 //对象不为空：点击场景空白地方\r\n                 //相机不能进行操作\r\n                 //树基本结构标签点击不触发\r\n                 this.current=target.uuid;\r\n                 if(!target.hasOwnProperty('isTrans')&&target.hasOwnProperty('visible')){\r\n                     //说明是场景中拿到的对象\r\n                     this.Object3D=target;\r\n                 }\r\n                 else{\r\n                     //说明是从点击场景树进行的选择物体，需要到editor中拿当前对象\r\n                     //触发一系列查询并修改object事件\r\n                     this.$bus.$emit('requestObj',target);\r\n                     console.log(target)\r\n                     \r\n                 }\r\n             } \r\n            else{\r\n                this.current='';\r\n                this.Object3D=this.initObject();\r\n            }\r\n            this.$bus.$emit('checkEvent',target); \r\n        // if (target.uuid && target.uuid !== this.current.uuid) {\r\n        //     this.current = target;\r\n        //      //console.log(this.current.uuid);\r\n        //     // console.log(target.uuid)\r\n            \r\n        // }\r\n        // if(target.uuid){\r\n        //     this.$refs.ElTree.setCurrentKey(target.uuid)\r\n        // }\r\n        \r\n    }\r\n    },\r\n   data() {\r\n       return {\r\n            current:'',\r\n            checked:true,\r\n            Object3D:{\r\n                name:'',\r\n                uuid:'',\r\n                type:'',\r\n                position:new THREE.Vector3(),\r\n                //欧拉角\r\n                rotation:new THREE.Euler(),\r\n                scale:new THREE.Vector3(),\r\n                visible:true,\r\n                color:'#111111',\r\n                isTrans:true\r\n            },\r\n            defaultProps:{\r\n\r\n                children: 'children',\r\n                label: 'name'\r\n            },\r\n            sceneStructure: [\r\n                { name: '场景', type: 'base', children: [] },\r\n                { name: '摄像机', type: 'cameraGroup', children: [\r\n                    {\r\n                        name: '透视相机',\r\n                        type:'perspectiveCamera',\r\n                        children:[]\r\n                    }\r\n                ] },\r\n                { name: '光源', type: 'lightGroup', children: [] },\r\n                {name: '辅助工具',type: 'helper',children:[]}\r\n            ],\r\n       }\r\n   },\r\n  \r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.structure {\r\n    height:530px;\r\n    width: 100%;\r\n     overflow-y : auto;\r\n    background: #281928;\r\n    ::v-deep .el-tree {\r\n        background: unset;\r\n        border-bottom: 4px solid #432d43;\r\n        .el-tree-node {\r\n            .el-tree-node__content {\r\n                background: unset;\r\n                &:hover {\r\n                    background: #ffa7fb;\r\n                }\r\n                .el-tree-node__label {\r\n                    color: white;\r\n                    font-size: 10px;\r\n                }\r\n            }\r\n            .el-tree-node__children {\r\n                background: #281928;\r\n            }\r\n        }\r\n        .is-current {\r\n            > .el-tree-node__content {\r\n                background: violet !important;\r\n            }\r\n        }\r\n    }\r\n    .object{\r\n        .Panel{\r\n            border-top: 0px;\r\n            padding-top: 20px;\r\n            display: block;\r\n            border-bottom: 4px solid #432d43;\r\n            .Row{\r\n                    display: flex;\r\n                    align-items: center;\r\n                    min-height: 24px;\r\n                    margin-bottom: 10px;\r\n                .UUIDInput{\r\n                    padding: 2px;\r\n                    border: 1px solid transparent; \r\n                    border-radius: 30px;\r\n                     color: violet!important;\r\n                    width: 150px; \r\n                    font-size: 12px;\r\n                }\r\n                .NameInput{\r\n                    padding: 2px; \r\n                    border: 1px solid transparent; \r\n                    width: 150px; \r\n                    border-radius: 30px;\r\n                    font-size: 12px;\r\n                }\r\n                .Number{\r\n                    cursor: ns-resize; \r\n                    background-color: transparent;\r\n                    width: 50px;\r\n                    color: violet!important;\r\n                    border-radius: 30px;\r\n                    font-size: 10px;\r\n                }\r\n                .Text{\r\n                    cursor: default;\r\n                    display: inline-block;\r\n                    text-indent:20px;\r\n                    width: 90px;\r\n                    color: white;\r\n                    font-size: 10px;\r\n                } \r\n            }\r\n            \r\n        }\r\n       \r\n    }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n    .el-checkbox__input.is-checked .el-checkbox__inner, .el-checkbox__input.is-indeterminate \r\n    .el-checkbox__inner{\r\n        background-color:violet;\r\n        border-color:violet;\r\n    }\r\n    .el-checkbox__input.is-checked + .el-checkbox__label {\r\n        color: violet;\r\n    }\r\n    .el-checkbox.is-bordered.is-checked{\r\n        border-color: violet;\r\n    }\r\n    .el-checkbox__input.is-focus .el-checkbox__inner{\r\n        border-color:  violet;\r\n    }\r\n</style>"]}]}