{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Scene.vue","mtime":1654525485813},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlL2J1aWxkL3RocmVlLm1vZHVsZS5qcycKaW1wb3J0IFN0YXRzIGZyb20gJy4uLy4uL3N0b3JlL1N0YXRzL3N0YXRzLm1pbi5qcycKaW1wb3J0IHsgT3JiaXRDb250cm9scyB9IGZyb20gIi4uLy4uL2xpYi9PcmJpdENvbnRyb2xzLmpzIjsKaW1wb3J0IGluZGV4LCB7IEdVSSB9IGZyb20gIi4uLy4uL2xpYi9kYXQuZ3VpLm1vZHVsZS5qcyI7Ci8v6L6J5YWJCmltcG9ydCB7IEVmZmVjdENvbXBvc2VyIH0gZnJvbSAidGhyZWUvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL0VmZmVjdENvbXBvc2VyLmpzIjsKaW1wb3J0IHsgUmVuZGVyUGFzcyB9IGZyb20gInRocmVlL2V4YW1wbGVzL2pzbS9wb3N0cHJvY2Vzc2luZy9SZW5kZXJQYXNzLmpzIjsKaW1wb3J0IHsgR2xpdGNoUGFzcyB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9wb3N0cHJvY2Vzc2luZy9HbGl0Y2hQYXNzLmpzJzsKaW1wb3J0IHsgVW5yZWFsQmxvb21QYXNzIH0gZnJvbSAidGhyZWUvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL1VucmVhbEJsb29tUGFzcy5qcyI7CgppbXBvcnQgeyBTaGFkZXJQYXNzIH0gZnJvbSAidGhyZWUvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL1NoYWRlclBhc3MuanMiOwppbXBvcnQgeyBDb3B5U2hhZGVyIH0gZnJvbSAidGhyZWUvZXhhbXBsZXMvanNtL3NoYWRlcnMvQ29weVNoYWRlci5qcyI7CmltcG9ydCB7IHJhbmdlIH0gZnJvbSAiLi4vLi4vY29tcG9uZW50cy9tb2RlL3JhbmdlIjsKaW1wb3J0IHsgbm9kZSB9IGZyb20gIi4uLy4uL2NvbXBvbmVudHMvbW9kZS9ub2RlIjsKaW1wb3J0IEF1ZGlvUGxheWVyIGZyb20gIi4uL3NjZW5lL1BsYXllci9QbGF5ZXIudnVlIgppbXBvcnQgeyByYW5kb21SYW5nZSB9IGZyb20gIi4uLy4uL2NvbXBvbmVudHMvbW9kZS9yYW5kb21SYW5nZSI7CmltcG9ydCB7IFRyaWFuZ2xlIH0gZnJvbSAiLi4vLi4vY29tcG9uZW50cy9tb2RlL1RyaWFuZ2xlIjsKaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAnLi4vLi4vbGliL3RocmVlLm1vZHVsZS5qcyc7CmxldCByZW5kZXJlcixjYW1lcmEsc2NlbmUsZ2VvbWV0cnksbWF0ZXJpYWwsbWVzaCxzdGF0cyxjb250cm9sczsKLy8gIGxldCBjb250YWluZXI9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dlYmdsJyk7CmxldCBndWkgPSB7CiAgUjogMjAsCiAgRzogOTAsCiAgQjogMjI1LAogIFRyaWFuZ2xlc0JnQ29sb3I6IDB4MDNhOWY0LAogIFRyaWFuZ2xlc0xpbmVDb2xvcjogMHgwM2E5ZjQsCiAgbGluZUNvbG9yOiAweDAwZmZmZiwKICByb3RhdGU6IGZhbHNlCn07CmxldCBhdWRpbywgYW5hbHlzZXI7IC8vIOmfs+mikQpsZXQgQmFyTm9kZXM7IC8vIOe6vwpsZXQgY29tcG9zZXI7Ly/lkIjmiJDlmagKbGV0IFRyaWFuZ2xlcyA9IFtdLAogIFRyaWFuZ2xlR3JvdXA7CmxldCBMaW5lR3JvdXBzPVtdOwpsZXQgQmFyR3JvdXBzPVtdOwpsZXQgR2VvbWV0cnlHcm91cHM9W107CmxldCBtYXA9W107CmxldCBDb2xvck1hcD1bXTsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NjZW5lJywKICAgIGNvbXBvbmVudHM6ewogICAgICBBdWRpb1BsYXllcgogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY2xvY2s6bmV3IFRIUkVFLkNsb2NrKCksCiAgICAgICAgc2NhbGU6MSwKICAgICAgICBBbmFseXNlcjpudWxsLAogICAgICAgIGlzUGxheWluZzpmYWxzZSwKICAgICAgICBpc0xvYWRlZDpmYWxzZSwKICAgICAgfQogICAgfSwKICAgIHdhdGNoOnsKICAgICAgaXNMb2FkZWQ6ewogICAgICAgIGhhbmRsZXIoKXsKICAgICAgICAgIGlmKHRoaXMuaXNMb2FkZWQ9PXRydWUpewogICAgICAgICAgICAgdGhpcy5pbml0TGlnaHQoKTsKICAgICAgICAgICAgICB0aGlzLkFuYWx5c2lzTGluZSgpOwogICAgICAgICAgICAgIHRoaXMuaW5pdEJhcnMoKTsKICAgICAgICAgICAgICB0aGlzLmluaXRFZmZlY3RDb21wb3NlcigpOwogICAgICAgICAgICAgIC8vdGhhdC5pbml0U3RhdHMoKTsKICAgICAgICAgICAgLy8gaW5pdERhdEdVSSgpOwogICAgICAgICAgICB0aGlzLmFuaW1hdGUoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgLy8gJHJvdXRlOnsKICAgICAgLy8gICBoYW5kbGVyKCl7CiAgICAgIC8vICAgICB0aGlzLgogICAgICAvLyAgIH0KICAgICAgLy8gfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgSW1wb3J0KCl7CiAgICAgICAgdGhpcy5pc0xvYWRlZD1mYWxzZTsKICAgICAgICAvL+avj+asoeWvvOWFpeaUueWPmOWAvOeEtuWQjumHjeaWsOa4suafkwogICAgICAgIGxldCB0aGF0PXRoaXM7CiAgICAgICAgbGV0IGlucHV0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICAgICAgaW5wdXQudHlwZT0iZmlsZSI7CiAgICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIixmdW5jdGlvbigpewogICAgICAgICAgbGV0IGZpbGU9aW5wdXQuZmlsZXNbMF07CiAgICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTsKICAgICAgICAgIGlmKGZpbGUudHlwZS5pbmRleE9mKCJqc29uIik+PTApewogICAgICAgICAgICBsZXQgdXJsID0gbnVsbCA7CiAgICAgICAgICAgIGlmICh3aW5kb3cuY3JlYXRlT2JqZWN0VVJMIT11bmRlZmluZWQpIHsgLy8gYmFzaWMKICAgICAgICAgICAgICAgIHVybCA9IHdpbmRvdy5jcmVhdGVPYmplY3RVUkwoZmlsZSkgOwogICAgICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy5VUkwhPXVuZGVmaW5lZCkgeyAvLyBtb3ppbGxhKGZpcmVmb3gpCiAgICAgICAgICAgICAgICB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKSA7CiAgICAgICAgICAgIH0gZWxzZSBpZiAod2luZG93LndlYmtpdFVSTCE9dW5kZWZpbmVkKSB7IC8vIHdlYmtpdCBvciBjaHJvbWUKICAgICAgICAgICAgICAgIHVybCA9IHdpbmRvdy53ZWJraXRVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpIDsKICAgICAgICAgICAgfQogICAgICAgICAgICAvL+agueaNrnVybOi/m+ihjOWKoOi9veWbnuiwg++8jOWPr+S7pemYsuatogogICAgICAgIC8vICAgICBsZXQgcmVhZGVyPW5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgLy8gICAgIC8vcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7CiAgICAgICAgLy8gICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICAgIC8vIHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgLy8gICBfdGhhdC5hdWRpb0xvYWQoZS50YXJnZXQucmVzdWx0KTsKICAgICAgICAvLyB9OwoKCiAgICAgICAgICAgICBsZXQgbG9hZGVyPW5ldyBUSFJFRS5PYmplY3RMb2FkZXIoKTsKICAgICAgICAgICAgIGxvYWRlci5sb2FkKHVybCwKICAgICAgICAgICAgICBmdW5jdGlvbihvYmopewogICAgICAgICAgICAgICAgLy/liqDovb3lrozmiJDlkI7ov5vooYwKICAgICAgICAgICAgICAgIHNjZW5lPW9iajsKICAgICAgICAgICAgICAgIHRoYXQuaXNMb2FkZWQ9dHJ1ZTsKCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAvLyBvblByb2dyZXNzIGNhbGxiYWNrCgkgICAgICAgICAgICBmdW5jdGlvbiAoIHhociApIHsKCQkgICAgICAgICAgY29uc29sZS5sb2coICh4aHIubG9hZGVkIC8geGhyLnRvdGFsICogMTAwKSArICclIGxvYWRlZCcgKTsKCSAgICAgICAgICAgIH0sCgoJICAgICAgICAgIC8vIG9uRXJyb3IgY2FsbGJhY2sKCSAgICAgICAgICAgIGZ1bmN0aW9uICggZXJyICkgewoJCSAgICAgICAgICAgICAgY29uc29sZS5lcnJvciggJ0FuIGVycm9yIGhhcHBlbmVkJytlcnIgKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIC8vIGxldCByZWFkZXI9bmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgICAgLy8gcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7CiAgICAgICAgICAgIC8vIHJlYWRlci5vbmxvYWRlbmQ9ZnVuY3Rpb24oKXsKICAgICAgICAgICAgLy8gICBsZXQgbG9hZGVyPW5ldyBUSFJFRS5PYmplY3RMb2FkZXIoKTsKICAgICAgICAgICAgLy8gICBsb2FkZXIucGFyc2UoSlNPTi5wYXJzZSh0aGlzLnJlc3VsdCksCiAgICAgICAgICAgIC8vICAgICBmdW5jdGlvbihvYmopewogICAgICAgICAgICAvLyAgICAgICBzY2VuZT1vYmo7CiAgICAgICAgICAgIC8vICAgICB9CiAgICAgICAgICAgIC8vICAgKTsKICAgICAgICAgICAgICAvL3NjZW5lPW5ld3NjZW5lOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGlucHV0LmNsaWNrKCk7CiAgICAgIH0sCiAgICAgIC8vIOmAieaLqemfs+mikQogICAgLy8gZ2V0QXVkaW8oKSB7CiAgICAvLyAgIGxldCBfdGhhdCA9IHRoaXM7CiAgICAvLyAgIGxldCBvYmpGaWxlID0gdGhpcy4kcmVmcy5maWxlSWQ7CiAgICAvLyAgIGlmIChvYmpGaWxlLnZhbHVlID09PSAiIikgewogICAgLy8gICAgIHJldHVybiBmYWxzZTsKICAgIC8vICAgfQogICAgLy8gICBpZiAod2luZG93LkZpbGVSZWFkZXIpIHsKICAgIC8vICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgIC8vICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChvYmpGaWxlLmZpbGVzWzBdKTsKICAgIC8vICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24oZSkgewogICAgLy8gICAgICAgX3RoYXQuYXVkaW9Mb2FkKGUudGFyZ2V0LnJlc3VsdCk7CiAgICAvLyAgICAgfTsKICAgIC8vICAgfQogICAgLy8gfSwKICAgIC8vICDpn7PpopHliqDovb3mkq3mlL4KICAgIC8vIGF1ZGlvTG9hZCh1cmwpIHsKICAgIC8vICAgLy8gbGV0IF90aGF0ID0gdGhpczsKCiAgICAvLyAgIGxldCBhdWRpb0xvYWRlciA9IG5ldyBUSFJFRS5BdWRpb0xvYWRlcigpOyAvLyDpn7PpopHliqDovb3lmagKICAgIC8vICAgYXVkaW9Mb2FkZXIubG9hZCh1cmwsIGZ1bmN0aW9uKEF1ZGlvQnVmZmVyKSB7CiAgICAvLyAgICAgaWYgKGF1ZGlvLmlzUGxheWluZykgewogICAgLy8gICAgICAgYXVkaW8uc3RvcCgpOwogICAgLy8gICAgICAgYXVkaW8uc2V0QnVmZmVyKCk7CiAgICAvLyAgICAgfQogICAgLy8gICAgIGF1ZGlvLnNldEJ1ZmZlcihBdWRpb0J1ZmZlcik7IC8vIOmfs+mikee8k+WGsuWMuuWvueixoeWFs+iBlOWIsOmfs+mikeWvueixoWF1ZGlvCiAgICAvLyAgICAgYXVkaW8uc2V0TG9vcCh0cnVlKTsgLy/mmK/lkKblvqrnjq8KICAgIC8vICAgICBhdWRpby5zZXRWb2x1bWUoMSk7IC8v6Z+z6YePCiAgICAvLyAgICAgYXVkaW8ucGxheSgpOyAvL+aSreaUvgogICAgLy8gICAgIC8vIOmfs+mikeWIhuaekOWZqOWSjOmfs+mikee7keWumu+8jOWPr+S7peWunuaXtumHh+mbhumfs+mikeaXtuWfn+aVsOaNrui/m+ihjOW/q+mAn+WChemHjOWPtuWPmOaNogogICAgLy8gICAgIGFuYWx5c2VyID0gbmV3IFRIUkVFLkF1ZGlvQW5hbHlzZXIoYXVkaW8sIDI1NiAqIDIpOwogICAgLy8gICB9KTsKICAgIC8vIH0sCiAgICBHZXRTdGF0ZSgpewogICAgICB0aGlzLiRidXMuJG9uKCdQbGF5U3RhdGUnLChpc1BsYXlpbmcpPT57CiAgICAgICAgICB0aGlzLmlzUGxheWluZz1pc1BsYXlpbmc7CiAgICAgIH0pCiAgICB9LAogICAgR2V0QXVkaW9EYXRhKCl7CiAgICAgIGxldCB0aGF0PXRoaXM7CiAgICAgICAgdGhpcy4kYnVzLiRvbignQmluZGluZ0FuYWx5c2VyJywoYW5hbHlzZXIpPT57CiAgICAgICAgICB0aGF0LkFuYWx5c2VyPWFuYWx5c2VyOwoKICAgICAgICB9KQogICAgfSwKICAgIGluaXRBdWRpbygpewogICAgICBsZXQgbGlzdGVuZXI9bmV3IFRIUkVFLkF1ZGlvTGlzdGVuZXIoKTsKICAgICAgYXVkaW89bmV3IFRIUkVFLkF1ZGlvKGxpc3RlbmVyKTsKICAgIH0sCiAgICAgIEFuYWx5c2lzTGluZSgpewoKCiAgICAgICAgLy/ojrflj5blj5jljJbnur/mrrUKICAgICAgICBzY2VuZS50cmF2ZXJzZShmdW5jdGlvbihvYmopewogICAgICAgICAgaWYob2JqLm5hbWUuaW5kZXhPZigi6Z+z6aKR57q/IikhPS0xKXsKICAgICAgICAgICAgTGluZUdyb3Vwcy5wdXNoKG9iaik7CiAgICAgICAgICAgIG1hcC5wdXNoKHsKICAgICAgICAgICAgICB1dWlkOm9iai51dWlkLAogICAgICAgICAgICAgIHg6b2JqLnNjYWxlLngsCiAgICAgICAgICAgICAgeTpvYmouc2NhbGUueSwKICAgICAgICAgICAgICB6Om9iai5zY2FsZS56CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIH1lbHNlIGlmKG9iai5uYW1lLmluZGV4T2YoIumfs+mikeiwsSIpIT0tMSl7CiAgICAgICAgICAgIEJhckdyb3Vwcy5wdXNoKG9iaik7CiAgICAgICAgICAgIG1hcC5wdXNoKHsKICAgICAgICAgICAgICB1dWlkOm9iai51dWlkLAogICAgICAgICAgICAgIHg6b2JqLnNjYWxlLngsCiAgICAgICAgICAgICAgeTpvYmouc2NhbGUueSwKICAgICAgICAgICAgICB6Om9iai5zY2FsZS56CiAgICAgICAgICAgIH0pOwogICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG9iai5jaGlsZHJlblswXS5jaGlsZHJlblswXSk7CiAgICAgICAgICAgIENvbG9yTWFwLnB1c2goewogICAgICAgICAgICAgIHV1aWQ6b2JqLnV1aWQsCiAgICAgICAgICAgICAgcjpvYmouY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0ubWF0ZXJpYWwuY29sb3IuciwKICAgICAgICAgICAgICBnOm9iai5jaGlsZHJlblswXS5jaGlsZHJlblswXS5tYXRlcmlhbC5jb2xvci5nLAogICAgICAgICAgICAgIGI6b2JqLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdLm1hdGVyaWFsLmNvbG9yLmIsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb25zb2xlLmxvZyhvYmouY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0ubWF0ZXJpYWwuY29sb3IpOwogICAgICAgICAgICBjb25zb2xlLmxvZyhDb2xvck1hcCk7CgogICAgICAgICAgfWVsc2UgaWYob2JqLnR5cGUuaW5kZXhPZignTWVzaCcpIT0tMSYmb2JqLnBhcmVudD09c2NlbmUpewogICAgICAgICAgICAvL+WHoOS9leS9kwogICAgICAgICAgICBHZW9tZXRyeUdyb3Vwcy5wdXNoKG9iaik7CiAgICAgICAgICAgIG1hcC5wdXNoKHsKICAgICAgICAgICAgICB1dWlkOm9iai51dWlkLAogICAgICAgICAgICAgIHg6b2JqLnNjYWxlLngsCiAgICAgICAgICAgICAgeTpvYmouc2NhbGUueSwKICAgICAgICAgICAgICB6Om9iai5zY2FsZS56CgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29uc29sZS5sb2coR2VvbWV0cnlHcm91cHMpOwoKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSwKICAgICAgIHVwZGF0ZUNpcmNsZShsaW5lc0dyb3VwLHgseSx6KSB7CiAgICAgIGlmIChCYXJOb2RlcykgewoKICAgICAgICBsaW5lc0dyb3VwLnNjYWxlLnNldCh0aGlzLnNjYWxlKngsdGhpcy5zY2FsZSp5LHRoaXMuc2NhbGUqeik7CgogICAgICAgIGNvbnN0IGdlb21ldHJ5QSA9IGxpbmVzR3JvdXAuY2hpbGRyZW5bMF0uZ2VvbWV0cnk7CiAgICAgICAgLy9vdXRsaW5lCiAgICAgICAgY29uc3QgQXR0cmlidXRlQSA9IGdlb21ldHJ5QS5nZXRBdHRyaWJ1dGUoInBvc2l0aW9uIik7CiAgICAgICAgY29uc3QgZ2VvbWV0cnlCID0gbGluZXNHcm91cC5jaGlsZHJlblsxXS5nZW9tZXRyeTsKICAgICAgICAvL2lubGluZQogICAgICAgIGNvbnN0IEF0dHJpYnV0ZUIgPSBnZW9tZXRyeUIuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpOwoKICAgICAgICBjb25zdCBwb3NpdGlvbnMgPSBCYXJOb2Rlcy5tYXAodmFsdWUgPT4gewogICAgICAgICAgcmV0dXJuIFt2YWx1ZS5wb3NpdGlvbkEoKSwgdmFsdWUucG9zaXRpb25CKCldOwogICAgICAgIH0pOwogICAgICAgIHBvc2l0aW9ucy5mb3JFYWNoKChwb3NpdGlvbiwgaW5kZXgpID0+IHsKICAgICAgICAgIEF0dHJpYnV0ZUEuc2V0KFtwb3NpdGlvblswXS54LCBwb3NpdGlvblswXS55XSwgaW5kZXggKiAzKTsKICAgICAgICAgIEF0dHJpYnV0ZUIuc2V0KFtwb3NpdGlvblsxXS54LCBwb3NpdGlvblsxXS55XSwgaW5kZXggKiAzKTsKICAgICAgICAgIC8v5YmN5Lik57q/5pivb3V0bGluZeWSjGlubGluZQogICAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBsaW5lc0dyb3VwLmNoaWxkcmVuW2luZGV4KzJdLmdlb21ldHJ5OwogICAgICAgICAgY29uc3QgQXR0cmlidXRlID0gZ2VvbWV0cnkuZ2V0QXR0cmlidXRlKCJwb3NpdGlvbiIpOwogICAgICAgICAgQXR0cmlidXRlLnNldCgKICAgICAgICAgICAgW3Bvc2l0aW9uWzBdLngsIHBvc2l0aW9uWzBdLnksIDAsIHBvc2l0aW9uWzFdLngsIHBvc2l0aW9uWzFdLnksIDBdLAogICAgICAgICAgICAwCiAgICAgICAgICApOwogICAgICAgICAgQXR0cmlidXRlLm5lZWRzVXBkYXRlID0gdHJ1ZTsKICAgICAgICB9KTsKICAgICAgICBBdHRyaWJ1dGVBLnNldCgKICAgICAgICAgIFtBdHRyaWJ1dGVBLmFycmF5WzBdLCBBdHRyaWJ1dGVBLmFycmF5WzFdXSwKICAgICAgICAgIHBvc2l0aW9ucy5sZW5ndGggKiAzCiAgICAgICAgKTsKICAgICAgICBBdHRyaWJ1dGVCLnNldCgKICAgICAgICAgIFtBdHRyaWJ1dGVCLmFycmF5WzBdLCBBdHRyaWJ1dGVCLmFycmF5WzFdXSwKICAgICAgICAgIHBvc2l0aW9ucy5sZW5ndGggKiAzCiAgICAgICAgKTsKICAgICAgICBBdHRyaWJ1dGVBLm5lZWRzVXBkYXRlID0gdHJ1ZTsKICAgICAgICBBdHRyaWJ1dGVCLm5lZWRzVXBkYXRlID0gdHJ1ZTsKICAgICAgfQogICAgfSwKCiAgICAgICAgaW5pdCgpewogICAgICAgICAgICB0aGlzLmluaXRSZW5kZXJlcigpOwogICAgICAgICAgICB0aGlzLmluaXRTY2VuZSgpOwogICAgICAgICAgICB0aGlzLmluaXRDYW1lcmEoKTsKICAgICAgICAgICAgdGhpcy5pbml0Q29udHJvbHMoKTsKCiAgICAgICAgICAgIHRoaXMuaW5pdEF1ZGlvKCk7CiAgICAgICAgICAgIC8vdGhpcy5pbml0RWZmZWN0Q29tcG9zZXIoKTsKICAgICAgICAgICAgdGhpcy5pbml0U3RhdHMoKTsKICAgICAgICAgICAgLy8gaW5pdERhdEdVSSgpOwogICAgICAgICAgICAvL3RoaXMuYW5pbWF0ZSgpOwoKICAgICAgICB9LAogICAgICAgIGluaXRDb250cm9scygpIHsKICAgICAgICAgIGNvbnRyb2xzID0gbmV3IE9yYml0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50KTsKICAgICAgICAgLy8g5aaC5p6c5L2/55SoYW5pbWF0ZeaWueazleaXtu+8jOWwhuatpOWHveaVsOWIoOmZpAogICAgICAgICAvL2NvbnRyb2xzLmFkZEV2ZW50TGlzdGVuZXIoICdjaGFuZ2UnLCByZW5kZXIgKTsKICAgICAgICAgIC8vIOS9v+WKqOeUu+W+queOr+S9v+eUqOaXtumYu+WwvOaIluiHqui9rCDmhI/mgJ3mmK/lkKbmnInmg6/mgKcKICAgICAgICAgIGNvbnRyb2xzLmVuYWJsZURhbXBpbmcgPSB0cnVlOwogICAgICAgICAgLy/liqjmgIHpmLvlsLzns7vmlbAg5bCx5piv6byg5qCH5ouW5ou95peL6L2s54G15pWP5bqmCiAgICAgICAgIC8vY29udHJvbHMuZGFtcGluZ0ZhY3RvciA9IDAuMjU7CiAgICAgICAgICAvL+aYr+WQpuWPr+S7pee8qeaUvgogICAgICAgICAgY29udHJvbHMuZW5hYmxlWm9vbSA9IGZhbHNlOwogICAgICAgICAgLy/mmK/lkKboh6rliqjml4vovawKICAgICAgICAgIGNvbnRyb2xzLmF1dG9Sb3RhdGUgPSBndWkucm90YXRlOwogICAgICAgICAgLy/orr7nva7nm7jmnLrot53nprvljp/ngrnnmoTmnIDov5zot53nprsKICAgICAgICAgIGNvbnRyb2xzLm1pbkRpc3RhbmNlID0gMTsKICAgICAgICAgIC8v6K6+572u55u45py66Led56a75Y6f54K555qE5pyA6L+c6Led56a7CiAgICAgICAgICBjb250cm9scy5tYXhEaXN0YW5jZSA9IDIwMDsKICAgICAgICAgIC8v5piv5ZCm5byA5ZCv5Y+z6ZSu5ouW5ou9CiAgICAgICAgICBjb250cm9scy5lbmFibGVQYW4gPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGluaXRMaWdodCgpIHsKICAgICAgICAgIHNjZW5lLmFkZChuZXcgVEhSRUUuQW1iaWVudExpZ2h0KDB4NDQ0NDQ0KSk7CiAgICAgICAgICBsZXQgbGlnaHQgPSBuZXcgVEhSRUUuUG9pbnRMaWdodCgweGZmZmZmZik7CiAgICAgICAgICBsaWdodC5wb3NpdGlvbi5zZXQoODAsIDEwMCwgNTApOwogICAgICAgICAgLy/lkYror4nlubPooYzlhYnpnIDopoHlvIDlkK/pmLTlvbHmipXlsIQKICAgICAgICAgIGxpZ2h0LmNhc3RTaGFkb3cgPSB0cnVlOwogICAgICAgICAgc2NlbmUuYWRkKGxpZ2h0KTsKICAgICAgICB9LAogICAgICAgIGluaXRTdGF0cygpewogICAgICAgICAgICAgc3RhdHMgPSBuZXcgU3RhdHMoKTsKICAgICAgICAgICAgIHN0YXRzLmRvbUVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnOyAvL+e7neWvueWdkOaghwogICAgICAgICAgICAgc3RhdHMuZG9tRWxlbWVudC5zdHlsZS5sZWZ0ID0gJzBweCc7Ly8gKDAsMClweCzlt6bkuIrop5IKICAgICAgICAgICAgIHN0YXRzLmRvbUVsZW1lbnQuc3R5bGUudG9wID0gJzBweCc7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZWJnbCcpLmFwcGVuZENoaWxkKHN0YXRzLmRvbUVsZW1lbnQpOwoKICAgICAgICB9LAogICAgICAgIC8vIHVwZGF0ZVBvc2l0aW9uKCl7CiAgICAgICAgLy8gICAgIG1lc2gucG9zaXRpb24uc2V0KGNvbnRyb2xzLnBvc2l0aW9uWCxjb250cm9scy5wb3NpdGlvblksY29udHJvbHMucG9zaXRpb25aKTsKICAgICAgICAvLyB9LAogICAgICAgIC8v5Yid5aeL5YyW5riy5p+T5ZmoCiAgICAgICAgaW5pdFJlbmRlcmVyKCl7CgoKICAgICAgICAgICAgcmVuZGVyZXI9bmV3IFRIUkVFLldlYkdMUmVuZGVyZXIoeyBhbnRpYWxpYXM6IHRydWUgfSk7Ly/lrp7kvovljJbmuLLmn5PlmagKICAgICAgICAgICAgcmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCowLjg1LHdpbmRvdy5pbm5lckhlaWdodCowLjg1KTsvL+iuvue9ruWuvemrmAogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2ViZ2wnKS5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTsvL+a3u+WKoOWIsGRvbQogICAgICAgIH0sCiAgICAgICAgLy/liJ3lp4vljJblnLrmma8KICAgICAgICBpbml0U2NlbmUoKXsKCiAgICAgICAgICAgIHNjZW5lPW5ldyBUSFJFRS5TY2VuZSgpOy8v5a6e5L6L5YyW5Zy65pmvCiAgICAgICAgLy8gICAgIHNjZW5lLmJhY2tncm91bmQgPSBuZXcgVEhSRUUuQ3ViZVRleHR1cmVMb2FkZXIoKS5sb2FkKFsKICAgICAgICAvLyAgIHJlcXVpcmUoJ0AvYXNzZXRzL3NreWJveC9yaWdodC5qcGcnKSwKICAgICAgICAvLyAgIHJlcXVpcmUoJ0AvYXNzZXRzL3NreWJveC9sZWZ0LmpwZycpLAogICAgICAgIC8vICAgcmVxdWlyZSgnQC9hc3NldHMvc2t5Ym94L3RvcC5qcGcnKSwKICAgICAgICAvLyAgIHJlcXVpcmUoJ0AvYXNzZXRzL3NreWJveC9ib3R0b20uanBnJyksCiAgICAgICAgLy8gICByZXF1aXJlKCdAL2Fzc2V0cy9za3lib3gvZnJvbnQuanBnJyksCiAgICAgICAgLy8gICByZXF1aXJlKCdAL2Fzc2V0cy9za3lib3gvYmFjay5qcGcnKQogICAgICAgIC8vIF0pOwoKICAgICAgICB9LAogICAgICAgIC8v5Yid5aeL5YyW55u45py6CiAgICAgICAgaW5pdENhbWVyYSgpewogICAgICAgICAgICBjYW1lcmE9bmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDQ1LHdpbmRvdy5pbm5lcldpZHRoL3dpbmRvdy5pbm5lckhlaWdodCwwLjEsMjAwKQogICAgICAgICAgICAvL+WunuS+i+WMluebuOacuuOAkQogICAgICAgICAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsMCwxNTApOwogICAgICAgIH0sCiAgICAgICAgLy/liJvlu7rmqKHlnosKCgogICAgICAgIC8v6L+Q6KGM5Yqo55S7CiAgICAgICAgYW5pbWF0ZSgpewogICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlKTsvL+W+queOr+iwg+eUqOWHveaVsAoKICAgICAgICAgICAgLy8gbWVzaC5yb3RhdGlvbi54Kz0wLjAxOwogICAgICAgICAgICAvLyAvLyAvL+avj+W4p+e9keagvOaooeWei+ayv3jovbTml4vovawwLjAx5byn5bqmCiAgICAgICAgICAgIC8vIG1lc2gucm90YXRpb24ueSs9MC4wMjsKICAgICAgICAgICAgLy8gLy/mr4/luKfnvZHmoLzmqKHlnovmsr956L205peL6L2sMC4wMuW8p+W6pgogICAgICAgICAgICAvLyAvL3N0YXRzLnVwZGF0ZSgpOy8v5pu05paw5oCn6IO95qOA5rWL5qGGCgogICAgICAgICAgICBzdGF0cy51cGRhdGUoKTsKICAgICAgICAgICAgY29udHJvbHMudXBkYXRlKCk7CiAgICAgICAgICAgIGlmKHRoaXMuQW5hbHlzZXImJnRoaXMuaXNQbGF5aW5nKXsKICAgICAgICAgICAgICBsZXQgYnVmZmVyTGVuZ3RoPXRoaXMuQW5hbHlzZXIuZnJlcXVlbmN5QmluQ291bnQ7CiAgICAgICAgICAgICAgbGV0IGFycj1uZXcgVWludDhBcnJheShidWZmZXJMZW5ndGgpOwogICAgICAgICAgICAgIHRoaXMuQW5hbHlzZXIuZ2V0Qnl0ZUZyZXF1ZW5jeURhdGEoYXJyKTsKICAgICAgICAgICAgICAvL2xldCBhcnI9YW5hbHlzZXIuZ2V0RnJlcXVlbmN5RGF0YSgpOwogICAgICAgICAgICAgIGNvbnN0IERlbHRhPXRoaXMuY2xvY2suZ2V0RGVsdGEoKTsKICAgICAgICAgICAgICBCYXJOb2Rlcy5mb3JFYWNoKChub2RlLGluZGV4LGFycmF5KT0+ewogICAgICAgICAgICAgICAgbm9kZS5zdHJlbmd0aChhcnJbaW5kZXggJSBhcnJheS5sZW5ndGhdKjAuMSk7CiAgICAgICAgICAgICAgICBub2RlLnRyYW5zaXRpb24oRGVsdGEpOwoKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAvL+S6i+WunuS4imFycuWAvOacgOWkpzI1Ne+8n++8n++8n++8n++8n++8nwogICAgICAgICAgICAgIGxldCB0aGF0PXRoaXM7CiAgICAgICAgICAgICAgIHRoaXMuc2NhbGU9MSthcnJbTWF0aC5jZWlsKGFyci5sZW5ndGgqMC4wNSldLzUwMDsKICAgICAgICAgICAgICAvL2xldCBuc2NhbGU9MSthcnJbMTNdLzUwMDsKICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCLljp/lp4siK3RoaXMuc2NhbGUrIuaUuei/myIrbnNjYWxlKTsKCiAgICAgICAgICAgICAgIGlmKExpbmVHcm91cHMubGVuZ3RoPjApewogICAgICAgICAgICAgICAgICBMaW5lR3JvdXBzLmZvckVhY2goZnVuY3Rpb24ob2JqKXsKICAgICAgICAgICAgICAgICAgICBjb25zdCBzY2FsZWRhdGE9bWFwLmZpbHRlcigoaXRlbSk9Pml0ZW0udXVpZD09b2JqLnV1aWQpOwoKICAgICAgICAgICAgICAgICAgICB0aGF0LnVwZGF0ZUNpcmNsZShvYmosc2NhbGVkYXRhWzBdLngsc2NhbGVkYXRhWzBdLnksc2NhbGVkYXRhWzBdLnopOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgaWYoQmFyR3JvdXBzLmxlbmd0aD4wKXsKICAgICAgICAgICAgICAgICBCYXJHcm91cHMuZm9yRWFjaChmdW5jdGlvbihvYmopewoKICAgICAgICAgICAgICAgICAgICBjb25zdCBzY2FsZWRhdGE9bWFwLmZpbHRlcigoaXRlbSk9Pml0ZW0udXVpZD09b2JqLnV1aWQpOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IEJhckNvbG9yPUNvbG9yTWFwLmZpbHRlcigoaXRlbSk9Pml0ZW0udXVpZD09b2JqLnV1aWQpOwogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKEJhckNvbG9yWzBdLnIpOwogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKEJhckNvbG9yWzBdLmcpOwogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKEJhckNvbG9yWzBdLmIpOwogICAgICAgICAgICAgICAgICAgIHRoYXQudXBkYXRlQmFycyhhcnIsb2JqLHNjYWxlZGF0YVswXS54LHNjYWxlZGF0YVswXS55LHNjYWxlZGF0YVswXS56LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJhckNvbG9yWzBdLnIsQmFyQ29sb3JbMF0uZyxCYXJDb2xvclswXS5iKTsKICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgaWYoR2VvbWV0cnlHcm91cHMubGVuZ3RoPjApewogICAgICAgICAgICAgICAgIEdlb21ldHJ5R3JvdXBzLmZvckVhY2goZnVuY3Rpb24gKG9iail7CiAgICAgICAgICAgICAgICAgICBjb25zdCBzY2FsZWRhdGE9bWFwLmZpbHRlcigoaXRlbSk9Pml0ZW0udXVpZD09b2JqLnV1aWQpOwogICAgICAgICAgICAgICAgICAgdGhhdC51cGRhdGVHZW9tZXRyeShvYmosc2NhbGVkYXRhWzBdLngsc2NhbGVkYXRhWzBdLnksc2NhbGVkYXRhWzBdLnopOwoKICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgfQoKCiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29tcG9zZXIucmVuZGVyKCk7Ly/kvb/nlKjlkI7mnJ/lpITnkIbpgJrpgZPmuLLmn5MKICAgICAgICB9LAogICAgICAgIHVwZGF0ZUdlb21ldHJ5KEdlb21ldHJ5LHgseSx6KXsKICAgICAgICAgICAgR2VvbWV0cnkuc2NhbGUuc2V0KHRoaXMuc2NhbGUqeCx0aGlzLnNjYWxlKnksdGhpcy5zY2FsZSp6KTsKICAgICAgICB9LAogICAgICAgIHVwZGF0ZUJhcnMoYXJyLGJhckdyb3VwLHgseSx6LHIsZyxiKXsKICAgICAgICAgICBpZihiYXJHcm91cCl7CiAgICAgICAgICAgICAgYmFyR3JvdXAucm90YXRpb24ueiArPSAwLjAwMjsKICAgICAgICAgICAgICBiYXJHcm91cC5zY2FsZS5zZXQodGhpcy5zY2FsZSp4LCB0aGlzLnNjYWxlKnksIHRoaXMuc2NhbGUqeik7CiAgICAgICAgICAgICAgYmFyR3JvdXAuY2hpbGRyZW4uZm9yRWFjaCgoZWxlbSxpbmRleCk9PnsKICAgICAgICAgICAgICAgIC8v6K6w5b2V55qE5Y6fcmdi5YC85pivMC0x55qE5rWu54K55YC877yM6ZyA6KaB5qC55o2u6aKR546H5pWw5YC86L2s5o2iCiAgICAgICAgICAgICAgICBpZihyPjApewogICAgICAgICAgICAgICAgICAgZWxlbS5jaGlsZHJlblswXS5tYXRlcmlhbC5jb2xvci5yPSBhcnJbaW5kZXhdICpyLyAyNTU7CgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICBpZihnPjApewogICAgICAgICAgICAgICAgICBlbGVtLmNoaWxkcmVuWzBdLm1hdGVyaWFsLmNvbG9yLmc9YXJyW2luZGV4XSpnLzI1NTsKICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmKGI+MCl7CiAgICAgICAgICAgICAgICAgIGVsZW0uY2hpbGRyZW5bMF0ubWF0ZXJpYWwuY29sb3IuYj1hcnJbaW5kZXhdKmIvMjU1OwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmKGFycltpbmRleF09PT0wKXsKICAgICAgICAgICAgICAgICAgZWxlbS5zY2FsZS5zZXQoMSwxLDEpOwogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgbGV0IG0gPSBhcnJbaW5kZXhdIC8gMjA7CiAgICAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0UmFuZ2UgPSBNYXRoLm1heCgKICAgICAgICAgICAgICAgICAgYXJyW2luZGV4XSAvIDIwIC0gYXJyW2luZGV4IC0gMV0gLyAyMCwwKTsKICAgICAgICAgICAgICBpZiAobSA8IHRhcmdldFJhbmdlKSB7CiAgICAgICAgICAgICAgICBtID0gdGFyZ2V0UmFuZ2U7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBlbGVtLnNjYWxlLnNldCgxLCBtLCAxKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaW5pdEJhcnMoKXsKICAgICAgICAgIEJhck5vZGVzPXJhbmdlKDAsIDI1NikubWFwKGluZGV4ID0+IHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBub2RlKAogICAgICAgICAgICAgIDIwLAogICAgICAgICAgICAgICgoaW5kZXggLyAyNTYpICogMzYwICsgNDUpICUgMzYwLAogICAgICAgICAgICAgIG5ldyBUSFJFRS5WZWN0b3IyKDAsIDApCiAgICAgICAgICAgICk7CiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnNvbGUubG9nKEJhck5vZGVzKTsKICAgICAgICB9LAogICAgICAgIC8v5ZCO5pyf5aSE55CGCiAgICAgICAgaW5pdEVmZmVjdENvbXBvc2VyKCl7CiAgICAgICAgICAgIGNvbXBvc2VyPW5ldyBFZmZlY3RDb21wb3NlcihyZW5kZXJlcik7CiAgICAgICAgICAgIHZhciByZW5kZXJQYXNzPW5ldyBSZW5kZXJQYXNzKHNjZW5lLGNhbWVyYSk7CiAgICAgICAgICAgIGNvbXBvc2VyLmFkZFBhc3MocmVuZGVyUGFzcyk7CiAgICAgICAgICAgIC8vUmVuZGVyUGFzc+mAmuW4uOS9jeS6jui/h+eoi+mTvueahOW8gOWni++8jOS7peS+v+Wwhua4suafk+WlveeahOWcuuaZr+S9nOS4uui+k+WFpeadpeaPkOS+m+e7meS4i+S4gOS4quWQjuacn+WkhOeQhuatpemqpOOAggogICAgICAgICAgICAvL0NvcHlTaGFkZXLmmK/kuLrkuobog73lsIbnu5PmnpzovpPlh7rvvIzmma7pgJrnmoTpgJrpgZPkuIDoiKzpg73mmK/kuI3og73ovpPlh7rnmoTvvIzopoHpnaBDb3B5U2hhZGVy6L+b6KGM6L6T5Ye6CiAgICAgICAgICAgICBjb25zdCBjb3B5U2hhZGVyID0gbmV3IFNoYWRlclBhc3MoQ29weVNoYWRlcik7CiAgICAgICAgICAgIGNvcHlTaGFkZXIucmVuZGVyVG9TY3JlZW4gPSB0cnVlOwogICAgICAgICAgICAvL+i/meS4quWPguaVsOeahOebrueahOaYr+mprOS4iuWwhuW9k+WJjeeahOWGheWuuei+k+WHugogICAgICAgICAgICB0aGlzLmluaXRCbG9vbVBhc3MoKTsKICAgICAgICAgICAgY29tcG9zZXIuYWRkUGFzcyhjb3B5U2hhZGVyKTsKICAgICAgICB9LAogICAgICAgIGluaXRCbG9vbVBhc3MoKXsKICAgICAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgICAgIGV4cG9zdXJlOiAwLjUsCiAgICAgICAgICAgIGJsb29tU3RyZW5ndGg6IDEsCiAgICAgICAgICAgICBibG9vbVRocmVzaG9sZDogMCwKICAgICAgICAgICAgYmxvb21SYWRpdXM6IDAuOAogICAgICAgICAgfTsKICAgICAgICAgIGxldCBibG9vbVBhc3M9bmV3IFVucmVhbEJsb29tUGFzcygKICAgICAgICAgICAgbmV3IFRIUkVFLlZlY3RvcjIod2luZG93LmlubmVyV2lkdGgqMC44NSx3aW5kb3cuaW5uZXJIZWlnaHQqMC44NSksCiAgICAgICAgICAgICAgMS41LAogICAgICAgICAgICAgIDAuMiwKICAgICAgICAgICAgICAwCiAgICAgICAgICApOwogICAgICAgICAgYmxvb21QYXNzLnRocmVzaG9sZCA9IHBhcmFtcy5ibG9vbVRocmVzaG9sZDsKICAgICAgICAgIGJsb29tUGFzcy5zdHJlbmd0aCA9IHBhcmFtcy5ibG9vbVN0cmVuZ3RoOwogICAgICAgICAgYmxvb21QYXNzLnJhZGl1cyA9IHBhcmFtcy5ibG9vbVJhZGl1czsKICAgICAgICAgIGNvbXBvc2VyLmFkZFBhc3MoYmxvb21QYXNzKTsKCiAgICAgICAgfSwKICAgICAgc3RhcnRwbGF5KCl7CiAgICAgICAgbGV0IHRoYXQ9dGhpczsKICAgICAgICB0aGlzLiRidXMuJG9uKCdwbGF5ZmlsZScsKHJlcyk9PnsKICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIC8vdGhhdC5pc0xvYWRlZD1mYWxzZTsKICAgICAgICAgIC8v5q+P5qyh5a+85YWl5pS55Y+Y5YC854S25ZCO6YeN5paw5riy5p+TCiAgICAgICAgICB2YXIgSlNPTlN0cj1KU09OLnN0cmluZ2lmeShyZXMpOwogICAgICAgICAgbGV0IGZpbGU9bmV3IEZpbGUoW0pTT05TdHJdLCdzY2VuZS5qc29uJyx7CiAgICAgICAgICAgIHR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgbGFzdE1vZGlmaWVkOiBEYXRlLm5vdygpCiAgICAgICAgICB9KTsKICAgICAgICAgIC8v57uE5ZCI5oiQ5paH5Lu2CiAgICAgICAgICBsZXQgdXJsID0gbnVsbCA7CiAgICAgICAgICBpZiAod2luZG93LmNyZWF0ZU9iamVjdFVSTCE9dW5kZWZpbmVkKSB7IC8vIGJhc2ljCiAgICAgICAgICAgIHVybCA9IHdpbmRvdy5jcmVhdGVPYmplY3RVUkwoZmlsZSkgOwogICAgICAgICAgfSBlbHNlIGlmICh3aW5kb3cuVVJMIT11bmRlZmluZWQpIHsgLy8gbW96aWxsYShmaXJlZm94KQogICAgICAgICAgICB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKSA7CiAgICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy53ZWJraXRVUkwhPXVuZGVmaW5lZCkgeyAvLyB3ZWJraXQgb3IgY2hyb21lCiAgICAgICAgICAgIHVybCA9IHdpbmRvdy53ZWJraXRVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpIDsKICAgICAgICAgIH0KICAgICAgICAgIHZhciBsb2FkZXI9bmV3IFRIUkVFLk9iamVjdExvYWRlcigpOwogICAgICAgICAgbG9hZGVyLmxvYWQodXJsLGZ1bmN0aW9uIChvYmopewogICAgICAgICAgICBzY2VuZT1vYmo7CiAgICAgICAgICAgIC8vdGhhdC5pbml0TGlnaHQoKTsKICAgICAgICAgICAgdGhhdC5BbmFseXNpc0xpbmUoKTsKICAgICAgICAgICAgdGhhdC5pbml0QmFycygpOwogICAgICAgICAgICB0aGF0LmluaXRFZmZlY3RDb21wb3NlcigpOwogICAgICAgICAgICAvL3RoYXQuaW5pdFN0YXRzKCk7CiAgICAgICAgICAgIC8vIGluaXREYXRHVUkoKTsKICAgICAgICAgICAgdGhhdC5hbmltYXRlKCk7CiAgICAgICAgICB9KTsKCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmluaXQoKTsKICAgICAgICB0aGlzLkdldEF1ZGlvRGF0YSgpOwogICAgICAgIHRoaXMuR2V0U3RhdGUoKTsKICAgICAgICB0aGlzLnN0YXJ0cGxheSgpOwoKICAgIH0sCn0K"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Scene.vue","sourceRoot":"src/views/scene","sourcesContent":["<template>\n   <div class=\"app-container-play\">\n\n     <el-container>\n       <el-header>\n         <el-button @click=\"Import\" type=\"primary\" style=\"margin-left: 16px;\">\n           导入\n         </el-button>\n       </el-header>\n       <el-main>\n         <el-scrollbar class=\"Scrollbar\">\n           <div id=\"webgl\" style=\"position:relative\">\n\n           </div>\n         </el-scrollbar>\n       </el-main>\n       <el-footer height=\"100px\">\n         <AudioPlayer/>\n       </el-footer>\n     </el-container>\n\n\n     <!-- <div class=\"file-select-btn\" @click=\"$refs.fileId.click()\">\n      选择音乐\n      <input ref=\"fileId\" type=\"file\" class=\"file-input\" @change=\"getAudio\" />\n     </div> -->\n\n\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three/build/three.module.js'\nimport Stats from '../../store/Stats/stats.min.js'\nimport { OrbitControls } from \"../../lib/OrbitControls.js\";\nimport index, { GUI } from \"../../lib/dat.gui.module.js\";\n//辉光\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass.js';\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\n\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { range } from \"../../components/mode/range\";\nimport { node } from \"../../components/mode/node\";\nimport AudioPlayer from \"../scene/Player/Player.vue\"\nimport { randomRange } from \"../../components/mode/randomRange\";\nimport { Triangle } from \"../../components/mode/Triangle\";\nimport { Loader } from '../../lib/three.module.js';\nlet renderer,camera,scene,geometry,material,mesh,stats,controls;\n//  let container=document.getElementById('webgl');\nlet gui = {\n  R: 20,\n  G: 90,\n  B: 225,\n  TrianglesBgColor: 0x03a9f4,\n  TrianglesLineColor: 0x03a9f4,\n  lineColor: 0x00ffff,\n  rotate: false\n};\nlet audio, analyser; // 音频\nlet BarNodes; // 线\nlet composer;//合成器\nlet Triangles = [],\n  TriangleGroup;\nlet LineGroups=[];\nlet BarGroups=[];\nlet GeometryGroups=[];\nlet map=[];\nlet ColorMap=[];\nexport default {\n    name: 'Scene',\n    components:{\n      AudioPlayer\n    },\n    data() {\n      return {\n        clock:new THREE.Clock(),\n        scale:1,\n        Analyser:null,\n        isPlaying:false,\n        isLoaded:false,\n      }\n    },\n    watch:{\n      isLoaded:{\n        handler(){\n          if(this.isLoaded==true){\n             this.initLight();\n              this.AnalysisLine();\n              this.initBars();\n              this.initEffectComposer();\n              //that.initStats();\n            // initDatGUI();\n            this.animate();\n          }\n        }\n      }\n      // $route:{\n      //   handler(){\n      //     this.\n      //   }\n      // }\n    },\n    methods: {\n      Import(){\n        this.isLoaded=false;\n        //每次导入改变值然后重新渲染\n        let that=this;\n        let input=document.createElement('input');\n        input.type=\"file\";\n        input.addEventListener(\"change\",function(){\n          let file=input.files[0];\n          console.log(file);\n          if(file.type.indexOf(\"json\")>=0){\n            let url = null ;\n            if (window.createObjectURL!=undefined) { // basic\n                url = window.createObjectURL(file) ;\n            } else if (window.URL!=undefined) { // mozilla(firefox)\n                url = window.URL.createObjectURL(file) ;\n            } else if (window.webkitURL!=undefined) { // webkit or chrome\n                url = window.webkitURL.createObjectURL(file) ;\n            }\n            //根据url进行加载回调，可以防止\n        //     let reader=new FileReader();\n        //     //reader.readAsText(file);\n        //     reader.readAsDataURL(file);\n        // reader.onloadend = function(e) {\n        //   _that.audioLoad(e.target.result);\n        // };\n\n\n             let loader=new THREE.ObjectLoader();\n             loader.load(url,\n              function(obj){\n                //加载完成后进行\n                scene=obj;\n                that.isLoaded=true;\n\n              },\n              // onProgress callback\n\t            function ( xhr ) {\n\t\t          console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n\t            },\n\n\t          // onError callback\n\t            function ( err ) {\n\t\t              console.error( 'An error happened'+err );\n              });\n\n            // let reader=new FileReader();\n            // reader.readAsText(file);\n            // reader.onloadend=function(){\n            //   let loader=new THREE.ObjectLoader();\n            //   loader.parse(JSON.parse(this.result),\n            //     function(obj){\n            //       scene=obj;\n            //     }\n            //   );\n              //scene=newscene;\n          }\n        });\n        input.click();\n      },\n      // 选择音频\n    // getAudio() {\n    //   let _that = this;\n    //   let objFile = this.$refs.fileId;\n    //   if (objFile.value === \"\") {\n    //     return false;\n    //   }\n    //   if (window.FileReader) {\n    //     let reader = new FileReader();\n    //     reader.readAsDataURL(objFile.files[0]);\n    //     reader.onloadend = function(e) {\n    //       _that.audioLoad(e.target.result);\n    //     };\n    //   }\n    // },\n    //  音频加载播放\n    // audioLoad(url) {\n    //   // let _that = this;\n\n    //   let audioLoader = new THREE.AudioLoader(); // 音频加载器\n    //   audioLoader.load(url, function(AudioBuffer) {\n    //     if (audio.isPlaying) {\n    //       audio.stop();\n    //       audio.setBuffer();\n    //     }\n    //     audio.setBuffer(AudioBuffer); // 音频缓冲区对象关联到音频对象audio\n    //     audio.setLoop(true); //是否循环\n    //     audio.setVolume(1); //音量\n    //     audio.play(); //播放\n    //     // 音频分析器和音频绑定，可以实时采集音频时域数据进行快速傅里叶变换\n    //     analyser = new THREE.AudioAnalyser(audio, 256 * 2);\n    //   });\n    // },\n    GetState(){\n      this.$bus.$on('PlayState',(isPlaying)=>{\n          this.isPlaying=isPlaying;\n      })\n    },\n    GetAudioData(){\n      let that=this;\n        this.$bus.$on('BindingAnalyser',(analyser)=>{\n          that.Analyser=analyser;\n\n        })\n    },\n    initAudio(){\n      let listener=new THREE.AudioListener();\n      audio=new THREE.Audio(listener);\n    },\n      AnalysisLine(){\n\n\n        //获取变化线段\n        scene.traverse(function(obj){\n          if(obj.name.indexOf(\"音频线\")!=-1){\n            LineGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n            });\n\n          }else if(obj.name.indexOf(\"音频谱\")!=-1){\n            BarGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n            });\n           // console.log(obj.children[0].children[0]);\n            ColorMap.push({\n              uuid:obj.uuid,\n              r:obj.children[0].children[0].material.color.r,\n              g:obj.children[0].children[0].material.color.g,\n              b:obj.children[0].children[0].material.color.b,\n            });\n            console.log(obj.children[0].children[0].material.color);\n            console.log(ColorMap);\n\n          }else if(obj.type.indexOf('Mesh')!=-1&&obj.parent==scene){\n            //几何体\n            GeometryGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n\n            });\n            console.log(GeometryGroups);\n\n          }\n        });\n      },\n       updateCircle(linesGroup,x,y,z) {\n      if (BarNodes) {\n\n        linesGroup.scale.set(this.scale*x,this.scale*y,this.scale*z);\n\n        const geometryA = linesGroup.children[0].geometry;\n        //outline\n        const AttributeA = geometryA.getAttribute(\"position\");\n        const geometryB = linesGroup.children[1].geometry;\n        //inline\n        const AttributeB = geometryB.getAttribute(\"position\");\n\n        const positions = BarNodes.map(value => {\n          return [value.positionA(), value.positionB()];\n        });\n        positions.forEach((position, index) => {\n          AttributeA.set([position[0].x, position[0].y], index * 3);\n          AttributeB.set([position[1].x, position[1].y], index * 3);\n          //前两线是outline和inline\n          const geometry = linesGroup.children[index+2].geometry;\n          const Attribute = geometry.getAttribute(\"position\");\n          Attribute.set(\n            [position[0].x, position[0].y, 0, position[1].x, position[1].y, 0],\n            0\n          );\n          Attribute.needsUpdate = true;\n        });\n        AttributeA.set(\n          [AttributeA.array[0], AttributeA.array[1]],\n          positions.length * 3\n        );\n        AttributeB.set(\n          [AttributeB.array[0], AttributeB.array[1]],\n          positions.length * 3\n        );\n        AttributeA.needsUpdate = true;\n        AttributeB.needsUpdate = true;\n      }\n    },\n\n        init(){\n            this.initRenderer();\n            this.initScene();\n            this.initCamera();\n            this.initControls();\n\n            this.initAudio();\n            //this.initEffectComposer();\n            this.initStats();\n            // initDatGUI();\n            //this.animate();\n\n        },\n        initControls() {\n          controls = new OrbitControls(camera, renderer.domElement);\n         // 如果使用animate方法时，将此函数删除\n         //controls.addEventListener( 'change', render );\n          // 使动画循环使用时阻尼或自转 意思是否有惯性\n          controls.enableDamping = true;\n          //动态阻尼系数 就是鼠标拖拽旋转灵敏度\n         //controls.dampingFactor = 0.25;\n          //是否可以缩放\n          controls.enableZoom = false;\n          //是否自动旋转\n          controls.autoRotate = gui.rotate;\n          //设置相机距离原点的最远距离\n          controls.minDistance = 1;\n          //设置相机距离原点的最远距离\n          controls.maxDistance = 200;\n          //是否开启右键拖拽\n          controls.enablePan = false;\n        },\n        initLight() {\n          scene.add(new THREE.AmbientLight(0x444444));\n          let light = new THREE.PointLight(0xffffff);\n          light.position.set(80, 100, 50);\n          //告诉平行光需要开启阴影投射\n          light.castShadow = true;\n          scene.add(light);\n        },\n        initStats(){\n             stats = new Stats();\n             stats.domElement.style.position = 'absolute'; //绝对坐标\n             stats.domElement.style.left = '0px';// (0,0)px,左上角\n             stats.domElement.style.top = '0px';\n            document.getElementById('webgl').appendChild(stats.domElement);\n\n        },\n        // updatePosition(){\n        //     mesh.position.set(controls.positionX,controls.positionY,controls.positionZ);\n        // },\n        //初始化渲染器\n        initRenderer(){\n\n\n            renderer=new THREE.WebGLRenderer({ antialias: true });//实例化渲染器\n            renderer.setSize(window.innerWidth*0.85,window.innerHeight*0.85);//设置宽高\n            document.getElementById('webgl').appendChild(renderer.domElement);//添加到dom\n        },\n        //初始化场景\n        initScene(){\n\n            scene=new THREE.Scene();//实例化场景\n        //     scene.background = new THREE.CubeTextureLoader().load([\n        //   require('@/assets/skybox/right.jpg'),\n        //   require('@/assets/skybox/left.jpg'),\n        //   require('@/assets/skybox/top.jpg'),\n        //   require('@/assets/skybox/bottom.jpg'),\n        //   require('@/assets/skybox/front.jpg'),\n        //   require('@/assets/skybox/back.jpg')\n        // ]);\n\n        },\n        //初始化相机\n        initCamera(){\n            camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,200)\n            //实例化相机】\n            camera.position.set(0,0,150);\n        },\n        //创建模型\n\n\n        //运行动画\n        animate(){\n            requestAnimationFrame(this.animate);//循环调用函数\n\n            // mesh.rotation.x+=0.01;\n            // // //每帧网格模型沿x轴旋转0.01弧度\n            // mesh.rotation.y+=0.02;\n            // //每帧网格模型沿y轴旋转0.02弧度\n            // //stats.update();//更新性能检测框\n\n            stats.update();\n            controls.update();\n            if(this.Analyser&&this.isPlaying){\n              let bufferLength=this.Analyser.frequencyBinCount;\n              let arr=new Uint8Array(bufferLength);\n              this.Analyser.getByteFrequencyData(arr);\n              //let arr=analyser.getFrequencyData();\n              const Delta=this.clock.getDelta();\n              BarNodes.forEach((node,index,array)=>{\n                node.strength(arr[index % array.length]*0.1);\n                node.transition(Delta);\n\n              });\n              //事实上arr值最大255？？？？？？\n              let that=this;\n               this.scale=1+arr[Math.ceil(arr.length*0.05)]/500;\n              //let nscale=1+arr[13]/500;\n              //console.log(\"原始\"+this.scale+\"改进\"+nscale);\n\n               if(LineGroups.length>0){\n                  LineGroups.forEach(function(obj){\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n\n                    that.updateCircle(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\n                });\n               }\n               if(BarGroups.length>0){\n                 BarGroups.forEach(function(obj){\n\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n                    const BarColor=ColorMap.filter((item)=>item.uuid==obj.uuid);\n                    // console.log(BarColor[0].r);\n                    // console.log(BarColor[0].g);\n                    // console.log(BarColor[0].b);\n                    that.updateBars(arr,obj,scaledata[0].x,scaledata[0].y,scaledata[0].z,\n                                   BarColor[0].r,BarColor[0].g,BarColor[0].b);\n                 });\n               };\n               if(GeometryGroups.length>0){\n                 GeometryGroups.forEach(function (obj){\n                   const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n                   that.updateGeometry(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\n\n                 });\n               }\n\n\n            }\n            composer.render();//使用后期处理通道渲染\n        },\n        updateGeometry(Geometry,x,y,z){\n            Geometry.scale.set(this.scale*x,this.scale*y,this.scale*z);\n        },\n        updateBars(arr,barGroup,x,y,z,r,g,b){\n           if(barGroup){\n              barGroup.rotation.z += 0.002;\n              barGroup.scale.set(this.scale*x, this.scale*y, this.scale*z);\n              barGroup.children.forEach((elem,index)=>{\n                //记录的原rgb值是0-1的浮点值，需要根据频率数值转换\n                if(r>0){\n                   elem.children[0].material.color.r= arr[index] *r/ 255;\n\n                }\n               if(g>0){\n                  elem.children[0].material.color.g=arr[index]*g/255;\n               }\n\n                if(b>0){\n                  elem.children[0].material.color.b=arr[index]*b/255;\n                }\n\n                if(arr[index]===0){\n                  elem.scale.set(1,1,1);\n                }else{\n              let m = arr[index] / 20;\n                   let targetRange = Math.max(\n                  arr[index] / 20 - arr[index - 1] / 20,0);\n              if (m < targetRange) {\n                m = targetRange;\n              }\n\n              elem.scale.set(1, m, 1);\n                }\n\n              });\n           }\n        },\n        initBars(){\n          BarNodes=range(0, 256).map(index => {\n            return new node(\n              20,\n              ((index / 256) * 360 + 45) % 360,\n              new THREE.Vector2(0, 0)\n            );\n          });\n          console.log(BarNodes);\n        },\n        //后期处理\n        initEffectComposer(){\n            composer=new EffectComposer(renderer);\n            var renderPass=new RenderPass(scene,camera);\n            composer.addPass(renderPass);\n            //RenderPass通常位于过程链的开始，以便将渲染好的场景作为输入来提供给下一个后期处理步骤。\n            //CopyShader是为了能将结果输出，普通的通道一般都是不能输出的，要靠CopyShader进行输出\n             const copyShader = new ShaderPass(CopyShader);\n            copyShader.renderToScreen = true;\n            //这个参数的目的是马上将当前的内容输出\n            this.initBloomPass();\n            composer.addPass(copyShader);\n        },\n        initBloomPass(){\n          let params = {\n            exposure: 0.5,\n            bloomStrength: 1,\n             bloomThreshold: 0,\n            bloomRadius: 0.8\n          };\n          let bloomPass=new UnrealBloomPass(\n            new THREE.Vector2(window.innerWidth*0.85,window.innerHeight*0.85),\n              1.5,\n              0.2,\n              0\n          );\n          bloomPass.threshold = params.bloomThreshold;\n          bloomPass.strength = params.bloomStrength;\n          bloomPass.radius = params.bloomRadius;\n          composer.addPass(bloomPass);\n\n        },\n      startplay(){\n        let that=this;\n        this.$bus.$on('playfile',(res)=>{\n          //console.log(res);\n          //that.isLoaded=false;\n          //每次导入改变值然后重新渲染\n          var JSONStr=JSON.stringify(res);\n          let file=new File([JSONStr],'scene.json',{\n            type: 'application/json',\n            lastModified: Date.now()\n          });\n          //组合成文件\n          let url = null ;\n          if (window.createObjectURL!=undefined) { // basic\n            url = window.createObjectURL(file) ;\n          } else if (window.URL!=undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file) ;\n          } else if (window.webkitURL!=undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file) ;\n          }\n          var loader=new THREE.ObjectLoader();\n          loader.load(url,function (obj){\n            scene=obj;\n            //that.initLight();\n            that.AnalysisLine();\n            that.initBars();\n            that.initEffectComposer();\n            //that.initStats();\n            // initDatGUI();\n            that.animate();\n          });\n\n        });\n      }\n\n    },\n    mounted() {\n        this.init();\n        this.GetAudioData();\n        this.GetState();\n        this.startplay();\n\n    },\n}\n</script>\n\n<style>\n\n</style>\n"]}]}