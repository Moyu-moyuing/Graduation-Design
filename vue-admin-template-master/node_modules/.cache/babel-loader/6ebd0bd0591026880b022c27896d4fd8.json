{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Footer\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Footer\\index.vue","mtime":1652608804506},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovd3VoYW5saWdvbmctamF2YS9tdXNpYy92dWUtYWRtaW4tdGVtcGxhdGUtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIC8qYnVnOgogICog5Zy65pmv5qCR5Zyo5q+P5qyh54K55Ye757yW6L6R5ZCO5Lya5pS55Y+YIOKImgogICog6Lez6L2s6Lev55Sx6Zeu6aKYIOKImgogICog5paw5aKe5oyJ6ZKuIOKImgogICog5Zu+54mH5byC5bi46Zeu6aKYIOKImgogICog5pKt5pS+5Zmo5qC35byPCiAgKiDmjInpkq7moLflvI8KICAqIOaPkOS6pOaKveWxieS8mOWMliDiiJoKICAqIOWKoOi9veWKqOeUuwogICog5YWz6Zet5ryU56S65pe26Z+z5LmQ5YWz6ZetCiAgKiDnmbvlvZUqLwogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkcmF3ZXI6IGZhbHNlLAogICAgICBmaWxlTGlzdDogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBpZDogbnVsbCwKICAgICAgZmlsZTogbnVsbCwKICAgICAgZm9ybTogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGRhdGUxOiAnJywKICAgICAgICBkYXRlMjogJycsCiAgICAgICAgaW1nOiAnJwogICAgICB9LAogICAgICB1c2VyaWQ6IG51bGwsCiAgICAgIHVzZXJuYW1lOiBudWxsLAogICAgICBpbWdpZDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ25hbWUnXSkpLAogIG1ldGhvZHM6IHsKICAgIFNhdmU6IGZ1bmN0aW9uIFNhdmUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmRyYXdlciA9IHRydWU7CgogICAgICBpZiAodGhpcy5pZCAhPSBudWxsKSB7CiAgICAgICAgdGhpcy5yZXF1ZXN0LmdldCgiaHR0cDovL2xvY2FsaG9zdDo5MDkwL3NjZW5lZmlsZS9nZXRieWlkIiwgewogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIGlkOiB0aGlzLmlkCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy5mb3JtLm5hbWUgPSByZXMuZmlsZS5maWxlbmFtZTsKICAgICAgICAgIF90aGlzLnVzZXJpZCA9IHJlcy5maWxlLnVzZXJpZDsKICAgICAgICAgIF90aGlzLnVzZXJuYW1lID0gcmVzLmZpbGUudXNlcm5hbWU7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdyZXF1ZXN0c2F2ZScpOwogICAgICB0aGlzLiRidXMuJG9uKCdyZXNwb25zZXNhdmUnLCBmdW5jdGlvbiAoaWQpIHsKICAgICAgICB2YXIgc2NlbmVmaWxlID0gewogICAgICAgICAgaWQ6IF90aGlzMi5pZCwKICAgICAgICAgIHVzZXJpZDogX3RoaXMyLnVzZXJpZCwKICAgICAgICAgIHVzZXJuYW1lOiBfdGhpczIubmFtZSwKICAgICAgICAgIGZpbGVuYW1lOiBfdGhpczIuZm9ybS5uYW1lLAogICAgICAgICAgZmlsZTogaWQsCiAgICAgICAgICBmaWxlaW1nOiBfdGhpczIuaW1naWQKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5pbWdpZCk7CgogICAgICAgIF90aGlzMi5yZXF1ZXN0LnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6OTA5MC9zY2VuZWZpbGUiLCBzY2VuZWZpbGUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIF90aGlzMi5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgIF90aGlzMi5kcmF3ZXIgPSBmYWxzZTsKICAgICAgICAgIF90aGlzMi5mb3JtID0gewogICAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgICAgZGF0ZTE6ICcnLAogICAgICAgICAgICBkYXRlMjogJycsCiAgICAgICAgICAgIGltZzogJycKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIExvYWQoKXsKICAgIC8vIC8vY29uc29sZS5sb2codGhpcy5maWxlKTsKICAgIC8vIGxldCBwYXJhbT1uZXcgRm9ybURhdGEoKTsKICAgIC8vIHBhcmFtLmFwcGVuZCgnZmlsZScsdGhpcy5maWxlKTsKICAgIC8vIGxldCBjb25maWc9e2hlYWRlcnM6eydDb250ZW50LVR5cGUnOidtdWx0aXBhcnQvZm9ybS1kYXRhJ319CiAgICAvLyAgIHRoaXMucmVxdWVzdC5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjkwOTAvdXBsb2FkIiwKICAgIC8vICAgIHBhcmFtLGNvbmZpZykudGhlbihyZXM9PnsKICAgIC8vICAgICAvL2NvbnNvbGUubG9nKHJlcyk7CiAgICAvLyAgICAgdGhpcy5pZD1yZXMuZmlsZWlkOwogICAgLy8gICB9KQogICAgLy8KICAgIC8vIH0sCiAgICAvLyBVcGxvYWQoZSl7CiAgICAvLyAgIHRoaXMuZmlsZT1lLnRhcmdldC5maWxlc1swXTsKICAgIC8vIH0sCiAgICBFeHBvcnQ6IGZ1bmN0aW9uIEV4cG9ydCgpIHsKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdleHBvcnQnKTsKICAgIH0sCiAgICBSZXNldDogZnVuY3Rpb24gUmVzZXQoKSB7CiAgICAgIHRoaXMuJGJ1cy4kZW1pdCgncmVzZXQnKTsgLy8gdGhpcy5yZXF1ZXN0LmdldCgiaHR0cDovL2xvY2FsaG9zdDo5MDkwL2dldEZpbGVpbmZvQnlpZCIsewogICAgICAvLyAgIHBhcmFtczp7CiAgICAgIC8vICAgICBpZDp0aGlzLmlkCiAgICAgIC8vICAgfQogICAgICAvLyB9KS50aGVuKHJlcz0+ewogICAgICAvLyAgIHRoaXMuJGJ1cy4kZW1pdCgnc2VuZHJlcycscmVzKTsKICAgICAgLy8gfSkKICAgIH0sCiAgICBiZWZvcmVVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgIHZhciBmaWxlVHlwZSA9IGZpbGUubmFtZS5zdWJzdHJpbmcoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykpOwoKICAgICAgaWYgKGZpbGVUeXBlLnRvTG93ZXJDYXNlKCkgIT0gJy5qcGcnICYmIGZpbGVUeXBlLnRvTG93ZXJDYXNlKCkgIT0gJy5wbmcnKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5paH5Lu25b+F6aG75Li6LmpwZ+aIli5wbmfnsbvlnosnKTsKICAgICAgICB0aGlzLmZpbGVMaXN0ID0gW107CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9LAogICAgLy8g6KaG55uWZWxlbWVudOeahOm7mOiupOS4iuS8oOaWh+S7tgogICAgdXBsb2FkSHR0cFJlcXVlc3Q6IGZ1bmN0aW9uIHVwbG9hZEh0dHBSZXF1ZXN0KGRhdGEpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICByZWFkZXIucmVhZEFzVGV4dChkYXRhLmZpbGUpOwoKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGF0LmZvcm0uaW1nID0gdGhpcy5yZXN1bHQ7CiAgICAgIH07CgogICAgICB2YXIgcGFyYW0gPSBuZXcgRm9ybURhdGEoKTsKICAgICAgcGFyYW0uYXBwZW5kKCdmaWxlJywgZGF0YS5maWxlKTsKICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLnJlcXVlc3QucG9zdCgiaHR0cDovL2xvY2FsaG9zdDo5MDkwL3VwbG9hZCIsIHBhcmFtLCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5maWxlaWQpOwogICAgICAgIF90aGlzMy5pbWdpZCA9IHJlcy5maWxlaWQ7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOmZkOWItuaWh+S7tuS4iuS8oOeahOS4quaVsOWPquacieS4gOS4qu+8jOiOt+WPluS4iuS8oOWIl+ihqOeahOacgOWQjuS4gOS4qgogICAgaGFuZGxlVXBsb2FkQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVVcGxvYWRDaGFuZ2UoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgaWYgKGZpbGVMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmZpbGVMaXN0ID0gW2ZpbGVMaXN0W2ZpbGVMaXN0Lmxlbmd0aCAtIDFdXTsgLy8g6L+Z5LiA5q2l77yM5pivIOWxleekuuacgOWQjuS4gOasoemAieaLqeeahOaWh+S7tgogICAgICB9CiAgICB9LAogICAgZ2V0ZmlsZWlkOiBmdW5jdGlvbiBnZXRmaWxlaWQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kYnVzLiRvbignc2VuZGZpbGVpZCcsIGZ1bmN0aW9uIChpZCkgewogICAgICAgIF90aGlzNC5pZCA9IGlkOwogICAgICB9KTsKICAgIH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHRoaXMuZm9ybSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBkYXRlMTogJycsCiAgICAgICAgZGF0ZTI6ICcnLAogICAgICAgIGltZzogJycKICAgICAgfTsKICAgIH0sCiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UoZG9uZSkgewogICAgICB0aGlzLiRjb25maXJtKCfnoa7orqTlhbPpl63vvJ8nKS50aGVuKGZ1bmN0aW9uIChfKSB7CiAgICAgICAgZG9uZSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoXykge30pOwogICAgfSwKICAgIGdldHVzZXJpZDogZnVuY3Rpb24gZ2V0dXNlcmlkKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMucmVxdWVzdC5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6OTA5MC91c2VyL2dldGlkIiwgewogICAgICAgIHBhcmFtczogewogICAgICAgICAgbmFtZTogdGhpcy5uYW1lCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczUudXNlcmlkID0gcmVzLmlkOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldHVzZXJpZCgpOwogICAgdGhpcy5nZXRmaWxlaWQoKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAbA,kBAaA;AACA;AACAC,mBADA;AAEAC,kBAFA;AAGAC,oBAHA;AAIAC,cAJA;AAKAC,gBALA;AAMAC;AACAC,gBADA;AAEAC,iBAFA;AAGAC,iBAHA;AAIAC;AAJA,OANA;AAYAC,kBAZA;AAaAC,oBAbA;AAcAC;AAdA;AAiBA,GA/BA;AAgCAC,8BACAC,YACA,MADA,EADA,CAhCA;AAqCAC;AACAC,QADA,kBACA;AAAA;;AACA;;AACA;AACA;AACAC;AACAd;AADA;AADA,WAIAe,IAJA,CAIA;AAEA;AACA;AACA;AACA,SATA;AAUA;AACA,KAfA;AAgBAC,YAhBA,sBAgBA;AAAA;;AACA;AACA;AAEA;AACAhB,uBADA;AAEAO,+BAFA;AAGAC,+BAHA;AAIAS,oCAJA;AAKAhB,kBALA;AAMAiB;AANA;AASAC;;AACA,0EACAJ,IADA,CACA;AACA;AACA;AACA;AACA;AAEAZ,oBAFA;AAGAC,qBAHA;AAIAC,qBAJA;AAKAC;AALA;AAUA,SAfA;AAgBA,OA5BA;AA6BA,KA/CA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAc,UA/DA,oBA+DA;AACA;AACA,KAjEA;AAkEAC,SAlEA,mBAkEA;AACA,+BADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA3EA;AA4EAC,gBA5EA,wBA4EArB,IA5EA,EA4EA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KAnFA;AAoFA;AACAsB,qBArFA,6BAqFA3B,IArFA,EAqFA;AAAA;;AACA;AACA;AACA4B;;AACAA;AACAC;AACA,OAFA;;AAGA;AACAC;AACA;AAAAC;AAAA;AAAA;AAAA;AACA,wDACAD,KADA,EACAE,MADA,EACAb,IADA,CACA;AACAI;AACA;AACA,OAJA;AAKA,KApGA;AAqGA;AACAU,sBAtGA,8BAsGA5B,IAtGA,EAsGAH,QAtGA,EAsGA;AACA;AACA,wDADA,CACA;AACA;AACA,KA1GA;AA2GAgC,aA3GA,uBA2GA;AAAA;;AACA;AACA;AACA,OAFA;AAGA,KA/GA;AAgHAC,UAhHA,oBAgHA;AACA;AACA;AAEA5B,gBAFA;AAGAC,iBAHA;AAIAC,iBAJA;AAKAC;AALA;AAQA,KA1HA;AA2HA0B,eA3HA,uBA2HAC,IA3HA,EA2HA;AACA,6BACAlB,IADA,CACA;AACAkB;AACA,OAHA,EAIAC,KAJA,CAIA,eAJA;AAKA,KAjIA;AAkIAC,aAlIA,uBAkIA;AAAA;;AACA;AACArB;AACAX;AADA;AADA,SAIAY,IAJA,CAIA;AACA;AACA,OANA;AAOA;AA1IA,GArCA;AAkLAqB,SAlLA,qBAkLA;AACA;AACA;AACA;AArLA","names":["data","drawer","fileList","loading","id","file","form","name","date1","date2","img","userid","username","imgid","computed","mapGetters","methods","Save","params","then","onSubmit","filename","fileimg","console","Export","Reset","beforeUpload","uploadHttpRequest","reader","that","param","headers","config","handleUploadChange","getfileid","cancel","handleClose","done","catch","getuserid","mounted"],"sourceRoot":"src/views/Editor/Footer","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"Footer\">\n    <el-button @click=\"Save\" type=\"primary\" style=\"margin-left: 16px;\">\n        保存\n    </el-button>\n    <el-button @click=\"Reset\" type=\"primary\" style=\"margin-left: 16px;\" >\n        重置\n    </el-button>\n    <el-button @click=\"Export\" type=\"primary\" style=\"margin-left: 16px;\">\n        导出\n    </el-button>\n\n    <el-drawer\n    title=\"文件\"\n    :visible.sync=\"drawer\"\n    :with-header=\"false\"\n    :before-close=\"handleClose\"\n    custom-class=\"demo-drawer\"\n    >\n      <div class=\"demo-drawer__content\">\n        <el-form :model=\"form\" label-width=\"80px\">\n          <el-form-item label=\"文件名\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"封面\" label-width=\"80px\">\n            <el-upload\n              class=\"upload-demo\"\n              drag\n              action=\"#\"\n              :multiple=\"false\"\n              :show-file-list=\"true\"\n              :http-request=\"uploadHttpRequest\"\n              :file-list=\"fileList\"\n              :on-change=\"handleUploadChange\"\n              :before-upload=\"beforeUpload\"\n              >\n              <i class=\"el-icon-upload\"></i>\n              <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n              <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\n            </el-upload>\n          </el-form-item>\n          <el-form-item>\n              <el-button type=\"primary\" @click=\"onSubmit\" :loading=\"loading\">{{ loading ? '提交中 ...' : '立即保存' }}</el-button>\n              <el-button @click=\"cancel\">取消</el-button>\n          </el-form-item>\n        </el-form>\n<!--        <div class=\"demo-drawer__footer\">-->\n<!--          <el-button @click=\"cancelForm\">取 消</el-button>-->\n<!--          <el-button type=\"primary\" @click=\"$refs.drawer.closeDrawer()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>-->\n<!--        </div>-->\n\n      </div>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n\n  /*bug:\n  * 场景树在每次点击编辑后会改变 √\n  * 跳转路由问题 √\n  * 新增按钮 √\n  * 图片异常问题 √\n  * 播放器样式\n  * 按钮样式\n  * 提交抽屉优化 √\n  * 加载动画\n  * 关闭演示时音乐关闭\n  * 登录*/\n    data() {\n        return {\n            drawer:false,\n            fileList:[],\n          loading:false,\n          id:null,\n         file:null,\n            form:{\n              name:'',\n              date1:'',\n              date2:'',\n              img:'',\n            },\n          userid:null,\n          username:null,\n          imgid:''\n\n        }\n    },\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n    methods: {\n      Save(){\n        this.drawer = true;\n        if(this.id!=null){\n          this.request.get(\"http://localhost:9090/scenefile/getbyid\",{\n            params:{\n              id:this.id\n            }\n          }).then(res=>{\n\n            this.form.name=res.file.filename;\n            this.userid=res.file.userid;\n            this.username=res.file.username;\n          })\n        }\n      },\n      onSubmit(){\n        this.$bus.$emit('requestsave');\n        this.$bus.$on('responsesave',(id)=>{\n\n            let scenefile={\n              id:this.id,\n              userid:this.userid,\n              username:this.name,\n              filename:this.form.name,\n              file: id,\n              fileimg: this.imgid,\n\n            }\n            console.log(this.imgid);\n            this.request.post(\"http://localhost:9090/scenefile\",scenefile)\n          .then(res=>{\n            // console.log(res);\n            this.loading=true;\n            this.drawer=false;\n            this.form={\n\n              name:'',\n              date1:'',\n              date2:'',\n              img:''\n\n            };\n\n\n          })\n        })\n      },\n      // Load(){\n      // //console.log(this.file);\n      // let param=new FormData();\n      // param.append('file',this.file);\n      // let config={headers:{'Content-Type':'multipart/form-data'}}\n      //   this.request.post(\"http://localhost:9090/upload\",\n      //    param,config).then(res=>{\n      //     //console.log(res);\n      //     this.id=res.fileid;\n      //   })\n      //\n      // },\n      // Upload(e){\n      //   this.file=e.target.files[0];\n      // },\n        Export(){\n            this.$bus.$emit('export');\n        },\n        Reset(){\n            this.$bus.$emit('reset');\n          // this.request.get(\"http://localhost:9090/getFileinfoByid\",{\n          //   params:{\n          //     id:this.id\n          //   }\n          // }).then(res=>{\n          //   this.$bus.$emit('sendres',res);\n          // })\n        },\n      beforeUpload(file) {\n        const fileType = file.name.substring(file.name.lastIndexOf('.'))\n        if (fileType.toLowerCase() != '.jpg' && fileType.toLowerCase() != '.png') {\n          this.$message.error('文件必须为.jpg或.png类型')\n          this.fileList = []\n          return false\n        }\n      },\n      // 覆盖element的默认上传文件\n      uploadHttpRequest(data) {\n        let reader = new FileReader()\n        let that = this\n        reader.readAsText(data.file)\n        reader.onload = function() {\n          that.form.img = this.result;\n        }\n        let param=new FormData();\n        param.append('file',data.file);\n        let config={headers:{'Content-Type':'multipart/form-data'}}\n        this.request.post(\"http://localhost:9090/upload\",\n          param,config).then(res=>{\n          console.log(res.fileid);\n          this.imgid=res.fileid;\n        })\n      },\n      // 限制文件上传的个数只有一个，获取上传列表的最后一个\n      handleUploadChange(file, fileList) {\n        if (fileList.length > 0) {\n          this.fileList = [fileList[fileList.length - 1]] // 这一步，是 展示最后一次选择的文件\n        }\n      },\n      getfileid(){\n        this.$bus.$on('sendfileid',(id)=>{\n          this.id=id;\n        })\n      },\n      cancel(){\n        this.loading=false;\n          this.form={\n\n              name:'',\n              date1:'',\n              date2:'',\n              img:''\n\n          }\n      },\n        handleClose(done) {\n        this.$confirm('确认关闭？')\n          .then(_ => {\n            done();\n          })\n          .catch(_ => {});\n      },\n      getuserid(){\n        this.request.get(\"http://localhost:9090/user/getid\", {\n          params:{\n            name:this.name\n          }\n        }).then(res=>{\n          this.userid=res.id;\n        });\n      }\n    },\n\n  mounted() {\n      this.getuserid();\n      this.getfileid();\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}