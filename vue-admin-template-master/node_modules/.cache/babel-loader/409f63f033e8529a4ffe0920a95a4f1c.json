{"remainingRequest":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\vue-admin-template-master\\src\\views\\scene\\Player\\Player.vue","mtime":1651922161812},{"path":"E:\\vue\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXVkaW9QbGF5ZXInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtdXNpY0J1ZmZlcjogbnVsbCwKICAgICAgLy/nvJPlhrLmlbDmja4KICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgLy/liKTmlq3mmK/lkKbliqDovb3pn7PkuZAKICAgICAgaXNQbGF5aW5nOiBmYWxzZSwKICAgICAgLy/mmK/lkKbmraPlnKjmkq3mlL7pn7PkuZAKICAgICAgZmlsZU5hbWU6ICcnLAogICAgICAvL+mfs+S5kOWQjQogICAgICBwbGF5ZWRUaW1lOiAwLAogICAgICAvL+aSreaUvuaXtumXtAogICAgICBhdWRpb0N0eDogbnVsbCwKICAgICAgLy/pn7PpopHkuIrkuIvmlocKICAgICAgYXVkaW9CdWZmZXJTb3VyY2VOb2RlOiBudWxsLAogICAgICAvL+mfs+mikeiKgueCuQogICAgICBmaWxlUmVhZGVyOiBudWxsLAogICAgICAvL+aWh+S7tuivu+WPlgogICAgICBhbmFseXNlcjogbnVsbCwKICAgICAgLy/liIbmnpDlmagKICAgICAgZmlsZUR1cmF0aW9uOiAwLAogICAgICAvL+mfs+S5kOaXtumVvwogICAgICB0aW1lcjogMAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBpc1BsYXlpbmc6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ1BsYXlTdGF0ZScsIHRoaXMuaXNQbGF5aW5nKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q29udGV4dCgpOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdENvbnRleHQ6IGZ1bmN0aW9uIGluaXRDb250ZXh0KCkgewogICAgICB2YXIgQXVkaW9Db250ZXh0ID0gd2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0OwogICAgICB0aGlzLmF1ZGlvQ3R4ID0gbmV3IEF1ZGlvQ29udGV4dCgpOyAvL+WIm+W7uuS4iuS4i+aWhwogICAgICAvL+WIm+W7uue8k+WGsuiKgueCuQoKICAgICAgdGhpcy5hbmFseXNlciA9IHRoaXMuYXVkaW9DdHguY3JlYXRlQW5hbHlzZXIoKTsKICAgIH0sCiAgICBwbGF5OiBmdW5jdGlvbiBwbGF5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLmlzTG9hZGluZykgewogICAgICAgIGFsZXJ0KCfmnKrliqDovb3lqpLkvZMnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoIXRoaXMuaXNQbGF5aW5nKSB7CiAgICAgICAgICAvL+WPquacieavj+asoeaSreaUvuaXtuaJjeW7uueri++8jOWboOS4unN0YXJ05Y+q6IO95LiA5qyhCiAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZSA9IHRoaXMuYXVkaW9DdHguY3JlYXRlQnVmZmVyU291cmNlKCk7IC8v5LiA5byA5aeL6L+b6KGM5Yid5aeL5YyWCgogICAgICAgICAgdGhpcy5hdWRpb0J1ZmZlclNvdXJjZU5vZGUuYnVmZmVyID0gdGhpcy5tdXNpY0J1ZmZlcjsgLy/mkq3mlL7ml7bmiY3ljrvliqDovb3mlbDmja4KCiAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5jb25uZWN0KHRoaXMuYXVkaW9DdHguZGVzdGluYXRpb24pOyAvL+i/nuaOpQoKICAgICAgICAgIHRoaXMuYXVkaW9CdWZmZXJTb3VyY2VOb2RlLmNvbm5lY3QodGhpcy5hbmFseXNlcik7IC8v6L+e5o6l5YiG5p6Q5ZmoCgogICAgICAgICAgdGhpcy5hdWRpb0J1ZmZlclNvdXJjZU5vZGUuc3RhcnQodGhpcy5wbGF5ZWRUaW1lLCB0aGlzLnBsYXllZFRpbWUpOyAvL+aSreaUvgoKICAgICAgICAgIHRoaXMuaXNQbGF5aW5nID0gdHJ1ZTsKICAgICAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChfdGhpcy5wbGF5ZWRUaW1lIDwgX3RoaXMuZmlsZUR1cmF0aW9uKSB7CiAgICAgICAgICAgICAgX3RoaXMucGxheWVkVGltZSArPSAwLjE7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgX3RoaXMucGxheWVkVGltZSA9IDA7IC8vdGhpcy5pc1BsYXlpbmc9ZmFsc2U7CgogICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMudGltZXIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCAxMDApOyAvL+WunuaXtuabtOaWsOi/m+W6puadoe+8jOavjzEwMOavq+enkuWNszAuMeenkuabtOaWsOS4gOasoe+8jCAKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBwYXVzZTogZnVuY3Rpb24gcGF1c2UoKSB7CiAgICAgIGlmICghdGhpcy5pc0xvYWRpbmcpIHsKICAgICAgICBhbGVydCgn5pyq5Yqg6L295aqS5L2TJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuaXNQbGF5aW5nKSB7CiAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5zdG9wKCk7CiAgICAgICAgICB0aGlzLmF1ZGlvQnVmZmVyU291cmNlTm9kZS5kaXNjb25uZWN0KCk7CiAgICAgICAgICB0aGlzLmlzUGxheWluZyA9IGZhbHNlOwogICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBMb2FkZXJGaWxlOiBmdW5jdGlvbiBMb2FkZXJGaWxlKGUpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICB0aGlzLmZpbGVOYW1lID0gZmlsZS5uYW1lOwogICAgICB0aGlzLmZpbGVyZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICB0aGlzLmZpbGVyZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CgogICAgICB0aGlzLmZpbGVyZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgX3RoaXMyLmF1ZGlvQ3R4LmRlY29kZUF1ZGlvRGF0YShldmVudC50YXJnZXQucmVzdWx0LCBmdW5jdGlvbiAoYnVmZmVyKSB7CiAgICAgICAgICBfdGhpczIubXVzaWNCdWZmZXIgPSBidWZmZXI7IC8v5YWI5a2Y6Z+z6aKR5pWw5o2uCgogICAgICAgICAgX3RoaXMyLmlzTG9hZGluZyA9IHRydWU7CiAgICAgICAgICBfdGhpczIuZmlsZUR1cmF0aW9uID0gYnVmZmVyLmR1cmF0aW9uOwoKICAgICAgICAgIF90aGlzMi5BbmFseXNlckRhdGEoKTsKICAgICAgICB9KTsgLy/pn7PpopHmlbDmja4KCiAgICAgIH07CiAgICB9LAogICAgQW5hbHlzZXJEYXRhOiBmdW5jdGlvbiBBbmFseXNlckRhdGEoKSB7CiAgICAgIHRoaXMuYW5hbHlzZXIuZmZ0U2l6ZSA9IDUxMjsgLy81MTLmmK/mnIDlkIjpgILnmoTlgLwKICAgICAgLy8gbGV0IGJ1ZmZlckxlbmd0aD1hbmFseXNlci5mcmVxdWVuY3lCaW5Db3VudDsKICAgICAgLy8gbGV0IGRhdGFBcnJheT1uZXcgVWludDhBcnJheShidWZmZXJMZW5ndGgpOwogICAgICAvLyB0aGlzLmFuYWx5c2VyLmdldEJ5dGVGcmVxdWVuY3lEYXRhKGRhdGFBcnJheSk7CgogICAgICB0aGlzLiRidXMuJGVtaXQoJ0JpbmRpbmdBbmFseXNlcicsIHRoaXMuYW5hbHlzZXIpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;AAaA;AACAA,qBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,uBADA;AAEA;AACAC,sBAHA;AAIA;AACAC,sBALA;AAMA;AACAC,kBAPA;AAQA;AACAC,mBATA;AAUA;AACAC,oBAXA;AAYA;AACAC,iCAbA;AAcA;AACAC,sBAfA;AAgBA;AACAC,oBAjBA;AAkBA;AACAC,qBAnBA;AAoBA;AACAC;AArBA;AAwBA,GA3BA;AA4BAC;AACAT;AACAU,aADA,qBACA;AACA;AACA,OAHA;AAIAC,gBAJA;AAKAC;AALA;AADA,GA5BA;AAqCAC,SArCA,qBAqCA;AACA;AAGA,GAzCA;AA0CAC;AACAC,eADA,yBACA;AACA;AACA,yCAFA,CAGA;AAEA;;AACA;AACA,KARA;AASAC,QATA,kBASA;AAAA;;AACA;AACAC;AACA,OAFA,MAEA;AACA;AACA;AACA,0EAFA,CAGA;;AACA,+DAJA,CAKA;;AACA,wEANA,CAOA;;AACA,4DARA,CASA;;AACA,6EAVA,CAWA;;AAGA;AACA;AACA;AACA;AACA,aAFA,MAGA;AACA,mCADA,CAEA;;AACAC;AAEA;AACA,WAVA,EAUA,GAVA,EAfA,CA0BA;AACA;AAEA;AAGA,KA7CA;AA8CAC,SA9CA,mBA8CA;AACA;AACAF;AACA,OAFA,MAGA;AACA;AACA;AACA;AACA;AACAC;AACA;AAGA;AAEA,KA7DA;AA8DAE,cA9DA,sBA8DAC,CA9DA,EA8DA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,sCADA,CAEA;;AACA;AACA;;AAEA;AACA,SAPA,EADA,CASA;;AACA,OAVA;AAWA,KA9EA;AA+EAC,gBA/EA,0BA+EA;AACA,kCADA,CAEA;AACA;AACA;AACA;;AACA;AACA;AAtFA;AA1CA","names":["name","data","musicBuffer","isLoading","isPlaying","fileName","playedTime","audioCtx","audioBufferSourceNode","fileReader","analyser","fileDuration","timer","watch","handler","deep","immediate","mounted","methods","initContext","play","alert","clearInterval","pause","LoaderFile","e","AnalyserData"],"sourceRoot":"src/views/scene/Player","sources":["Player.vue"],"sourcesContent":["<template>\r\n  <div class=\"AudioViewPlayer\">\r\n      <div class=\"Control\">\r\n          <button @click=\"play\" class=\"Play\">播放</button>\r\n          <button @click=\"pause\" class=\"Pause\">暂停</button>\r\n          <input id=\"MP3File\" @change=\"LoaderFile\" type=\"file\" class=\"Select\"/>\r\n          <el-progress :percentage=\"playedTime\" :show-text=false></el-progress>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name:'AudioPlayer',\r\n    data() {\r\n        return {\r\n            musicBuffer:null,\r\n            //缓冲数据\r\n            isLoading:false,\r\n            //判断是否加载音乐\r\n            isPlaying:false,\r\n            //是否正在播放音乐\r\n            fileName:'',\r\n            //音乐名\r\n            playedTime:0,\r\n            //播放时间\r\n            audioCtx:null,\r\n            //音频上下文\r\n            audioBufferSourceNode:null,\r\n            //音频节点\r\n            fileReader:null,\r\n            //文件读取\r\n            analyser:null,\r\n            //分析器\r\n            fileDuration:0,\r\n            //音乐时长\r\n            timer:0\r\n\r\n        }\r\n    },\r\n   watch:{\r\n        isPlaying:{\r\n            handler(){\r\n                this.$bus.$emit('PlayState',this.isPlaying);\r\n            },\r\n            deep:true,\r\n            immediate:true\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initContext();\r\n\r\n\r\n    },\r\n    methods: {\r\n        initContext(){\r\n            const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n            this.audioCtx=new AudioContext();\r\n            //创建上下文\r\n           \r\n            //创建缓冲节点\r\n           this.analyser=this.audioCtx.createAnalyser();\r\n        },\r\n        play(){\r\n            if(!this.isLoading){\r\n                alert('未加载媒体');\r\n            }else{\r\n                if(!this.isPlaying){\r\n                   //只有每次播放时才建立，因为start只能一次\r\n                  this.audioBufferSourceNode=this.audioCtx.createBufferSource();\r\n                    //一开始进行初始化\r\n                this.audioBufferSourceNode.buffer=this.musicBuffer;\r\n                //播放时才去加载数据\r\n                this.audioBufferSourceNode.connect(this.audioCtx.destination);\r\n                //连接\r\n                this.audioBufferSourceNode.connect(this.analyser);\r\n                //连接分析器\r\n                this.audioBufferSourceNode.start(this.playedTime,this.playedTime);\r\n                //播放\r\n                \r\n              \r\n                this.isPlaying=true;\r\n                this.timer=setInterval(()=>{\r\n                    if(this.playedTime<this.fileDuration){\r\n                        this.playedTime+=0.1;\r\n                    }\r\n                    else{\r\n                        this.playedTime=0;\r\n                        //this.isPlaying=false;\r\n                        clearInterval(this.timer);\r\n\r\n                    }\r\n                },100);\r\n                //实时更新进度条，每100毫秒即0.1秒更新一次， \r\n                }\r\n                \r\n            }\r\n\r\n            \r\n        },\r\n        pause(){\r\n            if(!this.isLoading){\r\n                alert('未加载媒体'); \r\n            }\r\n            else{\r\n                if(this.isPlaying){\r\n                this.audioBufferSourceNode.stop();\r\n                this.audioBufferSourceNode.disconnect();\r\n                 this.isPlaying=false;\r\n                clearInterval(this.timer);\r\n                }\r\n                \r\n                \r\n            }\r\n           \r\n        },\r\n        LoaderFile(e){\r\n            let file=e.target.files[0];\r\n            this.fileName=file.name;\r\n            this.filereader=new FileReader();\r\n            this.filereader.readAsArrayBuffer(file);\r\n            this.filereader.onload=(event)=>{\r\n            this.audioCtx.decodeAudioData(event.target.result,(buffer)=>{\r\n                this.musicBuffer=buffer;\r\n                //先存音频数据\r\n                this.isLoading=true;\r\n                this.fileDuration=buffer.duration;\r\n                \r\n                this.AnalyserData();\r\n            })\r\n            //音频数据\r\n            }\r\n        },\r\n        AnalyserData(){\r\n            this.analyser.fftSize=512;\r\n            //512是最合适的值\r\n            // let bufferLength=analyser.frequencyBinCount;\r\n            // let dataArray=new Uint8Array(bufferLength);\r\n            // this.analyser.getByteFrequencyData(dataArray);\r\n            this.$bus.$emit('BindingAnalyser',this.analyser);\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n\r\n</style>"]}]}