{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\scene\\Scene.vue","mtime":1654964129751},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA,yD,CACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uE,CACA;;AACA;AACAA,OADA;AAEAC,OAFA;AAGAC,QAHA;AAIAC,4BAJA;AAKAC,8BALA;AAMAC,qBANA;AAOAC;AAPA;AASA,oB,CAAA;;AACA,a,CAAA;;AACA,a,CAAA;;AACA;AAAA,IACAC,aADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACAC,eADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,8BADA;AAEAC,cAFA;AAGAC,oBAHA;AAIAC,sBAJA;AAKAC;AALA;AAOA,GAbA;AAcAC;AACAD;AACAE,aADA,qBACA;AACA;AACA;AACA;AACA;AACA,oCAJA,CAKA;AACA;;AACA;AACA;AACA;AAXA,KADA,CAcA;AACA;AACA;AACA;AACA;;AAlBA,GAdA;AAkCAC;AACAC,UADA,oBACA;AACA,4BADA,CAEA;;AACA;AACA;AACAC;AACAA;AACA;AACAC;;AACA;AACA;;AACA;AAAA;AACAC;AACA,WAFA,MAEA;AAAA;AACAA;AACA,WAFA,MAEA;AAAA;AACAA;AACA,WARA,CASA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACAC,2BACA;AACA;AACAC;AACAC;AAEA,WANA,EAOA;AACA;AACAJ;AACA,WAVA,EAYA;AACA;AACAA;AACA,WAfA,EAnBA,CAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAlDA;AAmDAD;AACA,KA3DA;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,YA7FA,sBA6FA;AAAA;;AACA;AACA;AACA,OAFA;AAGA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","names":["R","G","B","TrianglesBgColor","TrianglesLineColor","lineColor","rotate","TriangleGroup","name","components","AudioPlayer","data","clock","scale","Analyser","isPlaying","isLoaded","watch","handler","methods","Import","input","console","url","loader","scene","that","GetState","GetAudioData","initAudio","audio","AnalysisLine","LineGroups","map","uuid","x","y","z","BarGroups","ColorMap","r","g","b","GeometryGroups","updateCircle","linesGroup","positions","AttributeA","AttributeB","Attribute","init","initControls","controls","initLight","light","initStats","stats","document","initRenderer","renderer","antialias","initScene","initCamera","camera","animate","requestAnimationFrame","BarNodes","node","BarColor","composer","updateGeometry","Geometry","updateBars","arr","barGroup","elem","m","initBars","initEffectComposer","copyShader","initBloomPass","exposure","bloomStrength","bloomThreshold","bloomRadius","bloomPass","startplay","type","lastModified","mounted"],"sourceRoot":"src/views/scene","sources":["Scene.vue"],"sourcesContent":["<template>\n   <div class=\"app-container-play\">\n\n     <el-container>\n       <el-header>\n         <el-button @click=\"Import\" type=\"primary\" style=\"margin-left: 16px;\">\n           导入\n         </el-button>\n       </el-header>\n       <el-main>\n         <el-scrollbar class=\"Scrollbar\">\n           <div id=\"webgl\" style=\"position:relative\">\n\n           </div>\n         </el-scrollbar>\n       </el-main>\n       <el-footer height=\"100px\">\n         <AudioPlayer/>\n       </el-footer>\n     </el-container>\n\n\n     <!-- <div class=\"file-select-btn\" @click=\"$refs.fileId.click()\">\n      选择音乐\n      <input ref=\"fileId\" type=\"file\" class=\"file-input\" @change=\"getAudio\" />\n     </div> -->\n\n\n  </div>\n</template>\n\n<script>\nimport * as THREE from 'three/build/three.module.js'\nimport Stats from '../../store/Stats/stats.min.js'\nimport { OrbitControls } from \"../../lib/OrbitControls.js\";\nimport index, { GUI } from \"../../lib/dat.gui.module.js\";\n//辉光\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass.js';\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\n\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\nimport { range } from \"../../components/mode/range\";\nimport { node } from \"../../components/mode/node\";\nimport AudioPlayer from \"../scene/Player/Player.vue\"\nimport { randomRange } from \"../../components/mode/randomRange\";\nimport { Triangle } from \"../../components/mode/Triangle\";\nimport { Loader } from '../../lib/three.module.js';\nlet renderer,camera,scene,geometry,material,mesh,stats,controls;\n//  let container=document.getElementById('webgl');\nlet gui = {\n  R: 20,\n  G: 90,\n  B: 225,\n  TrianglesBgColor: 0x03a9f4,\n  TrianglesLineColor: 0x03a9f4,\n  lineColor: 0x00ffff,\n  rotate: false\n};\nlet audio, analyser; // 音频\nlet BarNodes; // 线\nlet composer;//合成器\nlet Triangles = [],\n  TriangleGroup;\nlet LineGroups=[];\nlet BarGroups=[];\nlet GeometryGroups=[];\nlet map=[];\nlet ColorMap=[];\nexport default {\n    name: 'Scene',\n    components:{\n      AudioPlayer\n    },\n    data() {\n      return {\n        clock:new THREE.Clock(),\n        scale:1,\n        Analyser:null,\n        isPlaying:false,\n        isLoaded:false,\n      }\n    },\n    watch:{\n      isLoaded:{\n        handler(){\n          if(this.isLoaded==true){\n             this.initLight();\n              this.AnalysisLine();\n              this.initBars();\n              this.initEffectComposer();\n              //that.initStats();\n            // initDatGUI();\n            this.animate();\n          }\n        }\n      }\n      // $route:{\n      //   handler(){\n      //     this.\n      //   }\n      // }\n    },\n    methods: {\n      Import(){\n        this.isLoaded=false;\n        //每次导入改变值然后重新渲染\n        let that=this;\n        let input=document.createElement('input');\n        input.type=\"file\";\n        input.addEventListener(\"change\",function(){\n          let file=input.files[0];\n          console.log(file);\n          if(file.type.indexOf(\"json\")>=0){\n            let url = null ;\n            if (window.createObjectURL!=undefined) { // basic\n                url = window.createObjectURL(file) ;\n            } else if (window.URL!=undefined) { // mozilla(firefox)\n                url = window.URL.createObjectURL(file) ;\n            } else if (window.webkitURL!=undefined) { // webkit or chrome\n                url = window.webkitURL.createObjectURL(file) ;\n            }\n            //根据url进行加载回调，可以防止\n        //     let reader=new FileReader();\n        //     //reader.readAsText(file);\n        //     reader.readAsDataURL(file);\n        // reader.onloadend = function(e) {\n        //   _that.audioLoad(e.target.result);\n        // };\n\n\n             let loader=new THREE.ObjectLoader();\n             loader.load(url,\n              function(obj){\n                //加载完成后进行\n                scene=obj;\n                that.isLoaded=true;\n\n              },\n              // onProgress callback\n\t            function ( xhr ) {\n\t\t          console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );\n\t            },\n\n\t          // onError callback\n\t            function ( err ) {\n\t\t              console.error( 'An error happened'+err );\n              });\n\n            // let reader=new FileReader();\n            // reader.readAsText(file);\n            // reader.onloadend=function(){\n            //   let loader=new THREE.ObjectLoader();\n            //   loader.parse(JSON.parse(this.result),\n            //     function(obj){\n            //       scene=obj;\n            //     }\n            //   );\n              //scene=newscene;\n          }\n        });\n        input.click();\n      },\n      // 选择音频\n    // getAudio() {\n    //   let _that = this;\n    //   let objFile = this.$refs.fileId;\n    //   if (objFile.value === \"\") {\n    //     return false;\n    //   }\n    //   if (window.FileReader) {\n    //     let reader = new FileReader();\n    //     reader.readAsDataURL(objFile.files[0]);\n    //     reader.onloadend = function(e) {\n    //       _that.audioLoad(e.target.result);\n    //     };\n    //   }\n    // },\n    //  音频加载播放\n    // audioLoad(url) {\n    //   // let _that = this;\n\n    //   let audioLoader = new THREE.AudioLoader(); // 音频加载器\n    //   audioLoader.load(url, function(AudioBuffer) {\n    //     if (audio.isPlaying) {\n    //       audio.stop();\n    //       audio.setBuffer();\n    //     }\n    //     audio.setBuffer(AudioBuffer); // 音频缓冲区对象关联到音频对象audio\n    //     audio.setLoop(true); //是否循环\n    //     audio.setVolume(1); //音量\n    //     audio.play(); //播放\n    //     // 音频分析器和音频绑定，可以实时采集音频时域数据进行快速傅里叶变换\n    //     analyser = new THREE.AudioAnalyser(audio, 256 * 2);\n    //   });\n    // },\n    GetState(){\n      this.$bus.$on('PlayState',(isPlaying)=>{\n          this.isPlaying=isPlaying;\n      })\n    },\n    GetAudioData(){\n      let that=this;\n        this.$bus.$on('BindingAnalyser',(analyser)=>{\n          that.Analyser=analyser;\n\n        })\n    },\n    initAudio(){\n      let listener=new THREE.AudioListener();\n      audio=new THREE.Audio(listener);\n    },\n      AnalysisLine(){\n\n\n        //获取变化线段\n        scene.traverse(function(obj){\n          if(obj.name.indexOf(\"音频线\")!=-1){\n            LineGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n            });\n\n          }else if(obj.name.indexOf(\"音频谱\")!=-1){\n            BarGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n            });\n           // console.log(obj.children[0].children[0]);\n            ColorMap.push({\n              uuid:obj.uuid,\n              r:obj.children[0].children[0].material.color.r,\n              g:obj.children[0].children[0].material.color.g,\n              b:obj.children[0].children[0].material.color.b,\n            });\n            console.log(obj.children[0].children[0].material.color);\n            console.log(ColorMap);\n\n          }else if(obj.type.indexOf('Mesh')!=-1&&obj.parent==scene){\n            //几何体\n            GeometryGroups.push(obj);\n            map.push({\n              uuid:obj.uuid,\n              x:obj.scale.x,\n              y:obj.scale.y,\n              z:obj.scale.z\n\n            });\n            console.log(GeometryGroups);\n\n          }\n        });\n      },\n       updateCircle(linesGroup,x,y,z) {\n      if (BarNodes) {\n\n        linesGroup.scale.set(this.scale*x,this.scale*y,this.scale*z);\n\n        const geometryA = linesGroup.children[0].geometry;\n        //outline\n        const AttributeA = geometryA.getAttribute(\"position\");\n        const geometryB = linesGroup.children[1].geometry;\n        //inline\n        const AttributeB = geometryB.getAttribute(\"position\");\n\n        const positions = BarNodes.map(value => {\n          return [value.positionA(), value.positionB()];\n        });\n        positions.forEach((position, index) => {\n          AttributeA.set([position[0].x, position[0].y], index * 3);\n          AttributeB.set([position[1].x, position[1].y], index * 3);\n          //前两线是outline和inline\n          const geometry = linesGroup.children[index+2].geometry;\n          const Attribute = geometry.getAttribute(\"position\");\n          Attribute.set(\n            [position[0].x, position[0].y, 0, position[1].x, position[1].y, 0],\n            0\n          );\n          Attribute.needsUpdate = true;\n        });\n        AttributeA.set(\n          [AttributeA.array[0], AttributeA.array[1]],\n          positions.length * 3\n        );\n        AttributeB.set(\n          [AttributeB.array[0], AttributeB.array[1]],\n          positions.length * 3\n        );\n        AttributeA.needsUpdate = true;\n        AttributeB.needsUpdate = true;\n      }\n    },\n\n        init(){\n            this.initRenderer();\n            this.initScene();\n            this.initCamera();\n            this.initControls();\n\n            this.initAudio();\n            //this.initEffectComposer();\n            this.initStats();\n            // initDatGUI();\n            //this.animate();\n\n        },\n        initControls() {\n          controls = new OrbitControls(camera, renderer.domElement);\n         // 如果使用animate方法时，将此函数删除\n         //controls.addEventListener( 'change', render );\n          // 使动画循环使用时阻尼或自转 意思是否有惯性\n          controls.enableDamping = true;\n          //动态阻尼系数 就是鼠标拖拽旋转灵敏度\n         //controls.dampingFactor = 0.25;\n          //是否可以缩放\n          controls.enableZoom = false;\n          //是否自动旋转\n          controls.autoRotate = gui.rotate;\n          //设置相机距离原点的最远距离\n          controls.minDistance = 1;\n          //设置相机距离原点的最远距离\n          controls.maxDistance = 200;\n          //是否开启右键拖拽\n          controls.enablePan = false;\n        },\n        initLight() {\n          scene.add(new THREE.AmbientLight(0x444444));\n          let light = new THREE.PointLight(0xffffff);\n          light.position.set(80, 100, 50);\n          //告诉平行光需要开启阴影投射\n          light.castShadow = true;\n          scene.add(light);\n        },\n        initStats(){\n             stats = new Stats();\n             stats.domElement.style.position = 'absolute'; //绝对坐标\n             stats.domElement.style.left = '0px';// (0,0)px,左上角\n             stats.domElement.style.top = '0px';\n            document.getElementById('webgl').appendChild(stats.domElement);\n\n        },\n        // updatePosition(){\n        //     mesh.position.set(controls.positionX,controls.positionY,controls.positionZ);\n        // },\n        //初始化渲染器\n        initRenderer(){\n\n\n            renderer=new THREE.WebGLRenderer({ antialias: true });//实例化渲染器\n            renderer.setSize(window.innerWidth*0.85,window.innerHeight*0.85);//设置宽高\n            document.getElementById('webgl').appendChild(renderer.domElement);//添加到dom\n        },\n        //初始化场景\n        initScene(){\n\n            scene=new THREE.Scene();//实例化场景\n        //     scene.background = new THREE.CubeTextureLoader().load([\n        //   require('@/assets/skybox/right.jpg'),\n        //   require('@/assets/skybox/left.jpg'),\n        //   require('@/assets/skybox/top.jpg'),\n        //   require('@/assets/skybox/bottom.jpg'),\n        //   require('@/assets/skybox/front.jpg'),\n        //   require('@/assets/skybox/back.jpg')\n        // ]);\n\n        },\n        //初始化相机\n        initCamera(){\n            camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,200)\n            //实例化相机】\n            camera.position.set(0,0,150);\n        },\n        //创建模型\n\n\n        //运行动画\n        animate(){\n            requestAnimationFrame(this.animate);//循环调用函数\n\n            // mesh.rotation.x+=0.01;\n            // // //每帧网格模型沿x轴旋转0.01弧度\n            // mesh.rotation.y+=0.02;\n            // //每帧网格模型沿y轴旋转0.02弧度\n            // //stats.update();//更新性能检测框\n\n            stats.update();\n            controls.update();\n            if(this.Analyser&&this.isPlaying){\n              let bufferLength=this.Analyser.frequencyBinCount;\n              let arr=new Uint8Array(bufferLength);\n              this.Analyser.getByteFrequencyData(arr);\n              //let arr=analyser.getFrequencyData();\n              //console.log(arr);\n              const Delta=this.clock.getDelta();\n              BarNodes.forEach((node,index,array)=>{\n                node.strength(arr[index % array.length]*0.1);\n                node.transition(Delta);\n\n              });\n              let that=this;\n               this.scale=1+arr[Math.ceil(arr.length*0.05)]/500;\n              //let nscale=1+arr[13]/500;\n              //console.log(\"原始\"+this.scale+\"改进\"+nscale);\n\n               if(LineGroups.length>0){\n                  LineGroups.forEach(function(obj){\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n\n                    that.updateCircle(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\n                });\n               }\n               if(BarGroups.length>0){\n                 BarGroups.forEach(function(obj){\n\n                    const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n                    const BarColor=ColorMap.filter((item)=>item.uuid==obj.uuid);\n                    // console.log(BarColor[0].r);\n                    // console.log(BarColor[0].g);\n                    // console.log(BarColor[0].b);\n                    that.updateBars(arr,obj,scaledata[0].x,scaledata[0].y,scaledata[0].z,\n                                   BarColor[0].r,BarColor[0].g,BarColor[0].b);\n                 });\n               };\n               if(GeometryGroups.length>0){\n                 GeometryGroups.forEach(function (obj){\n                   const scaledata=map.filter((item)=>item.uuid==obj.uuid);\n                   that.updateGeometry(obj,scaledata[0].x,scaledata[0].y,scaledata[0].z);\n\n                 });\n               }\n\n\n            }\n            composer.render();//使用后期处理通道渲染\n        },\n        updateGeometry(Geometry,x,y,z){\n            Geometry.scale.set(this.scale*x,this.scale*y,this.scale*z);\n        },\n        updateBars(arr,barGroup,x,y,z,r,g,b){\n           if(barGroup){\n              barGroup.rotation.z += 0.002;\n              barGroup.scale.set(this.scale*x, this.scale*y, this.scale*z);\n              barGroup.children.forEach((elem,index)=>{\n                //记录的原rgb值是0-1的浮点值，需要根据频率数值转换\n                if(r>0){\n                   elem.children[0].material.color.r= arr[index] *r/ 255;\n\n                }\n               if(g>0){\n                  elem.children[0].material.color.g=arr[index]*g/255;\n               }\n\n                if(b>0){\n                  elem.children[0].material.color.b=arr[index]*b/255;\n                }\n\n                if(arr[index]===0){\n                  elem.scale.set(1,1,1);\n                }else{\n              let m = arr[index] / 20;\n                   let targetRange = Math.max(\n                  arr[index] / 20 - arr[index - 1] / 20,0);\n              if (m < targetRange) {\n                m = targetRange;\n              }\n\n              elem.scale.set(1, m, 1);\n                }\n\n              });\n           }\n        },\n        initBars(){\n          BarNodes=range(0, 256).map(index => {\n            return new node(\n              20,\n              ((index / 256) * 360 + 45) % 360,\n              new THREE.Vector2(0, 0)\n            );\n          });\n          console.log(BarNodes);\n        },\n        //后期处理\n        initEffectComposer(){\n            composer=new EffectComposer(renderer);\n            var renderPass=new RenderPass(scene,camera);\n            composer.addPass(renderPass);\n            //RenderPass通常位于过程链的开始，以便将渲染好的场景作为输入来提供给下一个后期处理步骤。\n            //CopyShader是为了能将结果输出，普通的通道一般都是不能输出的，要靠CopyShader进行输出\n             const copyShader = new ShaderPass(CopyShader);\n            copyShader.renderToScreen = true;\n            //这个参数的目的是马上将当前的内容输出\n            this.initBloomPass();\n            composer.addPass(copyShader);\n        },\n        initBloomPass(){\n          let params = {\n            exposure: 0.5,\n            bloomStrength: 1,\n             bloomThreshold: 0,\n            bloomRadius: 0.8\n          };\n          let bloomPass=new UnrealBloomPass(\n            new THREE.Vector2(window.innerWidth*0.85,window.innerHeight*0.85),\n              1.5,\n              0.2,\n              0\n          );\n          bloomPass.threshold = params.bloomThreshold;\n          bloomPass.strength = params.bloomStrength;\n          bloomPass.radius = params.bloomRadius;\n          composer.addPass(bloomPass);\n\n        },\n      startplay(){\n        let that=this;\n        this.$bus.$on('playfile',(res)=>{\n          //console.log(res);\n          //that.isLoaded=false;\n          //每次导入改变值然后重新渲染\n          var JSONStr=JSON.stringify(res);\n          let file=new File([JSONStr],'scene.json',{\n            type: 'application/json',\n            lastModified: Date.now()\n          });\n          //组合成文件\n          let url = null ;\n          if (window.createObjectURL!=undefined) { // basic\n            url = window.createObjectURL(file) ;\n          } else if (window.URL!=undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file) ;\n          } else if (window.webkitURL!=undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file) ;\n          }\n          var loader=new THREE.ObjectLoader();\n          loader.load(url,function (obj){\n            scene=obj;\n            scene.background=new THREE.Color( 0xDEE6E6 );\n            console.log(scene);\n            //that.initLight();\n            that.AnalysisLine();\n            that.initBars();\n            that.initEffectComposer();\n            //that.initStats();\n            // initDatGUI();\n            that.animate();\n          });\n\n        });\n      }\n\n    },\n    mounted() {\n        this.init();\n        this.GetAudioData();\n        this.GetState();\n        this.startplay();\n\n    },\n}\n</script>\n\n<style>\n\n</style>\n"]}]}