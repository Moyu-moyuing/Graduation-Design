{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Footer\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Footer\\index.vue","mtime":1654580642340},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovd3VoYW5saWdvbmctamF2YS9tdXNpYy92dWUtYWRtaW4tdGVtcGxhdGUtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIC8qYnVnOgogICog5Zy65pmv5qCR5Zyo5q+P5qyh54K55Ye757yW6L6R5ZCO5Lya5pS55Y+YIOKImgogICog6Lez6L2s6Lev55Sx6Zeu6aKYIOKImgogICog5paw5aKe5oyJ6ZKuIOKImgogICog5Zu+54mH5byC5bi46Zeu6aKYIOKImgogICog5pKt5pS+5Zmo5qC35byPCiAgKiDmjInpkq7moLflvI8KICAqIOaPkOS6pOaKveWxieS8mOWMliDiiJoKICAqIOWKoOi9veWKqOeUuwogICog5YWz6Zet5ryU56S65pe26Z+z5LmQ5YWz6ZetCiAgKiDnmbvlvZUqLwogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkcmF3ZXI6IGZhbHNlLAogICAgICBmaWxlTGlzdDogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBpZDogbnVsbCwKICAgICAgZmlsZTogbnVsbCwKICAgICAgZm9ybTogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGRhdGUxOiAnJywKICAgICAgICBkYXRlMjogJycsCiAgICAgICAgaW1nOiAnJwogICAgICB9LAogICAgICB1c2VyaWQ6IG51bGwsCiAgICAgIHVzZXJuYW1lOiBudWxsLAogICAgICBpbWdpZDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ25hbWUnXSkpLAogIG1ldGhvZHM6IHsKICAgIFNhdmU6IGZ1bmN0aW9uIFNhdmUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmRyYXdlciA9IHRydWU7CgogICAgICBpZiAodGhpcy5pZCAhPSBudWxsKSB7CiAgICAgICAgdGhpcy5yZXF1ZXN0LmdldCgiaHR0cDovL2xvY2FsaG9zdDo5MDkwL3NjZW5lZmlsZS9nZXRieWlkIiwgewogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIGlkOiB0aGlzLmlkCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy5mb3JtLm5hbWUgPSByZXMuZmlsZS5maWxlbmFtZTsKICAgICAgICAgIF90aGlzLnVzZXJpZCA9IHJlcy5maWxlLnVzZXJpZDsKICAgICAgICAgIF90aGlzLnVzZXJuYW1lID0gcmVzLmZpbGUudXNlcm5hbWU7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdyZXF1ZXN0c2F2ZScpOwogICAgICB0aGlzLiRidXMuJG9uKCdyZXNwb25zZXNhdmUnLCBmdW5jdGlvbiAoaWQpIHsKICAgICAgICB2YXIgc2NlbmVmaWxlID0gewogICAgICAgICAgaWQ6IF90aGlzMi5pZCwKICAgICAgICAgIHVzZXJpZDogX3RoaXMyLnVzZXJpZCwKICAgICAgICAgIHVzZXJuYW1lOiBfdGhpczIubmFtZSwKICAgICAgICAgIGZpbGVuYW1lOiBfdGhpczIuZm9ybS5uYW1lLAogICAgICAgICAgZmlsZTogaWQsCiAgICAgICAgICBmaWxlaW1nOiBfdGhpczIuaW1naWQKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5pbWdpZCk7CgogICAgICAgIF90aGlzMi5yZXF1ZXN0LnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6OTA5MC9zY2VuZWZpbGUiLCBzY2VuZWZpbGUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKTsKICAgICAgICAgIF90aGlzMi5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgIF90aGlzMi5kcmF3ZXIgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygi5L+d5a2Y5oiQ5Yqf77yBIik7CgogICAgICAgICAgX3RoaXMyLmZvcm0gPSB7CiAgICAgICAgICAgIG5hbWU6ICcnLAogICAgICAgICAgICBkYXRlMTogJycsCiAgICAgICAgICAgIGRhdGUyOiAnJywKICAgICAgICAgICAgaW1nOiAnJwogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gTG9hZCgpewogICAgLy8gLy9jb25zb2xlLmxvZyh0aGlzLmZpbGUpOwogICAgLy8gbGV0IHBhcmFtPW5ldyBGb3JtRGF0YSgpOwogICAgLy8gcGFyYW0uYXBwZW5kKCdmaWxlJyx0aGlzLmZpbGUpOwogICAgLy8gbGV0IGNvbmZpZz17aGVhZGVyczp7J0NvbnRlbnQtVHlwZSc6J211bHRpcGFydC9mb3JtLWRhdGEnfX0KICAgIC8vICAgdGhpcy5yZXF1ZXN0LnBvc3QoImh0dHA6Ly9sb2NhbGhvc3Q6OTA5MC91cGxvYWQiLAogICAgLy8gICAgcGFyYW0sY29uZmlnKS50aGVuKHJlcz0+ewogICAgLy8gICAgIC8vY29uc29sZS5sb2cocmVzKTsKICAgIC8vICAgICB0aGlzLmlkPXJlcy5maWxlaWQ7CiAgICAvLyAgIH0pCiAgICAvLwogICAgLy8gfSwKICAgIC8vIFVwbG9hZChlKXsKICAgIC8vICAgdGhpcy5maWxlPWUudGFyZ2V0LmZpbGVzWzBdOwogICAgLy8gfSwKICAgIEV4cG9ydDogZnVuY3Rpb24gRXhwb3J0KCkgewogICAgICB0aGlzLiRidXMuJGVtaXQoJ2V4cG9ydCcpOwogICAgfSwKICAgIFJlc2V0OiBmdW5jdGlvbiBSZXNldCgpIHsKICAgICAgdGhpcy4kYnVzLiRlbWl0KCdyZXNldCcpOyAvLyB0aGlzLnJlcXVlc3QuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjkwOTAvZ2V0RmlsZWluZm9CeWlkIix7CiAgICAgIC8vICAgcGFyYW1zOnsKICAgICAgLy8gICAgIGlkOnRoaXMuaWQKICAgICAgLy8gICB9CiAgICAgIC8vIH0pLnRoZW4ocmVzPT57CiAgICAgIC8vICAgdGhpcy4kYnVzLiRlbWl0KCdzZW5kcmVzJyxyZXMpOwogICAgICAvLyB9KQogICAgfSwKICAgIGJlZm9yZVVwbG9hZDogZnVuY3Rpb24gYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgdmFyIGZpbGVUeXBlID0gZmlsZS5uYW1lLnN1YnN0cmluZyhmaWxlLm5hbWUubGFzdEluZGV4T2YoJy4nKSk7CgogICAgICBpZiAoZmlsZVR5cGUudG9Mb3dlckNhc2UoKSAhPSAnLmpwZycgJiYgZmlsZVR5cGUudG9Mb3dlckNhc2UoKSAhPSAnLnBuZycpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmlofku7blv4XpobvkuLouanBn5oiWLnBuZ+exu+WeiycpOwogICAgICAgIHRoaXMuZmlsZUxpc3QgPSBbXTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAvLyDopobnm5ZlbGVtZW5055qE6buY6K6k5LiK5Lyg5paH5Lu2CiAgICB1cGxvYWRIdHRwUmVxdWVzdDogZnVuY3Rpb24gdXBsb2FkSHR0cFJlcXVlc3QoZGF0YSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGRhdGEuZmlsZSk7CgogICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoYXQuZm9ybS5pbWcgPSB0aGlzLnJlc3VsdDsKICAgICAgfTsKCiAgICAgIHZhciBwYXJhbSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBwYXJhbS5hcHBlbmQoJ2ZpbGUnLCBkYXRhLmZpbGUpOwogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICB9CiAgICAgIH07CiAgICAgIHRoaXMucmVxdWVzdC5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjkwOTAvdXBsb2FkIiwgcGFyYW0sIGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLmZpbGVpZCk7CiAgICAgICAgX3RoaXMzLmltZ2lkID0gcmVzLmZpbGVpZDsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6ZmQ5Yi25paH5Lu25LiK5Lyg55qE5Liq5pWw5Y+q5pyJ5LiA5Liq77yM6I635Y+W5LiK5Lyg5YiX6KGo55qE5pyA5ZCO5LiA5LiqCiAgICBoYW5kbGVVcGxvYWRDaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZVVwbG9hZENoYW5nZShmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAoZmlsZUxpc3QubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuZmlsZUxpc3QgPSBbZmlsZUxpc3RbZmlsZUxpc3QubGVuZ3RoIC0gMV1dOyAvLyDov5nkuIDmraXvvIzmmK8g5bGV56S65pyA5ZCO5LiA5qyh6YCJ5oup55qE5paH5Lu2CiAgICAgIH0KICAgIH0sCiAgICBnZXRmaWxlaWQ6IGZ1bmN0aW9uIGdldGZpbGVpZCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLiRidXMuJG9uKCdzZW5kZmlsZWlkJywgZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgX3RoaXM0LmlkID0gaWQ7CiAgICAgIH0pOwogICAgfSwKICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKCkgewogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgdGhpcy5mb3JtID0gewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGRhdGUxOiAnJywKICAgICAgICBkYXRlMjogJycsCiAgICAgICAgaW1nOiAnJwogICAgICB9OwogICAgfSwKICAgIGhhbmRsZUNsb3NlOiBmdW5jdGlvbiBoYW5kbGVDbG9zZShkb25lKSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruiupOWFs+mXre+8nycpLnRoZW4oZnVuY3Rpb24gKF8pIHsKICAgICAgICBkb25lKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChfKSB7fSk7CiAgICB9LAogICAgZ2V0dXNlcmlkOiBmdW5jdGlvbiBnZXR1c2VyaWQoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdGhpcy5yZXF1ZXN0LmdldCgiaHR0cDovL2xvY2FsaG9zdDo5MDkwL3VzZXIvZ2V0aWQiLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNS51c2VyaWQgPSByZXMuaWQ7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0dXNlcmlkKCk7CiAgICB0aGlzLmdldGZpbGVpZCgpOwogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAbA,kBAaA;AACA;AACAC,mBADA;AAEAC,kBAFA;AAGAC,oBAHA;AAIAC,cAJA;AAKAC,gBALA;AAMAC;AACAC,gBADA;AAEAC,iBAFA;AAGAC,iBAHA;AAIAC;AAJA,OANA;AAYAC,kBAZA;AAaAC,oBAbA;AAcAC;AAdA;AAiBA,GA/BA;AAgCAC,8BACAC,YACA,MADA,EADA,CAhCA;AAqCAC;AACAC,QADA,kBACA;AAAA;;AACA;;AACA;AACA;AACAC;AACAd;AADA;AADA,WAIAe,IAJA,CAIA;AAEA;AACA;AACA;AACA,SATA;AAUA;AACA,KAfA;AAgBAC,YAhBA,sBAgBA;AAAA;;AACA;AACA;AAEA;AACAhB,uBADA;AAEAO,+BAFA;AAGAC,+BAHA;AAIAS,oCAJA;AAKAhB,kBALA;AAMAiB;AANA;AASAC;;AACA,0EACAJ,IADA,CACA;AACA;AACA;AACA;;AACA;;AACA;AAEAZ,oBAFA;AAGAC,qBAHA;AAIAC,qBAJA;AAKAC;AALA;AAUA,SAhBA;AAiBA,OA7BA;AA8BA,KAhDA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAc,UAhEA,oBAgEA;AACA;AACA,KAlEA;AAmEAC,SAnEA,mBAmEA;AACA,+BADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA5EA;AA6EAC,gBA7EA,wBA6EArB,IA7EA,EA6EA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KApFA;AAqFA;AACAsB,qBAtFA,6BAsFA3B,IAtFA,EAsFA;AAAA;;AACA;AACA;AACA4B;;AACAA;AACAC;AACA,OAFA;;AAGA;AACAC;AACA;AAAAC;AAAA;AAAA;AAAA;AACA,wDACAD,KADA,EACAE,MADA,EACAb,IADA,CACA;AACAI;AACA;AACA,OAJA;AAKA,KArGA;AAsGA;AACAU,sBAvGA,8BAuGA5B,IAvGA,EAuGAH,QAvGA,EAuGA;AACA;AACA,wDADA,CACA;AACA;AACA,KA3GA;AA4GAgC,aA5GA,uBA4GA;AAAA;;AACA;AACA;AACA,OAFA;AAGA,KAhHA;AAiHAC,UAjHA,oBAiHA;AACA;AACA;AAEA5B,gBAFA;AAGAC,iBAHA;AAIAC,iBAJA;AAKAC;AALA;AAQA,KA3HA;AA4HA0B,eA5HA,uBA4HAC,IA5HA,EA4HA;AACA,6BACAlB,IADA,CACA;AACAkB;AACA,OAHA,EAIAC,KAJA,CAIA,eAJA;AAKA,KAlIA;AAmIAC,aAnIA,uBAmIA;AAAA;;AACA;AACArB;AACAX;AADA;AADA,SAIAY,IAJA,CAIA;AACA;AACA,OANA;AAOA;AA3IA,GArCA;AAmLAqB,SAnLA,qBAmLA;AACA;AACA;AACA;AAtLA","names":["data","drawer","fileList","loading","id","file","form","name","date1","date2","img","userid","username","imgid","computed","mapGetters","methods","Save","params","then","onSubmit","filename","fileimg","console","Export","Reset","beforeUpload","uploadHttpRequest","reader","that","param","headers","config","handleUploadChange","getfileid","cancel","handleClose","done","catch","getuserid","mounted"],"sourceRoot":"src/views/Editor/Footer","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"Footer\">\n    <el-button @click=\"Save\" type=\"primary\" style=\"margin-left: 16px;\">\n        保存\n    </el-button>\n    <el-button @click=\"Reset\" type=\"primary\" style=\"margin-left: 16px;\" >\n        重置\n    </el-button>\n    <el-button @click=\"Export\" type=\"primary\" style=\"margin-left: 16px;\">\n        导出\n    </el-button>\n\n    <el-drawer\n    title=\"文件\"\n    :visible.sync=\"drawer\"\n    :with-header=\"false\"\n    :before-close=\"handleClose\"\n    custom-class=\"demo-drawer\"\n    >\n      <div class=\"demo-drawer__content\">\n        <el-form :model=\"form\" label-width=\"80px\">\n          <el-form-item label=\"文件名\">\n            <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"封面\" label-width=\"80px\">\n            <el-upload\n              class=\"upload-demo\"\n              drag\n              action=\"#\"\n              :multiple=\"false\"\n              :show-file-list=\"true\"\n              :http-request=\"uploadHttpRequest\"\n              :file-list=\"fileList\"\n              :on-change=\"handleUploadChange\"\n              :before-upload=\"beforeUpload\"\n              >\n              <i class=\"el-icon-upload\"></i>\n              <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n              <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\n            </el-upload>\n          </el-form-item>\n          <el-form-item>\n              <el-button type=\"primary\" @click=\"onSubmit\" :loading=\"loading\">{{ loading ? '提交中 ...' : '立即保存' }}</el-button>\n              <el-button @click=\"cancel\">取消</el-button>\n          </el-form-item>\n        </el-form>\n<!--        <div class=\"demo-drawer__footer\">-->\n<!--          <el-button @click=\"cancelForm\">取 消</el-button>-->\n<!--          <el-button type=\"primary\" @click=\"$refs.drawer.closeDrawer()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>-->\n<!--        </div>-->\n\n      </div>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n\n  /*bug:\n  * 场景树在每次点击编辑后会改变 √\n  * 跳转路由问题 √\n  * 新增按钮 √\n  * 图片异常问题 √\n  * 播放器样式\n  * 按钮样式\n  * 提交抽屉优化 √\n  * 加载动画\n  * 关闭演示时音乐关闭\n  * 登录*/\n    data() {\n        return {\n            drawer:false,\n            fileList:[],\n          loading:false,\n          id:null,\n         file:null,\n            form:{\n              name:'',\n              date1:'',\n              date2:'',\n              img:'',\n            },\n          userid:null,\n          username:null,\n          imgid:''\n\n        }\n    },\n  computed: {\n    ...mapGetters([\n      'name'\n    ])\n  },\n    methods: {\n      Save(){\n        this.drawer = true;\n        if(this.id!=null){\n          this.request.get(\"http://localhost:9090/scenefile/getbyid\",{\n            params:{\n              id:this.id\n            }\n          }).then(res=>{\n\n            this.form.name=res.file.filename;\n            this.userid=res.file.userid;\n            this.username=res.file.username;\n          })\n        }\n      },\n      onSubmit(){\n        this.$bus.$emit('requestsave');\n        this.$bus.$on('responsesave',(id)=>{\n\n            let scenefile={\n              id:this.id,\n              userid:this.userid,\n              username:this.name,\n              filename:this.form.name,\n              file: id,\n              fileimg: this.imgid,\n\n            }\n            console.log(this.imgid);\n            this.request.post(\"http://localhost:9090/scenefile\",scenefile)\n          .then(res=>{\n            // console.log(res);\n            this.loading=true;\n            this.drawer=false;\n            this.$message.success(\"保存成功！\");\n            this.form={\n\n              name:'',\n              date1:'',\n              date2:'',\n              img:''\n\n            };\n\n\n          })\n        })\n      },\n      // Load(){\n      // //console.log(this.file);\n      // let param=new FormData();\n      // param.append('file',this.file);\n      // let config={headers:{'Content-Type':'multipart/form-data'}}\n      //   this.request.post(\"http://localhost:9090/upload\",\n      //    param,config).then(res=>{\n      //     //console.log(res);\n      //     this.id=res.fileid;\n      //   })\n      //\n      // },\n      // Upload(e){\n      //   this.file=e.target.files[0];\n      // },\n        Export(){\n            this.$bus.$emit('export');\n        },\n        Reset(){\n            this.$bus.$emit('reset');\n          // this.request.get(\"http://localhost:9090/getFileinfoByid\",{\n          //   params:{\n          //     id:this.id\n          //   }\n          // }).then(res=>{\n          //   this.$bus.$emit('sendres',res);\n          // })\n        },\n      beforeUpload(file) {\n        const fileType = file.name.substring(file.name.lastIndexOf('.'))\n        if (fileType.toLowerCase() != '.jpg' && fileType.toLowerCase() != '.png') {\n          this.$message.error('文件必须为.jpg或.png类型')\n          this.fileList = []\n          return false\n        }\n      },\n      // 覆盖element的默认上传文件\n      uploadHttpRequest(data) {\n        let reader = new FileReader()\n        let that = this\n        reader.readAsText(data.file)\n        reader.onload = function() {\n          that.form.img = this.result;\n        }\n        let param=new FormData();\n        param.append('file',data.file);\n        let config={headers:{'Content-Type':'multipart/form-data'}}\n        this.request.post(\"http://localhost:9090/upload\",\n          param,config).then(res=>{\n          console.log(res.fileid);\n          this.imgid=res.fileid;\n        })\n      },\n      // 限制文件上传的个数只有一个，获取上传列表的最后一个\n      handleUploadChange(file, fileList) {\n        if (fileList.length > 0) {\n          this.fileList = [fileList[fileList.length - 1]] // 这一步，是 展示最后一次选择的文件\n        }\n      },\n      getfileid(){\n        this.$bus.$on('sendfileid',(id)=>{\n          this.id=id;\n        })\n      },\n      cancel(){\n        this.loading=false;\n          this.form={\n\n              name:'',\n              date1:'',\n              date2:'',\n              img:''\n\n          }\n      },\n        handleClose(done) {\n        this.$confirm('确认关闭？')\n          .then(_ => {\n            done();\n          })\n          .catch(_ => {});\n      },\n      getuserid(){\n        this.request.get(\"http://localhost:9090/user/getid\", {\n          params:{\n            name:this.name\n          }\n        }).then(res=>{\n          this.userid=res.id;\n        });\n      }\n    },\n\n  mounted() {\n      this.getuserid();\n      this.getfileid();\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}