{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\utils\\OtherRequest.js","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\utils\\OtherRequest.js","mtime":1652191402210},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAnaHR0cDovL2xvY2FsaG9zdDo5MDkwJywKICAvLyDms6jmhI/vvIHvvIEg6L+Z6YeM5piv5YWo5bGA57uf5LiA5Yqg5LiK5LqGIOWQjuerr+aOpeWPo+WJjee8gCDliY3nvIDvvIzlkI7nq6/lv4Xpobvov5vooYzot6jln5/phY3nva7vvIEKICB0aW1lb3V0OiA1MDAwCn0pOyAvLyByZXF1ZXN0IOaLpuaIquWZqAovLyDlj6/ku6Xoh6ror7fmsYLlj5HpgIHliY3lr7nor7fmsYLlgZrkuIDkupvlpITnkIYKLy8g5q+U5aaC57uf5LiA5YqgdG9rZW7vvIzlr7nor7fmsYLlj4LmlbDnu5/kuIDliqDlr4YKCnJlcXVlc3QuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvL2NvbmZpZy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnOwogIC8vIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gdXNlci50b2tlbjsgIC8vIOiuvue9ruivt+axguWktAogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSDmi6bmiKrlmagKLy8g5Y+v5Lul5Zyo5o6l5Y+j5ZON5bqU5ZCO57uf5LiA5aSE55CG57uT5p6cCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIOWmguaenOaYr+i/lOWbnueahOaWh+S7tgoKICBpZiAocmVzcG9uc2UuY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ2Jsb2InKSB7CiAgICByZXR1cm4gcmVzOwogIH0gLy8g5YW85a655pyN5Yqh56uv6L+U5Zue55qE5a2X56ym5Liy5pWw5o2uCgoKICBpZiAodHlwZW9mIHJlcyA9PT0gJ3N0cmluZycpIHsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9CgogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["E:/wuhanligong-java/music/vue-admin-template-master/src/utils/OtherRequest.js"],"names":["axios","request","create","baseURL","timeout","interceptors","use","config","error","Promise","reject","response","res","data","responseType","JSON","parse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,uBADkB;AACQ;AACnCC,EAAAA,OAAO,EAAE;AAFkB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACzC;AAEA;AACA,SAAOA,MAAP;AACD,CALD,EAKG,UAAAC,KAAK,EAAI;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAPD,E,CASA;AACA;;AACAP,OAAO,CAACI,YAAR,CAAqBM,QAArB,CAA8BL,GAA9B,CACE,UAAAK,QAAQ,EAAI;AACV,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADU,CAEV;;AACA,MAAIF,QAAQ,CAACJ,MAAT,CAAgBO,YAAhB,KAAiC,MAArC,EAA6C;AAC3C,WAAOF,GAAP;AACD,GALS,CAMV;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AAED;;AACD,SAAOA,GAAP;AACD,CAbH,EAcE,UAAAJ,KAAK,EAAI;AACPS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADO,CACoB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAjBH;AAqBA,eAAeP,OAAf","sourcesContent":["import axios from 'axios'\n\nconst request = axios.create({\n  baseURL: 'http://localhost:9090',  // 注意！！ 这里是全局统一加上了 后端接口前缀 前缀，后端必须进行跨域配置！\n  timeout: 5000\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  //config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n  // config.headers['token'] = user.token;  // 设置请求头\n  return config\n}, error => {\n  return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n  response => {\n    let res = response.data;\n    // 如果是返回的文件\n    if (response.config.responseType === 'blob') {\n      return res;\n    }\n    // 兼容服务端返回的字符串数据\n    if (typeof res === 'string') {\n      res = res ? JSON.parse(res) : res\n\n    }\n    return res;\n  },\n  error => {\n    console.log('err' + error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n\nexport default request\n\n"]}]}