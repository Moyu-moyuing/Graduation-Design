{"remainingRequest":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\vue-admin-template-master\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\vue\\vue-admin-template-master\\src\\lib\\UnrealBloomPass.js","dependencies":[{"path":"E:\\vue\\vue-admin-template-master\\src\\lib\\UnrealBloomPass.js","mtime":1625070368000},{"path":"E:\\vue\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\vue-admin-template-master\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/vue/vue-admin-template-master/src/lib/UnrealBloomPass.js"],"names":["AdditiveBlending","Color","LinearFilter","MeshBasicMaterial","RGBAFormat","ShaderMaterial","UniformsUtils","Vector2","Vector3","WebGLRenderTarget","Pass","CopyShader","LuminosityHighPassShader","UnrealBloomPass","resolution","strength","radius","threshold","call","undefined","x","y","clearColor","pars","minFilter","magFilter","format","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","texture","name","generateMipmaps","i","renderTargetHorizonal","push","renderTargetVertical","console","error","highPassShader","highPassUniforms","clone","uniforms","value","materialHighPassFilter","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomFactors","bloomTintColors","copyShader","copyUniforms","materialCopy","blending","depthTest","depthWrite","transparent","enabled","needsSwap","oldClearColor","oldClearAlpha","basic","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","dispose","length","setSize","width","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","copy","getClearColor","getClearAlpha","oldAutoClear","autoClear","setClearColor","state","buffers","stencil","setTest","renderToScreen","material","map","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius"],"mappings":"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","sourcesContent":["import {\n\tAdditiveBlending,\n\tColor,\n\tLinearFilter,\n\tMeshBasicMaterial,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"./three.module.js\";\nimport { Pass } from './Pass.js';\nimport { CopyShader } from './CopyShader.js';\nimport { LuminosityHighPassShader } from './LuminosityHighPassShader.js';\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nvar UnrealBloomPass = function (resolution, strength, radius, threshold) {\n\n\tPass.call(this);\n\n\tthis.strength = (strength !== undefined) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = (resolution !== undefined) ? new Vector2(resolution.x, resolution.y) : new Vector2(256, 256);\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new Color(0, 0, 0);\n\n\t// render targets\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round(this.resolution.x / 2);\n\tvar resy = Math.round(this.resolution.y / 2);\n\n\tthis.renderTargetBright = new WebGLRenderTarget(resx, resy, pars);\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget(resx, resy, pars);\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push(renderTargetHorizonal);\n\n\t\tvar renderTargetVertical = new WebGLRenderTarget(resx, resy, pars);\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push(renderTargetVertical);\n\n\t\tresx = Math.round(resx / 2);\n\n\t\tresy = Math.round(resy / 2);\n\n\t}\n\n\t// luminosity high pass material\n\n\tif (LuminosityHighPassShader === undefined)\n\t\tconsole.error(\"UnrealBloomPass relies on LuminosityHighPassShader\");\n\n\tvar highPassShader = LuminosityHighPassShader;\n\tthis.highPassUniforms = UniformsUtils.clone(highPassShader.uniforms);\n\n\tthis.highPassUniforms[\"luminosityThreshold\"].value = threshold;\n\tthis.highPassUniforms[\"smoothWidth\"].value = 0.01;\n\n\tthis.materialHighPassFilter = new ShaderMaterial({\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t});\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [3, 5, 7, 9, 11];\n\tvar resx = Math.round(this.resolution.x / 2);\n\tvar resy = Math.round(this.resolution.y / 2);\n\n\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\tthis.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));\n\n\t\tthis.separableBlurMaterials[i].uniforms[\"texSize\"].value = new Vector2(resx, resy);\n\n\t\tresx = Math.round(resx / 2);\n\n\t\tresy = Math.round(resy / 2);\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial(this.nMips);\n\tthis.compositeMaterial.uniforms[\"blurTexture1\"].value = this.renderTargetsVertical[0].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture2\"].value = this.renderTargetsVertical[1].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture3\"].value = this.renderTargetsVertical[2].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture4\"].value = this.renderTargetsVertical[3].texture;\n\tthis.compositeMaterial.uniforms[\"blurTexture5\"].value = this.renderTargetsVertical[4].texture;\n\tthis.compositeMaterial.uniforms[\"bloomStrength\"].value = strength;\n\tthis.compositeMaterial.uniforms[\"bloomRadius\"].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2];\n\tthis.compositeMaterial.uniforms[\"bloomFactors\"].value = bloomFactors;\n\tthis.bloomTintColors = [new Vector3(1, 1, 1), new Vector3(1, 1, 1), new Vector3(1, 1, 1),\n\t\tnew Vector3(1, 1, 1), new Vector3(1, 1, 1)];\n\tthis.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\n\t// copy material\n\tif (CopyShader === undefined) {\n\n\t\tconsole.error(\"UnrealBloomPass relies on CopyShader\");\n\n\t}\n\n\tvar copyShader = CopyShader;\n\n\tthis.copyUniforms = UniformsUtils.clone(copyShader.uniforms);\n\tthis.copyUniforms[\"opacity\"].value = 1.0;\n\n\tthis.materialCopy = new ShaderMaterial({\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t});\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new MeshBasicMaterial();\n\n\tthis.fsQuad = new Pass.FullScreenQuad(null);\n\n};\n\nUnrealBloomPass.prototype = Object.assign(Object.create(Pass.prototype), {\n\n\tconstructor: UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor (var i = 0; i < this.renderTargetsHorizontal.length; i++) {\n\n\t\t\tthis.renderTargetsHorizontal[i].dispose();\n\n\t\t}\n\n\t\tfor (var i = 0; i < this.renderTargetsVertical.length; i++) {\n\n\t\t\tthis.renderTargetsVertical[i].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function (width, height) {\n\n\t\tvar resx = Math.round(width / 2);\n\t\tvar resy = Math.round(height / 2);\n\n\t\tthis.renderTargetBright.setSize(resx, resy);\n\n\t\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\t\tthis.renderTargetsHorizontal[i].setSize(resx, resy);\n\t\t\tthis.renderTargetsVertical[i].setSize(resx, resy);\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"texSize\"].value = new Vector2(resx, resy);\n\n\t\t\tresx = Math.round(resx / 2);\n\t\t\tresy = Math.round(resy / 2);\n\n\t\t}\n\n\t},\n\n\trender: function (renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n\n\t\tthis.oldClearColor.copy(renderer.getClearColor());\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor(this.clearColor, 0);\n\n\t\tif (maskActive) renderer.state.buffers.stencil.setTest(false);\n\n\t\t// Render input to screen\n\n\t\tif (this.renderToScreen) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget(null);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[\"tDiffuse\"].value = readBuffer.texture;\n\t\tthis.highPassUniforms[\"luminosityThreshold\"].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget(this.renderTargetBright);\n\t\trenderer.clear();\n\t\tthis.fsQuad.render(renderer);\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor (var i = 0; i < this.nMips; i++) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[i];\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"colorTexture\"].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"direction\"].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget(this.renderTargetsHorizontal[i]);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"colorTexture\"].value = this.renderTargetsHorizontal[i].texture;\n\t\t\tthis.separableBlurMaterials[i].uniforms[\"direction\"].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget(this.renderTargetsVertical[i]);\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[i];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[\"bloomStrength\"].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[\"bloomRadius\"].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[\"bloomTintColors\"].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget(this.renderTargetsHorizontal[0]);\n\t\trenderer.clear();\n\t\tthis.fsQuad.render(renderer);\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[\"tDiffuse\"].value = this.renderTargetsHorizontal[0].texture;\n\n\t\tif (maskActive) renderer.state.buffers.stencil.setTest(true);\n\n\t\tif (this.renderToScreen) {\n\n\t\t\trenderer.setRenderTarget(null);\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget(readBuffer);\n\t\t\tthis.fsQuad.render(renderer);\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function (kernelRadius) {\n\n\t\treturn new ShaderMaterial({\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new Vector2(0.5, 0.5) },\n\t\t\t\t\"direction\": { value: new Vector2(0.5, 0.5) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tfloat alphaSum = 0.0;\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\\\n\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\\\n\t\t\t\t\t\tdiffuseSum += (sample1.rgb + sample2.rgb) * w;\\\n\t\t\t\t\t\talphaSum += (sample1.a + sample2.a) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, alphaSum/weightSum);\\n\\\n\t\t\t\t}\"\n\t\t});\n\n\t},\n\n\tgetCompositeMaterial: function (nMips) {\n\n\t\treturn new ShaderMaterial({\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t});\n\n\t}\n\n});\n\nUnrealBloomPass.BlurDirectionX = new Vector2(1.0, 0.0);\nUnrealBloomPass.BlurDirectionY = new Vector2(0.0, 1.0);\n\nexport { UnrealBloomPass };\n"]}]}