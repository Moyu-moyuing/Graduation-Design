{"remainingRequest":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Attribute\\structure\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\src\\views\\Editor\\Attribute\\structure\\index.vue","mtime":1652284978912},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\babel.config.js","mtime":1637248914000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\wuhanligong-java\\music\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovKiDpnIDopoHmt7vliqDlh6DkuKrmlrnms5XlkozpnIDmsYLvvJoKMeOAgeaUueWPmOminOiJsiDiiJoKMuOAgeaUueWPmOasp+aLieinkuWPmOWMliDiiJoKM+OAgeaUueWPmOWQjeensO+8jOWcuuaZr+agkeS5n+aUueWPmCDiiJoKNOOAgeagueaNruaooeWei+S4jeWQjOaYvuekuueahOe8lui+keS5n+S4jeWQjCAwCjXjgIHorr7nva7mlrnms5Ug4oiaCjbjgIHmkqTplIDkuI7lj43mkqTplIAKN+OAgeS/neWtmOS4juWvvOWFpQo444CB6Z+z6aKR5Y+v6KeG5YyW5bey5YaZ5aW955qE5qih5Z6LCjnjgIHmoLnmja7mlofku7bpgInmi6nlj6/op4bljJYKMTDjgIHpmLLmraLliLfmlrAKMTHjgIHluK7liqkg4oiaCjEy44CB57uE5a+56LGh5o6n5Yi2CjEz44CBaGVscGVy55qEdHJlZeWIt+aWsOmXrumimAoxNOOAgemmlumhtQoxNeOAgeaWh+S7tuWMuu+8iOaYr+WQpumcgOimgeaVsOaNruW6k++8n++8iQoxNuOAgeWOhuWPsuiusOW9le+8nwogKi8KaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUvYnVpbGQvdGhyZWUubW9kdWxlLmpzJzsKaW1wb3J0IEdldFVVSUQgZnJvbSAnLi4vLi4vLi4vLi4vbGliL0dldHV1aWQnOwppbXBvcnQgeyBHcm91cCwgT2JqZWN0M0QsIFZlY3RvcjMgfSBmcm9tICcuLi8uLi8uLi8uLi9saWIvdGhyZWUubW9kdWxlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzdHJ1Y3R1cmUnLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLlJlZnJlc2hTY2VuZVRyZWUoKTsgLy/liLfmlrDnlJ/mlYgKCiAgICB0aGlzLkdldE9iamVjdCgpOwogICAgdGhpcy5HZXRTY2VuZU9iamVjdCgpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIFJvdGF0aW9uWDogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gVEhSRUUuTWF0aC5yYWRUb0RlZyh0aGlzLk9iamVjdDNELnJvdGF0aW9uLngpOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldChYKSB7CiAgICAgICAgdGhpcy5PYmplY3QzRC5yb3RhdGVYKFRIUkVFLk1hdGguZGVnVG9SYWQoWCkpOwogICAgICB9CiAgICB9LAogICAgUm90YXRpb25ZOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBUSFJFRS5NYXRoLnJhZFRvRGVnKHRoaXMuT2JqZWN0M0Qucm90YXRpb24ueSk7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KFkpIHsKICAgICAgICB0aGlzLk9iamVjdDNELnJvdGF0ZVkoVEhSRUUuTWF0aC5kZWdUb1JhZChZKSk7CiAgICAgIH0KICAgIH0sCiAgICBSb3RhdGlvblo6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIFRIUkVFLk1hdGgucmFkVG9EZWcodGhpcy5PYmplY3QzRC5yb3RhdGlvbi56KTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQoWikgewogICAgICAgIHRoaXMuT2JqZWN0M0Qucm90YXRlWihUSFJFRS5NYXRoLmRlZ1RvUmFkKFopKTsKICAgICAgfQogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIGlmICh0aGlzLk9iamVjdDNELmhhc093blByb3BlcnR5KCdpc1RyYW5zJykpIHsKICAgICAgICAgIHJldHVybiB0aGlzLk9iamVjdDNELmNvbG9yOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAodGhpcy5PYmplY3QzRC5uYW1lLmluZGV4T2YoJ+mfs+mikee6vycpICE9IC0xKSB7CiAgICAgICAgICAgIHJldHVybiAnIycgKyB0aGlzLk9iamVjdDNELmNoaWxkcmVuWzBdLm1hdGVyaWFsLmNvbG9yLmdldEhleFN0cmluZygpOwogICAgICAgICAgfSBlbHNlIGlmICh0aGlzLk9iamVjdDNELm5hbWUuaW5kZXhPZign6Z+z6aKR6LCxJykgIT0gLTEpIHsKICAgICAgICAgICAgcmV0dXJuICcjJyArIHRoaXMuT2JqZWN0M0QuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0ubWF0ZXJpYWwuY29sb3IuZ2V0SGV4U3RyaW5nKCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAodGhpcy5PYmplY3QzRC5tYXRlcmlhbCkgewogICAgICAgICAgICAgIC8v5aaC5p6c5p2Q6LSo5a2Y5ZyoCiAgICAgICAgICAgICAgcmV0dXJuICcjJyArIHRoaXMuT2JqZWN0M0QubWF0ZXJpYWwuY29sb3IuZ2V0SGV4U3RyaW5nKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy/mnInkupvlr7nosaHnm7TmjqXlj6/ku6Xojrflj5Zjb2xvcuaIluiAheaYr+S7juaOp+WItumdouadv+S8oOWFpeeahOWvueixoQogICAgICAgICAgICAgIHJldHVybiAnIycgKyB0aGlzLk9iamVjdDNELmNvbG9yLmdldEhleFN0cmluZygpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdjb2xvcikgewogICAgICAgIGlmICh0aGlzLk9iamVjdDNELm5hbWUuaW5kZXhPZign6Z+z6aKR57q/JykgIT0gLTEgfHwgdGhpcy5PYmplY3QzRC5uYW1lLmluZGV4T2YoJ+mfs+mikeiwsScpICE9IC0xKSB7CiAgICAgICAgICB0aGlzLk9iamVjdDNELnRyYXZlcnNlKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgICAgICBpZiAoY2hpbGQuaXNMaW5lKSBjaGlsZC5tYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7CiAgICAgICAgICAgICAgY29sb3I6IG5ld2NvbG9yCiAgICAgICAgICAgIH0pOyAvLyBpZihjaGlsZC5pc01lc2gpewogICAgICAgICAgICAvLyAgICAgY2hpbGQubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoewogICAgICAgICAgICAvLyAgICAgY29sb3I6IG5ld2NvbG9yCiAgICAgICAgICAgIC8vICAgICB9KTsKICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAvL+ivtOaYjuaYr2Jhckdyb3VwCgogICAgICAgICAgICBpZiAoY2hpbGQudHlwZSA9PSAnR3JvdXAnKSB7CiAgICAgICAgICAgICAgY2hpbGQuY2hpbGRyZW5bMF0ubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoewogICAgICAgICAgICAgICAgY29sb3I6IG5ld2NvbG9yCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAodGhpcy5PYmplY3QzRC5tYXRlcmlhbCkgewogICAgICAgICAgICB0aGlzLk9iamVjdDNELm1hdGVyaWFsLmNvbG9yLnNldChuZXdjb2xvcik7CiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuT2JqZWN0M0QudHlwZS5pbmRleE9mKCJMaWdodCIpICE9IC0xKSB7CiAgICAgICAgICAgIC8v6K+05piO5piv5YWJCiAgICAgICAgICAgIHRoaXMuT2JqZWN0M0QuY29sb3Iuc2V0KG5ld2NvbG9yKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvL+ebkeWQrOW9k+WJjWN1cnJlbnTlj5jljJYKICAgIGN1cnJlbnQ6IGZ1bmN0aW9uIGN1cnJlbnQodXVpZCkgewogICAgICBpZiAodXVpZCkgewogICAgICAgIHRoaXMuJHJlZnMuRWxUcmVlLnNldEN1cnJlbnRLZXkodXVpZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcmVmcy5FbFRyZWUuc2V0Q3VycmVudEtleShudWxsKTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8gZ2V0U2NlbmUoKXsKICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLiRwYXJlbnQuJHBhcmVudC4kcGFyZW50LmdldFNjZW5lKCkpOwogICAgLy8gfQogICAgLy8gT2JqZWN0VHJhbnNsYXRlKFNjZW5lT2JqZWN0KXsKICAgIC8vICAgICAgbGV0IE9iamVjdDNEPXsKICAgIC8vICAgICAgICAgbmFtZTpTY2VuZU9iamVjdC5uYW1lLAogICAgLy8gICAgICAgICB1dWlkOlNjZW5lT2JqZWN0LnV1aWQsCiAgICAvLyAgICAgICAgIHR5cGU6U2NlbmVPYmplY3QudHlwZSwKICAgIC8vICAgICAgICAgcG9zaXRpb246U2NlbmVPYmplY3QucG9zaXRpb24sCiAgICAvLyAgICAgICAgIC8v5qyn5ouJ6KeSCiAgICAvLyAgICAgICAgIHJvdGF0aW9uOm5ldyBUSFJFRS5WZWN0b3IzKFRIUkVFLk1hdGgucmFkVG9EZWcoU2NlbmVPYmplY3Qucm90YXRpb24ueCksVEhSRUUuTWF0aC5yYWRUb0RlZyhTY2VuZU9iamVjdC5yb3RhdGlvbi55KSxUSFJFRS5NYXRoLnJhZFRvRGVnKFNjZW5lT2JqZWN0LnJvdGF0aW9uLnopKSwKICAgIC8vICAgICAgICAgc2NhbGU6U2NlbmVPYmplY3Quc2NhbGUsCiAgICAvLyAgICAgICAgIHZpc2libGU6U2NlbmVPYmplY3QudmlzaWJsZSwKICAgIC8vICAgICAgICAgY29sb3I6JyMwMDAwMDAnLAogICAgLy8gICAgICAgICBpc1RyYW5zOnRydWUvL+WIpOaWremAieWPluWvueixoeaWueazleS8oOWFpeeahOWvueixoeaYr+WQpuaYr+WOn+eUn3RocmVl5a+56LGhCiAgICAvLyAgICAgfTsKICAgIC8vICAgICBpZihTY2VuZU9iamVjdC5tYXRlcmlhbCl7CiAgICAvLyAgICAgICAgIC8v5aaC5p6c5p2Q6LSo5a2Y5ZyoCiAgICAvLyAgICAgICAgIE9iamVjdDNELmNvbG9yPScjJytTY2VuZU9iamVjdC5tYXRlcmlhbC5jb2xvci5nZXRIZXhTdHJpbmcoKTsKICAgIC8vICAgICB9ZWxzZXsKICAgIC8vICAgICAgICAgLy/mnInkupvlr7nosaHnm7TmjqXlj6/ku6Xojrflj5Zjb2xvcuaIluiAheaYr+S7juaOp+WItumdouadv+S8oOWFpeeahOWvueixoQogICAgLy8gICAgICAgICBPYmplY3QzRC5jb2xvcj0nIycrU2NlbmVPYmplY3QuY29sb3IuZ2V0SGV4U3RyaW5nKCk7CiAgICAvLyAgICAgfQogICAgLy8gICAgIHJldHVybiBPYmplY3QzRDsKICAgIC8vIH0sCiAgICAvLyBzZWxlY3RPYmpDaGFuZ2UoY29sb3IpewogICAgLy8gICAgIGlmKHRoaXMuT2JqZWN0M0QubWF0ZXJpYWwpewogICAgLy8gICAgICAgICAgdGhpcy5PYmplY3QzRC5tYXRlcmlhbC5jb2xvci5zZXQoY29sb3IpOwogICAgLy8gICAgIH1lbHNlIGlmKHRoaXMuT2JqZWN0M0QubGlnaHQpewogICAgLy8gICAgICAgICB0aGlzLk9iamVjdDNELmNvbG9yLnNldChjb2xvcik7CiAgICAvLyAgICAgfQogICAgLy8gfSwKICAgIC8vIGdldENoaWxkcmVuKG9iail7CiAgICAvLyAgICAgaWYoIW9iai5jaGlsZHJlbi5jaGlsZHJlbil7CiAgICAvLyAgICAgICAgIHJldHVybiBvYmo7CiAgICAvLyAgICAgfWVsc2V7CiAgICAvLyAgICAgICAgIHdoaWxlKG9iai5jaGlsZHJlbil7CiAgICAvLyAgICAgICAgICAgICBvYmo9b2JqLmNoaWxkcmVuOwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgICAgIHJldHVybiBvYmo7CiAgICAvLyAgICAgfQogICAgLy8gfSwKICAgIGluaXRPYmplY3Q6IGZ1bmN0aW9uIGluaXRPYmplY3QoKSB7CiAgICAgIHZhciBPYmplY3QzRCA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICB1dWlkOiAnJywKICAgICAgICB0eXBlOiAnJywKICAgICAgICBwb3NpdGlvbjogbmV3IFRIUkVFLlZlY3RvcjMoKSwKICAgICAgICAvL+asp+aLieinkgogICAgICAgIHJvdGF0aW9uOiBuZXcgVEhSRUUuRXVsZXIoKSwKICAgICAgICBzY2FsZTogbmV3IFRIUkVFLlZlY3RvcjMoKSwKICAgICAgICB2aXNpYmxlOiB0cnVlLAogICAgICAgIGNvbG9yOiAnIzExMTExMScsCiAgICAgICAgaXNUcmFuczogdHJ1ZQogICAgICB9OwogICAgICByZXR1cm4gT2JqZWN0M0Q7CiAgICB9LAogICAgT2JqZWN0VG8zRDogZnVuY3Rpb24gT2JqZWN0VG8zRCgpIHt9LAogICAgR2V0T2JqZWN0OiBmdW5jdGlvbiBHZXRPYmplY3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLiRidXMuJG9uKCdnZXRFdmVudCcsIGZ1bmN0aW9uIChvYmplY3QpIHsKICAgICAgICAvL+mAieS4reeJqeS9k+inpuWPkeeCueWHu+S6i+S7tgogICAgICAgIF90aGlzLmhhbmRsZU5vZGVDbGljayhvYmplY3QpOwogICAgICB9KTsKICAgIH0sCiAgICBHZXRTY2VuZU9iamVjdDogZnVuY3Rpb24gR2V0U2NlbmVPYmplY3QoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kYnVzLiRvbigncmVzcG9uc2VPYmonLCBmdW5jdGlvbiAob2JqZWN0KSB7CiAgICAgICAgaWYgKG9iamVjdC50eXBlLmluZGV4T2YoIk1lc2giKSAhPSAtMSB8fCBvYmplY3QudHlwZS5pbmRleE9mKCJHcm91cCIpICE9IC0xKSB7CiAgICAgICAgICAvL+ivtOaYjuaYr+adkOi0qOeJqeS9kwogICAgICAgICAgX3RoaXMyLk9iamVjdDNEID0gb2JqZWN0OwogICAgICAgIH0gZWxzZSBpZiAob2JqZWN0LnR5cGUuaW5kZXhPZigiTGlnaHQiKSAhPSAtMSkgewogICAgICAgICAgLy/or7TmmI7mmK/lhYkKICAgICAgICAgIF90aGlzMi5PYmplY3QzRCA9IG9iamVjdDsKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzMi5PYmplY3QzRCk7CiAgICAgICAgfSBlbHNlIGlmIChvYmplY3QudHlwZS5pbmRleE9mKCJIZWxwZXIiKSAhPSAtMSkgewogICAgICAgICAgLy/or7TmmI7mmK/ovoXliqnlt6XlhbcKICAgICAgICAgIF90aGlzMi5PYmplY3QzRCA9IF90aGlzMi5pbml0T2JqZWN0KCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZWZyZXNoTm9kZUJ5dXVpZDogZnVuY3Rpb24gcmVmcmVzaE5vZGVCeXV1aWQobGlzdCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIC8v6YGN5Y6G5Zy65pmv5qCR57uT5p6E5pu05pS55ZCN56ewCiAgICAgIGxpc3QubWFwKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgaWYgKGMudXVpZCAmJiBjLnV1aWQgPT0gX3RoaXMzLk9iamVjdDNELnV1aWQpIHsKICAgICAgICAgIGMubmFtZSA9IF90aGlzMy5PYmplY3QzRC5uYW1lOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoYy5jaGlsZHJlbiAmJiBjLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgX3RoaXMzLnJlZnJlc2hOb2RlQnl1dWlkKGMuY2hpbGRyZW4pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgUmVmcmVzaE5vZGVOYW1lOiBmdW5jdGlvbiBSZWZyZXNoTm9kZU5hbWUoKSB7CiAgICAgIHRoaXMucmVmcmVzaE5vZGVCeXV1aWQodGhpcy5zY2VuZVN0cnVjdHVyZSk7CiAgICB9LAogICAgUmVmcmVzaFNjZW5lVHJlZTogZnVuY3Rpb24gUmVmcmVzaFNjZW5lVHJlZSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICAvL+avj+asoeWcuuaZr+e7k+aehOaUueWPmOWIt+aWsOWcuuaZr+agkQogICAgICB0aGlzLiRidXMuJG9uKCdzY2VuZUNoYW5nZWQnLCBmdW5jdGlvbiAoc2NlbmVsaXN0KSB7CiAgICAgICAgdmFyIHNjZW5lVHJlZSA9IFtdOwogICAgICAgIHZhciBsaWdodFRyZWUgPSBbXTsKICAgICAgICB2YXIgaGVscGVyVHJlZSA9IFtdOwoKICAgICAgICBfdGhpczQuY3JlYXRlU2NlbmVTdHJ1Y3R1cmUoc2NlbmVsaXN0LCBzY2VuZVRyZWUsIGxpZ2h0VHJlZSwgaGVscGVyVHJlZSk7CgogICAgICAgIF90aGlzNC5zY2VuZVN0cnVjdHVyZVswXS5jaGlsZHJlbiA9IHNjZW5lVHJlZTsKICAgICAgICBfdGhpczQuc2NlbmVTdHJ1Y3R1cmVbMl0uY2hpbGRyZW4gPSBsaWdodFRyZWU7CiAgICAgICAgX3RoaXM0LnNjZW5lU3RydWN0dXJlWzNdLmNoaWxkcmVuID0gaGVscGVyVHJlZTsKICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlU2NlbmVTdHJ1Y3R1cmU6IGZ1bmN0aW9uIGNyZWF0ZVNjZW5lU3RydWN0dXJlKHNjZW5lbGlzdCwgc2NlbmVUcmVlLCBsaWdodFRyZWUsIGhlbHBlclRyZWUpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBzY2VuZWxpc3QubWFwKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgICBuYW1lOiBjLm5hbWUsCiAgICAgICAgICB0eXBlOiBjLnR5cGUsCiAgICAgICAgICB1dWlkOiBjLnV1aWQKICAgICAgICB9OwoKICAgICAgICBpZiAoYy5jaGlsZHJlbiAmJiBjLmNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGRhdGEuY2hpbGRyZW4gPSBbXTsKCiAgICAgICAgICBfdGhpczUuY3JlYXRlU2NlbmVTdHJ1Y3R1cmUoYy5jaGlsZHJlbiwgZGF0YS5jaGlsZHJlbiwgZGF0YS5jaGlsZHJlbiwgZGF0YS5jaGlsZHJlbik7CiAgICAgICAgfQoKICAgICAgICBpZiAoYy50eXBlLmluZGV4T2YoIk1lc2giKSAhPSAtMSB8fCBjLnR5cGUuaW5kZXhPZigiR3JvdXAiKSAhPSAtMSB8fCBjLnR5cGUuaW5kZXhPZigiT2JqZWN0M0QiKSAhPSAtMSkgewogICAgICAgICAgLy/or7TmmI7mmK/mnZDotKjniankvZMKICAgICAgICAgIGlmIChjLnBhcmVudC5uYW1lICE9ICLpn7PpopHnur8iICYmIGMucGFyZW50Lm5hbWUgIT0gIumfs+mikeiwsSIpIHsKICAgICAgICAgICAgc2NlbmVUcmVlLnB1c2goZGF0YSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChjLnR5cGUuaW5kZXhPZigiTGlnaHQiKSAhPSAtMSkgewogICAgICAgICAgLy/or7TmmI7mmK/lhYkKICAgICAgICAgIGxpZ2h0VHJlZS5wdXNoKGRhdGEpOwogICAgICAgIH0gZWxzZSBpZiAoYy50eXBlLmluZGV4T2YoIkhlbHBlciIpICE9IC0xKSB7CiAgICAgICAgICAvL+ivtOaYjuaYr+i+heWKqeW3peWFtwogICAgICAgICAgaGVscGVyVHJlZS5wdXNoKGRhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8gZmluZE9iamVjdCgpewogICAgLy8gICAgIHRoaXMuJGJ1cy4kb24oJ2VtaXRPYmplY3QnLChvYmplY3QpPT57CiAgICAvLyAgICAgICAgIGlmKG9iamVjdD09bnVsbCl7CiAgICAvLyAgICAgICAgICAgICB0aGlzLk9iamVjdDNEPXRoaXMuaW5pdE9iamVjdCgpOwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgICAgICAgICBlbHNlewogICAgLy8gICAgICAgICAgICAgICAgIHRoaXMuT2JqZWN0M0Q9b2JqZWN0OwogICAgLy8gICAgICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgfSk7CiAgICAvLyB9LAogICAgaGFuZGxlTm9kZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVOb2RlQ2xpY2sodGFyZ2V0KSB7CiAgICAgIGlmICh0YXJnZXQgIT0gbnVsbCAmJiB0YXJnZXQudHlwZS5pbmRleE9mKCdDYW1lcmEnKSA9PSAtMSAmJiB0YXJnZXQuaGFzT3duUHJvcGVydHkoJ3V1aWQnKSkgewogICAgICAgIC8v5a+56LGh5LiN5Li656m677ya54K55Ye75Zy65pmv56m655m95Zyw5pa5CiAgICAgICAgLy/nm7jmnLrkuI3og73ov5vooYzmk43kvZwKICAgICAgICAvL+agkeWfuuacrOe7k+aehOagh+etvueCueWHu+S4jeinpuWPkQogICAgICAgIHRoaXMuY3VycmVudCA9IHRhcmdldC51dWlkOwoKICAgICAgICBpZiAoIXRhcmdldC5oYXNPd25Qcm9wZXJ0eSgnaXNUcmFucycpICYmIHRhcmdldC5oYXNPd25Qcm9wZXJ0eSgndmlzaWJsZScpKSB7CiAgICAgICAgICAvL+ivtOaYjuaYr+WcuuaZr+S4reaLv+WIsOeahOWvueixoQogICAgICAgICAgdGhpcy5PYmplY3QzRCA9IHRhcmdldDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy/or7TmmI7mmK/ku47ngrnlh7vlnLrmma/moJHov5vooYznmoTpgInmi6nniankvZPvvIzpnIDopoHliLBlZGl0b3LkuK3mi7/lvZPliY3lr7nosaEKICAgICAgICAgIC8v6Kem5Y+R5LiA57O75YiX5p+l6K+i5bm25L+u5pS5b2JqZWN05LqL5Lu2CiAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ3JlcXVlc3RPYmonLCB0YXJnZXQpOwogICAgICAgICAgY29uc29sZS5sb2codGFyZ2V0KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jdXJyZW50ID0gJyc7CiAgICAgICAgdGhpcy5PYmplY3QzRCA9IHRoaXMuaW5pdE9iamVjdCgpOwogICAgICB9CgogICAgICB0aGlzLiRidXMuJGVtaXQoJ2NoZWNrRXZlbnQnLCB0YXJnZXQpOyAvLyBpZiAodGFyZ2V0LnV1aWQgJiYgdGFyZ2V0LnV1aWQgIT09IHRoaXMuY3VycmVudC51dWlkKSB7CiAgICAgIC8vICAgICB0aGlzLmN1cnJlbnQgPSB0YXJnZXQ7CiAgICAgIC8vICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmN1cnJlbnQudXVpZCk7CiAgICAgIC8vICAgICAvLyBjb25zb2xlLmxvZyh0YXJnZXQudXVpZCkKICAgICAgLy8gfQogICAgICAvLyBpZih0YXJnZXQudXVpZCl7CiAgICAgIC8vICAgICB0aGlzLiRyZWZzLkVsVHJlZS5zZXRDdXJyZW50S2V5KHRhcmdldC51dWlkKQogICAgICAvLyB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudDogJycsCiAgICAgIGNoZWNrZWQ6IHRydWUsCiAgICAgIE9iamVjdDNEOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgdXVpZDogJycsCiAgICAgICAgdHlwZTogJycsCiAgICAgICAgcG9zaXRpb246IG5ldyBUSFJFRS5WZWN0b3IzKCksCiAgICAgICAgLy/mrKfmi4nop5IKICAgICAgICByb3RhdGlvbjogbmV3IFRIUkVFLkV1bGVyKCksCiAgICAgICAgc2NhbGU6IG5ldyBUSFJFRS5WZWN0b3IzKCksCiAgICAgICAgdmlzaWJsZTogdHJ1ZSwKICAgICAgICBjb2xvcjogJyMxMTExMTEnLAogICAgICAgIGlzVHJhbnM6IHRydWUKICAgICAgfSwKICAgICAgZGVmYXVsdFByb3BzOiB7CiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgICAgbGFiZWw6ICduYW1lJwogICAgICB9LAogICAgICBzY2VuZVN0cnVjdHVyZTogW3sKICAgICAgICBuYW1lOiAn5Zy65pmvJywKICAgICAgICB0eXBlOiAnYmFzZScsCiAgICAgICAgY2hpbGRyZW46IFtdCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5pGE5YOP5py6JywKICAgICAgICB0eXBlOiAnY2FtZXJhR3JvdXAnLAogICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgbmFtZTogJ+mAj+inhuebuOacuicsCiAgICAgICAgICB0eXBlOiAncGVyc3BlY3RpdmVDYW1lcmEnLAogICAgICAgICAgY2hpbGRyZW46IFtdCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIG5hbWU6ICflhYnmupAnLAogICAgICAgIHR5cGU6ICdsaWdodEdyb3VwJywKICAgICAgICBjaGlsZHJlbjogW10KICAgICAgfSwgewogICAgICAgIG5hbWU6ICfovoXliqnlt6XlhbcnLAogICAgICAgIHR5cGU6ICdoZWxwZXInLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9XQogICAgfTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,mBAFA;AAGAC,SAHA,qBAGA;AACA,4BADA,CACA;;AACA;AACA;AAEA,GARA;AASAC;AACAC;AACAC,SADA,iBACA;AACA;AACA,OAHA;AAIAC,SAJA,eAIAC,CAJA,EAIA;AACA;AACA;AANA,KADA;AASAC;AACAH,SADA,iBACA;AACA;AACA,OAHA;AAIAC,SAJA,eAIAG,CAJA,EAIA;AACA;AACA;AANA,KATA;AAiBAC;AACAL,SADA,iBACA;AACA;AACA,OAHA;AAIAC,SAJA,eAIAK,CAJA,EAIA;AACA;AACA;AANA,KAjBA;AAyBAC;AACAP,SADA,iBACA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA,WAFA,MAGA;AACA;AACA;AACA;AAEA,aAJA,MAIA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAxBA;AAyBAC,SAzBA,eAyBAO,QAzBA,EAyBA;AACA;AACA;AACA,8BACAC;AACAF;AADA,eAFA,CAKA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAE;AACAF;AADA;AAGA;AACA,WAhBA;AAiBA,SAlBA,MAmBA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA;AAEA;AAtDA;AAzBA,GATA;AA2FAG;AACA;AACAC,WAFA,mBAEAC,IAFA,EAEA;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AAEA;AAVA,GA3FA;AAuGAC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAjDA,wBAiDA;AACA;AACAlB,gBADA;AAEAgB,gBAFA;AAGAG,gBAHA;AAIAC,qCAJA;AAKA;AACAC,mCANA;AAOAC,kCAPA;AAQAC,qBARA;AASAZ,wBATA;AAUAa;AAVA;AAYA;AACA,KA/DA;AAgEAC,cAhEA,wBAgEA,CAEA,CAlEA;AAmEAC,aAnEA,uBAmEA;AAAA;;AACA;AACA;AACA;AAGA,OALA;AAMA,KA1EA;AA2EAC,kBA3EA,4BA2EA;AAAA;;AACA;AACA;AACA;AACA;AACA,SAHA,MAIA;AACA;AACA;AACAC;AACA,SAJA,MAKA;AACA;AACA;AACA;AAIA,OAjBA;AAkBA,KA9FA;AA+FAC,qBA/FA,6BA+FAC,IA/FA,EA+FA;AAAA;;AACA;AACAA;AACA;AACAC;AACA;AACA,SAHA,MAIA;AAEA;AACA;AACA;AACA;AACA,OAXA;AAYA,KA7GA;AA8GAC,mBA9GA,6BA8GA;AACA;AACA,KAhHA;AAiHAC,oBAjHA,8BAiHA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AAEA,OATA;AAUA,KA7HA;AA8HAC,wBA9HA,gCA8HAC,SA9HA,EA8HAC,SA9HA,EA8HAC,SA9HA,EA8HAC,UA9HA,EA8HA;AAAA;;AACAH;AAEA;AACAnC,sBADA;AAEAmB,sBAFA;AAGAH;AAHA;;AAKA;AACAuB;;AACA;AACA;;AACA;AACA;AACA;AACAH;AACA;AAEA,SANA,MAOA;AACA;AACAC;AACA,SAHA,MAIA;AACA;AACAC;AACA;AAEA,OA3BA;AA4BA,KA3JA;AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,mBAtKA,2BAsKAC,MAtKA,EAsKA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAHA,MAIA;AACA;AACA;AACA;AACAb;AAEA;AACA,OAhBA,MAiBA;AACA;AACA;AACA;;AACA,4CAvBA,CAwBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAxMA,GAvGA;AAiTAW,MAjTA,kBAiTA;AACA;AACAxB,iBADA;AAEA2B,mBAFA;AAGAC;AACA3C,gBADA;AAEAgB,gBAFA;AAGAG,gBAHA;AAIAC,qCAJA;AAKA;AACAC,mCANA;AAOAC,kCAPA;AAQAC,qBARA;AASAZ,wBATA;AAUAa;AAVA,OAHA;AAeAoB;AAEAC,4BAFA;AAGAC;AAHA,OAfA;AAoBAC,uBACA;AAAA/C;AAAAmB;AAAA0B;AAAA,OADA,EAEA;AAAA7C;AAAAmB;AAAA0B,mBACA;AACA7C,sBADA;AAEAmB,mCAFA;AAGA0B;AAHA,SADA;AAAA,OAFA,EASA;AAAA7C;AAAAmB;AAAA0B;AAAA,OATA,EAUA;AAAA7C;AAAAmB;AAAA0B;AAAA,OAVA;AApBA;AAiCA;AAnVA","names":["name","mounted","computed","RotationX","get","set","X","RotationY","Y","RotationZ","Z","color","newcolor","child","watch","current","uuid","methods","initObject","type","position","rotation","scale","visible","isTrans","ObjectTo3D","GetObject","GetSceneObject","console","refreshNodeByuuid","list","c","RefreshNodeName","RefreshSceneTree","createSceneStructure","scenelist","sceneTree","lightTree","helperTree","data","handleNodeClick","target","checked","Object3D","defaultProps","children","label","sceneStructure"],"sourceRoot":"src/views/Editor/Attribute/structure","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"structure\">\n        <el-scrollbar class=\"Scrollbar\">\n        <el-tree ref=\"ElTree\" :data=\"sceneStructure\" default-expand-all :highlight-current=\"true\" node-key=\"uuid\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"\n        :current-node-key=\"current\">\n            <template #default=\"{ data }\">\n                <span class=\"el-tree-node__label\" :id=\"data.uuid\">{{ data.name }}</span>\n            </template>\n        </el-tree>\n        <div class=\"object\" >\n            <div class=\"Panel\" >\n                <div class=\"Row\">\n                    <span class=\"Text\">类型</span>\n                    <span class=\"Text\">{{Object3D.type}}</span>\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\">识别码</span>\n                    <input class=\"UUIDInput\" autocomplete=\"off\" disabled=\"\" v-model=\"Object3D.uuid\">\n                    <!-- <button class=\"Button\" style=\"margin-left: 7px;\">更新</button> -->\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\">名称</span>\n                    <input class=\"NameInput\" autocomplete=\"off\" v-model=\"Object3D.name\" @change=\"RefreshNodeName\">\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\" >位置</span>\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.x\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.y\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.position.z\">\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\" >旋转</span>\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationX\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationY\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"RotationZ\">\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\" >缩放</span>\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.x\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.y\">\n                    <input class=\"Number\" autocomplete=\"off\" v-model=\"Object3D.scale.z\">\n                </div>\n                <div class=\"Row\">\n                    <span class=\"Text\" >可见性</span>\n                    <el-checkbox v-model=\"Object3D.visible\"></el-checkbox>\n                </div>\n                 <div class=\"Row\">\n                    <span class=\"Text\" >颜色</span>\n                    <div class=\"block\">\n                       <el-color-picker v-model=\"color\" ></el-color-picker>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n        </el-scrollbar>\n    </div>\n\n</template>\n\n<script>\n /* 需要添加几个方法和需求：\n 1、改变颜色 √\n 2、改变欧拉角变化 √\n 3、改变名称，场景树也改变 √\n 4、根据模型不同显示的编辑也不同 0\n 5、设置方法 √\n 6、撤销与反撤销\n 7、保存与导入\n 8、音频可视化已写好的模型\n 9、根据文件选择可视化\n 10、防止刷新\n 11、帮助 √\n 12、组对象控制\n 13、helper的tree刷新问题\n 14、首页\n 15、文件区（是否需要数据库？）\n 16、历史记录？\n  */\nimport * as THREE from 'three/build/three.module.js'\nimport GetUUID from '../../../../lib/Getuuid';\nimport { Group, Object3D, Vector3 } from '../../../../lib/three.module';\nexport default {\n\n    name:'structure',\n    mounted() {\n        this.RefreshSceneTree();//刷新生效\n        this.GetObject();\n        this.GetSceneObject();\n\n    },\n    computed:{\n        RotationX:{\n            get(){\n                return THREE.Math.radToDeg(this.Object3D.rotation.x);\n            },\n            set(X){\n                this.Object3D.rotateX(THREE.Math.degToRad(X));\n            }\n        },\n        RotationY:{\n            get(){\n                return THREE.Math.radToDeg(this.Object3D.rotation.y);\n            },\n             set(Y){\n                this.Object3D.rotateY(THREE.Math.degToRad(Y));\n            }\n        },\n        RotationZ:{\n            get(){\n                return THREE.Math.radToDeg(this.Object3D.rotation.z);\n            },\n             set(Z){\n                this.Object3D.rotateZ(THREE.Math.degToRad(Z));\n            }\n        },\n        color:{\n            get(){\n                if(this.Object3D.hasOwnProperty('isTrans')){\n                    return this.Object3D.color;\n                }\n                else{\n                    if(this.Object3D.name.indexOf('音频线')!=-1){\n                        return '#'+this.Object3D.children[0].material.color.getHexString();\n                    }else if(this.Object3D.name.indexOf('音频谱')!=-1){\n                         return '#'+this.Object3D.children[0].children[0].material.color.getHexString();\n                    }\n                    else{\n                         if(this.Object3D.material){\n                //如果材质存在\n                return '#'+this.Object3D.material.color.getHexString();\n\n                }else{\n                //有些对象直接可以获取color或者是从控制面板传入的对象\n                     return '#'+this.Object3D.color.getHexString();\n                }\n                    }\n\n                }\n\n            },\n            set(newcolor){\n                if(this.Object3D.name.indexOf('音频线')!=-1||this.Object3D.name.indexOf('音频谱')!=-1){\n                     this.Object3D.traverse(function(child) {\n                    if (child.isLine)\n                        child.material = new THREE.LineBasicMaterial({\n                         color: newcolor\n                        });\n                        // if(child.isMesh){\n                        //     child.material = new THREE.MeshPhongMaterial({\n                        //     color: newcolor\n                        //     });\n                        // }\n                        //说明是barGroup\n                        if(child.type=='Group'){\n                            child.children[0].material = new THREE.MeshPhongMaterial({\n                            color: newcolor\n                            });\n                        }\n                    });\n                }\n                else{\n                    if(this.Object3D.material){\n                 this.Object3D.material.color.set(newcolor);\n            }else if(this.Object3D.type.indexOf(\"Light\")!=-1){\n                //说明是光\n                this.Object3D.color.set(newcolor);\n            }\n                }\n\n            }\n        }\n    },\n    watch:{\n        //监听当前current变化\n        current(uuid){\n            if(uuid){\n                this.$refs.ElTree.setCurrentKey(uuid);\n            }\n            else{\n                this.$refs.ElTree.setCurrentKey(null);\n            }\n\n        }\n    },\n    methods: {\n        // getScene(){\n        //     console.log(this.$parent.$parent.$parent.getScene());\n        // }\n        // ObjectTranslate(SceneObject){\n\n        //      let Object3D={\n        //         name:SceneObject.name,\n        //         uuid:SceneObject.uuid,\n        //         type:SceneObject.type,\n        //         position:SceneObject.position,\n        //         //欧拉角\n        //         rotation:new THREE.Vector3(THREE.Math.radToDeg(SceneObject.rotation.x),THREE.Math.radToDeg(SceneObject.rotation.y),THREE.Math.radToDeg(SceneObject.rotation.z)),\n        //         scale:SceneObject.scale,\n        //         visible:SceneObject.visible,\n        //         color:'#000000',\n        //         isTrans:true//判断选取对象方法传入的对象是否是原生three对象\n\n        //     };\n        //     if(SceneObject.material){\n        //         //如果材质存在\n        //         Object3D.color='#'+SceneObject.material.color.getHexString();\n\n        //     }else{\n        //         //有些对象直接可以获取color或者是从控制面板传入的对象\n        //         Object3D.color='#'+SceneObject.color.getHexString();\n        //     }\n        //     return Object3D;\n\n\n        // },\n        // selectObjChange(color){\n        //     if(this.Object3D.material){\n        //          this.Object3D.material.color.set(color);\n        //     }else if(this.Object3D.light){\n        //         this.Object3D.color.set(color);\n        //     }\n\n        // },\n        // getChildren(obj){\n        //     if(!obj.children.children){\n        //         return obj;\n        //     }else{\n        //         while(obj.children){\n        //             obj=obj.children;\n        //         }\n        //         return obj;\n        //     }\n        // },\n        initObject(){\n             let Object3D={\n                name:'',\n                uuid:'',\n                type:'',\n                position:new THREE.Vector3(),\n                //欧拉角\n                rotation:new THREE.Euler(),\n                scale:new THREE.Vector3(),\n                visible:true,\n                color:'#111111',\n                isTrans:true\n            };\n            return Object3D;\n        },\n        ObjectTo3D(){\n\n        },\n        GetObject(){\n            this.$bus.$on('getEvent',(object)=>{\n                //选中物体触发点击事件\n               this.handleNodeClick(object);\n\n\n            });\n        },\n        GetSceneObject(){\n            this.$bus.$on('responseObj',(object)=>{\n                if(object.type.indexOf(\"Mesh\")!=-1||object.type.indexOf(\"Group\")!=-1){\n                    //说明是材质物体\n                    this.Object3D=object;\n                }\n                else if(object.type.indexOf(\"Light\")!=-1){\n                    //说明是光\n                    this.Object3D=object;\n                    console.log(this.Object3D);\n                }\n                else if(object.type.indexOf(\"Helper\")!=-1){\n                    //说明是辅助工具\n                    this.Object3D=this.initObject();\n                }\n\n\n\n            });\n        },\n        refreshNodeByuuid(list){\n            //遍历场景树结构更改名称\n            list.map(c=>{\n                if(c.uuid&&c.uuid==this.Object3D.uuid){\n                    c.name=this.Object3D.name;\n                    return;\n                }\n               else{\n\n                if(c.children&&c.children.length>0){\n                    this.refreshNodeByuuid(c.children);\n                }\n             }\n            })\n        },\n        RefreshNodeName(){\n            this.refreshNodeByuuid(this.sceneStructure);\n        },\n        RefreshSceneTree(){\n            //每次场景结构改变刷新场景树\n                this.$bus.$on('sceneChanged',(scenelist)=>{\n               let sceneTree=[];\n               let lightTree=[];\n               let helperTree=[];\n               this.createSceneStructure(scenelist,sceneTree,lightTree,helperTree);\n                this.sceneStructure[0].children=sceneTree;\n                this.sceneStructure[2].children=lightTree;\n                this.sceneStructure[3].children=helperTree;\n\n            });\n        },\n        createSceneStructure(scenelist,sceneTree,lightTree,helperTree){\n            scenelist.map(c=>{\n\n                let data={\n                    name:c.name,\n                    type:c.type,\n                    uuid:c.uuid\n                };\n                if(c.children&&c.children.length>0){\n                    data.children=[];\n                    this.createSceneStructure(c.children,data.children,data.children,data.children);\n                }\n                if(c.type.indexOf(\"Mesh\")!=-1||c.type.indexOf(\"Group\")!=-1||c.type.indexOf(\"Object3D\")!=-1){\n                    //说明是材质物体\n                    if(c.parent.name!=\"音频线\"&&c.parent.name!=\"音频谱\"){\n                        sceneTree.push(data);\n                    }\n\n                }\n                else if(c.type.indexOf(\"Light\")!=-1){\n                    //说明是光\n                    lightTree.push(data);\n                }\n                else if(c.type.indexOf(\"Helper\")!=-1){\n                    //说明是辅助工具\n                    helperTree.push(data);\n                }\n\n            })\n        },\n        // findObject(){\n        //     this.$bus.$on('emitObject',(object)=>{\n        //         if(object==null){\n        //             this.Object3D=this.initObject();\n        //         }\n        //             else{\n        //                 this.Object3D=object;\n        //                 }\n        //         });\n        // },\n         handleNodeClick(target) {\n\n             if(target!=null&&target.type.indexOf('Camera')==-1&&target.hasOwnProperty('uuid')){\n                 //对象不为空：点击场景空白地方\n                 //相机不能进行操作\n                 //树基本结构标签点击不触发\n                 this.current=target.uuid;\n                 if(!target.hasOwnProperty('isTrans')&&target.hasOwnProperty('visible')){\n                     //说明是场景中拿到的对象\n                     this.Object3D=target;\n                 }\n                 else{\n                     //说明是从点击场景树进行的选择物体，需要到editor中拿当前对象\n                     //触发一系列查询并修改object事件\n                     this.$bus.$emit('requestObj',target);\n                     console.log(target)\n\n                 }\n             }\n            else{\n                this.current='';\n                this.Object3D=this.initObject();\n            }\n            this.$bus.$emit('checkEvent',target);\n        // if (target.uuid && target.uuid !== this.current.uuid) {\n        //     this.current = target;\n        //      //console.log(this.current.uuid);\n        //     // console.log(target.uuid)\n\n        // }\n        // if(target.uuid){\n        //     this.$refs.ElTree.setCurrentKey(target.uuid)\n        // }\n\n    }\n    },\n   data() {\n       return {\n            current:'',\n            checked:true,\n            Object3D:{\n                name:'',\n                uuid:'',\n                type:'',\n                position:new THREE.Vector3(),\n                //欧拉角\n                rotation:new THREE.Euler(),\n                scale:new THREE.Vector3(),\n                visible:true,\n                color:'#111111',\n                isTrans:true\n            },\n            defaultProps:{\n\n                children: 'children',\n                label: 'name'\n            },\n            sceneStructure: [\n                { name: '场景', type: 'base', children: [] },\n                { name: '摄像机', type: 'cameraGroup', children: [\n                    {\n                        name: '透视相机',\n                        type:'perspectiveCamera',\n                        children:[]\n                    }\n                ] },\n                { name: '光源', type: 'lightGroup', children: [] },\n                {name: '辅助工具',type: 'helper',children:[]}\n            ],\n       }\n   },\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.structure {\n    height:530px;\n    width: 100%;\n     overflow-y : auto;\n    background: #281928;\n    ::v-deep .el-tree {\n        background: unset;\n        border-bottom: 4px solid #432d43;\n        .el-tree-node {\n            .el-tree-node__content {\n                background: unset;\n                &:hover {\n                    background: #ffa7fb;\n                }\n                .el-tree-node__label {\n                    color: white;\n                    font-size: 10px;\n                }\n            }\n            .el-tree-node__children {\n                background: #281928;\n            }\n        }\n        .is-current {\n            > .el-tree-node__content {\n                background: violet !important;\n            }\n        }\n    }\n    .object{\n        .Panel{\n            border-top: 0px;\n            padding-top: 20px;\n            display: block;\n            border-bottom: 4px solid #432d43;\n            .Row{\n                    display: flex;\n                    align-items: center;\n                    min-height: 24px;\n                    margin-bottom: 10px;\n                .UUIDInput{\n                    padding: 2px;\n                    border: 1px solid transparent;\n                    border-radius: 30px;\n                     color: violet!important;\n                    width: 150px;\n                    font-size: 12px;\n                }\n                .NameInput{\n                    padding: 2px;\n                    border: 1px solid transparent;\n                    width: 150px;\n                    border-radius: 30px;\n                    font-size: 12px;\n                }\n                .Number{\n                    cursor: ns-resize;\n                    background-color: transparent;\n                    width: 50px;\n                    color: violet!important;\n                    border-radius: 30px;\n                    font-size: 10px;\n                }\n                .Text{\n                    cursor: default;\n                    display: inline-block;\n                    text-indent:20px;\n                    width: 90px;\n                    color: white;\n                    font-size: 10px;\n                }\n            }\n\n        }\n\n    }\n}\n</style>\n<style lang=\"scss\">\n    .el-checkbox__input.is-checked .el-checkbox__inner, .el-checkbox__input.is-indeterminate\n    .el-checkbox__inner{\n        background-color:violet;\n        border-color:violet;\n    }\n    .el-checkbox__input.is-checked + .el-checkbox__label {\n        color: violet;\n    }\n    .el-checkbox.is-bordered.is-checked{\n        border-color: violet;\n    }\n    .el-checkbox__input.is-focus .el-checkbox__inner{\n        border-color:  violet;\n    }\n</style>\n"]}]}